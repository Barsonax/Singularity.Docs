### YamlMime:XRefMap
sorted: true
references:
- uid: Singularity
  name: Singularity
  href: api/Singularity.html
  commentId: N:Singularity
  fullName: Singularity
  nameWithType: Singularity
- uid: Singularity.Collections
  name: Singularity.Collections
  href: api/Singularity.Collections.html
  commentId: N:Singularity.Collections
  fullName: Singularity.Collections
  nameWithType: Singularity.Collections
- uid: Singularity.Collections.LifetimeCollection
  name: LifetimeCollection
  href: api/Singularity.Collections.LifetimeCollection.html
  commentId: T:Singularity.Collections.LifetimeCollection
  fullName: Singularity.Collections.LifetimeCollection
  nameWithType: LifetimeCollection
- uid: Singularity.Collections.LifetimeCollection.Contains(Singularity.ILifetime)
  name: Contains(ILifetime)
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_Contains_Singularity_ILifetime_
  commentId: M:Singularity.Collections.LifetimeCollection.Contains(Singularity.ILifetime)
  fullName: Singularity.Collections.LifetimeCollection.Contains(Singularity.ILifetime)
  nameWithType: LifetimeCollection.Contains(ILifetime)
- uid: Singularity.Collections.LifetimeCollection.Contains*
  name: Contains
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_Contains_
  commentId: Overload:Singularity.Collections.LifetimeCollection.Contains
  isSpec: "True"
  fullName: Singularity.Collections.LifetimeCollection.Contains
  nameWithType: LifetimeCollection.Contains
- uid: Singularity.Collections.LifetimeCollection.Empty
  name: Empty
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_Empty
  commentId: P:Singularity.Collections.LifetimeCollection.Empty
  fullName: Singularity.Collections.LifetimeCollection.Empty
  nameWithType: LifetimeCollection.Empty
- uid: Singularity.Collections.LifetimeCollection.Empty*
  name: Empty
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_Empty_
  commentId: Overload:Singularity.Collections.LifetimeCollection.Empty
  isSpec: "True"
  fullName: Singularity.Collections.LifetimeCollection.Empty
  nameWithType: LifetimeCollection.Empty
- uid: Singularity.Collections.LifetimeCollection.op_Implicit(Singularity.ILifetime[])~Singularity.Collections.LifetimeCollection
  name: Implicit(ILifetime[] to LifetimeCollection)
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_op_Implicit_Singularity_ILifetime____Singularity_Collections_LifetimeCollection
  commentId: M:Singularity.Collections.LifetimeCollection.op_Implicit(Singularity.ILifetime[])~Singularity.Collections.LifetimeCollection
  name.vb: Widening(ILifetime() to LifetimeCollection)
  fullName: Singularity.Collections.LifetimeCollection.Implicit(Singularity.ILifetime[] to Singularity.Collections.LifetimeCollection)
  fullName.vb: Singularity.Collections.LifetimeCollection.Widening(Singularity.ILifetime() to Singularity.Collections.LifetimeCollection)
  nameWithType: LifetimeCollection.Implicit(ILifetime[] to LifetimeCollection)
  nameWithType.vb: LifetimeCollection.Widening(ILifetime() to LifetimeCollection)
- uid: Singularity.Collections.LifetimeCollection.op_Implicit*
  name: Implicit
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_op_Implicit_
  commentId: Overload:Singularity.Collections.LifetimeCollection.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Singularity.Collections.LifetimeCollection.Implicit
  fullName.vb: Singularity.Collections.LifetimeCollection.Widening
  nameWithType: LifetimeCollection.Implicit
  nameWithType.vb: LifetimeCollection.Widening
- uid: Singularity.Collections.LifetimeCollection.System#Collections#Generic#IEnumerable{Singularity#ILifetime}#GetEnumerator
  name: IEnumerable<ILifetime>.GetEnumerator()
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_System_Collections_Generic_IEnumerable_Singularity_ILifetime__GetEnumerator
  commentId: M:Singularity.Collections.LifetimeCollection.System#Collections#Generic#IEnumerable{Singularity#ILifetime}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator()
  fullName: Singularity.Collections.LifetimeCollection.System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator()
  nameWithType: LifetimeCollection.IEnumerable<ILifetime>.GetEnumerator()
  nameWithType.vb: LifetimeCollection.System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator()
- uid: Singularity.Collections.LifetimeCollection.System#Collections#Generic#IEnumerable{Singularity#ILifetime}#GetEnumerator*
  name: IEnumerable<ILifetime>.GetEnumerator
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_System_Collections_Generic_IEnumerable_Singularity_ILifetime__GetEnumerator_
  commentId: Overload:Singularity.Collections.LifetimeCollection.System#Collections#Generic#IEnumerable{Singularity#ILifetime}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator
  fullName: Singularity.Collections.LifetimeCollection.System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator
  nameWithType: LifetimeCollection.IEnumerable<ILifetime>.GetEnumerator
  nameWithType.vb: LifetimeCollection.System.Collections.Generic.IEnumerable<Singularity.ILifetime>.GetEnumerator
- uid: Singularity.Collections.LifetimeCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.LifetimeCollection.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.LifetimeCollection.System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LifetimeCollection.IEnumerable.GetEnumerator()
  nameWithType.vb: LifetimeCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.LifetimeCollection.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.LifetimeCollection.html#Singularity_Collections_LifetimeCollection_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.LifetimeCollection.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.LifetimeCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType: LifetimeCollection.IEnumerable.GetEnumerator
  nameWithType.vb: LifetimeCollection.System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2
  name: SinglyLinkedListKeyNode<TKey, TValue>
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html
  commentId: T:Singularity.Collections.SinglyLinkedListKeyNode`2
  name.vb: SinglyLinkedListKeyNode(Of TKey, TValue)
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue)
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue)
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor(System.Nullable{Singularity.Collections.SinglyLinkedListKeyNode{`0,`1}},`0@,`1@)
  name: SinglyLinkedListKeyNode(Nullable<SinglyLinkedListKeyNode<TKey, TValue>>, TKey, TValue)
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2__ctor_System_Nullable_Singularity_Collections_SinglyLinkedListKeyNode__0__1____0___1__
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor(System.Nullable{Singularity.Collections.SinglyLinkedListKeyNode{`0,`1}},`0@,`1@)
  name.vb: SinglyLinkedListKeyNode(Nullable(Of SinglyLinkedListKeyNode(Of TKey, TValue)), ByRef TKey, ByRef TValue)
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode(System.Nullable<Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>>, TKey, TValue)
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode(System.Nullable(Of Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue)), ByRef TKey, ByRef TValue)
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode(Nullable<SinglyLinkedListKeyNode<TKey, TValue>>, TKey, TValue)
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode(Nullable(Of SinglyLinkedListKeyNode(Of TKey, TValue)), ByRef TKey, ByRef TValue)
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor*
  name: SinglyLinkedListKeyNode
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2__ctor_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator
  name: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html
  commentId: T:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator
  name.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current*
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  name: Dispose()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Dispose
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose*
  name: Dispose
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Dispose_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  name: MoveNext()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_MoveNext
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext*
  name: MoveNext
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_MoveNext_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  name: Reset()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Reset
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset*
  name: Reset
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Reset_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Key
  name: Key
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Key
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Key
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Key
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Key
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Key
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Key
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Next
  name: Next
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Next
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Next
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Next
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Next
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Next
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Next
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  name: IEnumerable<TValue>.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_Generic_IEnumerable_TValue__GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable<TValue>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator*
  name: IEnumerable<TValue>.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_Generic_IEnumerable_TValue__GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable<TValue>.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Value
  name: Value
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Value
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Value
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Value
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Value
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Value
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Value
- uid: Singularity.Collections.SinglyLinkedListNode`1
  name: SinglyLinkedListNode<T>
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html
  commentId: T:Singularity.Collections.SinglyLinkedListNode`1
  name.vb: SinglyLinkedListNode(Of T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T)
  nameWithType: SinglyLinkedListNode<T>
  nameWithType.vb: SinglyLinkedListNode(Of T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor(`0@)
  name: SinglyLinkedListNode(T)
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor__0__
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.#ctor(`0@)
  name.vb: SinglyLinkedListNode(ByRef T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode(T)
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode(ByRef T)
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode(T)
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode(ByRef T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor(System.Nullable{Singularity.Collections.SinglyLinkedListNode{`0}},`0@)
  name: SinglyLinkedListNode(Nullable<SinglyLinkedListNode<T>>, T)
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor_System_Nullable_Singularity_Collections_SinglyLinkedListNode__0____0__
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.#ctor(System.Nullable{Singularity.Collections.SinglyLinkedListNode{`0}},`0@)
  name.vb: SinglyLinkedListNode(Nullable(Of SinglyLinkedListNode(Of T)), ByRef T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode(System.Nullable<Singularity.Collections.SinglyLinkedListNode<T>>, T)
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode(System.Nullable(Of Singularity.Collections.SinglyLinkedListNode(Of T)), ByRef T)
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode(Nullable<SinglyLinkedListNode<T>>, T)
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode(Nullable(Of SinglyLinkedListNode(Of T)), ByRef T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor*
  name: SinglyLinkedListNode
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.#ctor
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator
  name: SinglyLinkedListNode<T>.Enumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html
  commentId: T:Singularity.Collections.SinglyLinkedListNode`1.Enumerator
  name.vb: SinglyLinkedListNode(Of T).Enumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator
  nameWithType: SinglyLinkedListNode<T>.Enumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current*
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  name: Dispose()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Dispose
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Dispose()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Dispose()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Dispose()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Dispose()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose*
  name: Dispose
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Dispose_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Dispose
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Dispose
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Dispose
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Dispose
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_MoveNext
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.MoveNext()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.MoveNext()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.MoveNext()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.MoveNext()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_MoveNext_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.MoveNext
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.MoveNext
  nameWithType: SinglyLinkedListNode<T>.Enumerator.MoveNext
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.MoveNext
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  name: Reset()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Reset
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Reset()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Reset()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Reset()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Reset()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset*
  name: Reset
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Reset_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Reset
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Reset
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Reset
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Reset
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Next
  name: Next
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_Next
  commentId: F:Singularity.Collections.SinglyLinkedListNode`1.Next
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Next
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Next
  nameWithType: SinglyLinkedListNode<T>.Next
  nameWithType.vb: SinglyLinkedListNode(Of T).Next
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_Generic_IEnumerable_T__GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  name: IEnumerable<T>.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_Generic_IEnumerable_T__GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.IEnumerable<T>.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.IEnumerable.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Value
  name: Value
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_Value
  commentId: F:Singularity.Collections.SinglyLinkedListNode`1.Value
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Value
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Value
  nameWithType: SinglyLinkedListNode<T>.Value
  nameWithType.vb: SinglyLinkedListNode(Of T).Value
- uid: Singularity.Container
  name: Container
  href: api/Singularity.Container.html
  commentId: T:Singularity.Container
  fullName: Singularity.Container
  nameWithType: Container
- uid: Singularity.Container.#ctor(System.Collections.Generic.IEnumerable{Singularity.IModule},System.Nullable{Singularity.SingularitySettings})
  name: Container(IEnumerable<IModule>, Nullable<SingularitySettings>)
  href: api/Singularity.Container.html#Singularity_Container__ctor_System_Collections_Generic_IEnumerable_Singularity_IModule__System_Nullable_Singularity_SingularitySettings__
  commentId: M:Singularity.Container.#ctor(System.Collections.Generic.IEnumerable{Singularity.IModule},System.Nullable{Singularity.SingularitySettings})
  name.vb: Container(IEnumerable(Of IModule), Nullable(Of SingularitySettings))
  fullName: Singularity.Container.Container(System.Collections.Generic.IEnumerable<Singularity.IModule>, System.Nullable<Singularity.SingularitySettings>)
  fullName.vb: Singularity.Container.Container(System.Collections.Generic.IEnumerable(Of Singularity.IModule), System.Nullable(Of Singularity.SingularitySettings))
  nameWithType: Container.Container(IEnumerable<IModule>, Nullable<SingularitySettings>)
  nameWithType.vb: Container.Container(IEnumerable(Of IModule), Nullable(Of SingularitySettings))
- uid: Singularity.Container.#ctor(System.Nullable{System.Action{Singularity.ContainerBuilder}},System.Nullable{Singularity.SingularitySettings})
  name: Container(Nullable<Action<ContainerBuilder>>, Nullable<SingularitySettings>)
  href: api/Singularity.Container.html#Singularity_Container__ctor_System_Nullable_System_Action_Singularity_ContainerBuilder___System_Nullable_Singularity_SingularitySettings__
  commentId: M:Singularity.Container.#ctor(System.Nullable{System.Action{Singularity.ContainerBuilder}},System.Nullable{Singularity.SingularitySettings})
  name.vb: Container(Nullable(Of Action(Of ContainerBuilder)), Nullable(Of SingularitySettings))
  fullName: Singularity.Container.Container(System.Nullable<System.Action<Singularity.ContainerBuilder>>, System.Nullable<Singularity.SingularitySettings>)
  fullName.vb: Singularity.Container.Container(System.Nullable(Of System.Action(Of Singularity.ContainerBuilder)), System.Nullable(Of Singularity.SingularitySettings))
  nameWithType: Container.Container(Nullable<Action<ContainerBuilder>>, Nullable<SingularitySettings>)
  nameWithType.vb: Container.Container(Nullable(Of Action(Of ContainerBuilder)), Nullable(Of SingularitySettings))
- uid: Singularity.Container.#ctor*
  name: Container
  href: api/Singularity.Container.html#Singularity_Container__ctor_
  commentId: Overload:Singularity.Container.#ctor
  isSpec: "True"
  fullName: Singularity.Container.Container
  nameWithType: Container.Container
- uid: Singularity.Container.BeginScope
  name: BeginScope()
  href: api/Singularity.Container.html#Singularity_Container_BeginScope
  commentId: M:Singularity.Container.BeginScope
  fullName: Singularity.Container.BeginScope()
  nameWithType: Container.BeginScope()
- uid: Singularity.Container.BeginScope*
  name: BeginScope
  href: api/Singularity.Container.html#Singularity_Container_BeginScope_
  commentId: Overload:Singularity.Container.BeginScope
  isSpec: "True"
  fullName: Singularity.Container.BeginScope
  nameWithType: Container.BeginScope
- uid: Singularity.Container.Dispose
  name: Dispose()
  href: api/Singularity.Container.html#Singularity_Container_Dispose
  commentId: M:Singularity.Container.Dispose
  fullName: Singularity.Container.Dispose()
  nameWithType: Container.Dispose()
- uid: Singularity.Container.Dispose*
  name: Dispose
  href: api/Singularity.Container.html#Singularity_Container_Dispose_
  commentId: Overload:Singularity.Container.Dispose
  isSpec: "True"
  fullName: Singularity.Container.Dispose
  nameWithType: Container.Dispose
- uid: Singularity.Container.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.Container.html#Singularity_Container_GetInstance_System_Type_
  commentId: M:Singularity.Container.GetInstance(System.Type)
  fullName: Singularity.Container.GetInstance(System.Type)
  nameWithType: Container.GetInstance(Type)
- uid: Singularity.Container.GetInstance*
  name: GetInstance
  href: api/Singularity.Container.html#Singularity_Container_GetInstance_
  commentId: Overload:Singularity.Container.GetInstance
  isSpec: "True"
  fullName: Singularity.Container.GetInstance
  nameWithType: Container.GetInstance
- uid: Singularity.Container.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.Container.html#Singularity_Container_GetInstance__1
  commentId: M:Singularity.Container.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.Container.GetInstance<T>()
  fullName.vb: Singularity.Container.GetInstance(Of T)()
  nameWithType: Container.GetInstance<T>()
  nameWithType.vb: Container.GetInstance(Of T)()
- uid: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name: GetNestedContainer(IEnumerable<IModule>)
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_System_Collections_Generic_IEnumerable_Singularity_IModule__
  commentId: M:Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name.vb: GetNestedContainer(IEnumerable(Of IModule))
  fullName: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable<Singularity.IModule>)
  fullName.vb: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable(Of Singularity.IModule))
  nameWithType: Container.GetNestedContainer(IEnumerable<IModule>)
  nameWithType.vb: Container.GetNestedContainer(IEnumerable(Of IModule))
- uid: Singularity.Container.GetNestedContainer(System.Nullable{System.Action{Singularity.ContainerBuilder}})
  name: GetNestedContainer(Nullable<Action<ContainerBuilder>>)
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_System_Nullable_System_Action_Singularity_ContainerBuilder___
  commentId: M:Singularity.Container.GetNestedContainer(System.Nullable{System.Action{Singularity.ContainerBuilder}})
  name.vb: GetNestedContainer(Nullable(Of Action(Of ContainerBuilder)))
  fullName: Singularity.Container.GetNestedContainer(System.Nullable<System.Action<Singularity.ContainerBuilder>>)
  fullName.vb: Singularity.Container.GetNestedContainer(System.Nullable(Of System.Action(Of Singularity.ContainerBuilder)))
  nameWithType: Container.GetNestedContainer(Nullable<Action<ContainerBuilder>>)
  nameWithType.vb: Container.GetNestedContainer(Nullable(Of Action(Of ContainerBuilder)))
- uid: Singularity.Container.GetNestedContainer*
  name: GetNestedContainer
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_
  commentId: Overload:Singularity.Container.GetNestedContainer
  isSpec: "True"
  fullName: Singularity.Container.GetNestedContainer
  nameWithType: Container.GetNestedContainer
- uid: Singularity.Container.IsDisposed
  name: IsDisposed
  href: api/Singularity.Container.html#Singularity_Container_IsDisposed
  commentId: P:Singularity.Container.IsDisposed
  fullName: Singularity.Container.IsDisposed
  nameWithType: Container.IsDisposed
- uid: Singularity.Container.IsDisposed*
  name: IsDisposed
  href: api/Singularity.Container.html#Singularity_Container_IsDisposed_
  commentId: Overload:Singularity.Container.IsDisposed
  isSpec: "True"
  fullName: Singularity.Container.IsDisposed
  nameWithType: Container.IsDisposed
- uid: Singularity.Container.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.Container.html#Singularity_Container_LateInject_System_Object_
  commentId: M:Singularity.Container.LateInject(System.Object)
  fullName: Singularity.Container.LateInject(System.Object)
  nameWithType: Container.LateInject(Object)
- uid: Singularity.Container.LateInject*
  name: LateInject
  href: api/Singularity.Container.html#Singularity_Container_LateInject_
  commentId: Overload:Singularity.Container.LateInject
  isSpec: "True"
  fullName: Singularity.Container.LateInject
  nameWithType: Container.LateInject
- uid: Singularity.Container.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.Container.html#Singularity_Container_LateInjectAll_
  commentId: Overload:Singularity.Container.LateInjectAll
  isSpec: "True"
  fullName: Singularity.Container.LateInjectAll
  nameWithType: Container.LateInjectAll
- uid: Singularity.Container.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.Container.html#Singularity_Container_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.Container.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.Container.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.Container.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Container.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: Container.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.ContainerBuilder
  name: ContainerBuilder
  href: api/Singularity.ContainerBuilder.html
  commentId: T:Singularity.ContainerBuilder
  fullName: Singularity.ContainerBuilder
  nameWithType: ContainerBuilder
- uid: Singularity.ContainerBuilder.Container
  name: Container
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Container
  commentId: P:Singularity.ContainerBuilder.Container
  fullName: Singularity.ContainerBuilder.Container
  nameWithType: ContainerBuilder.Container
- uid: Singularity.ContainerBuilder.Container*
  name: Container
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Container_
  commentId: Overload:Singularity.ContainerBuilder.Container
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.Container
  nameWithType: ContainerBuilder.Container
- uid: Singularity.ContainerBuilder.Decorate(System.Type,System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedDecoratorConfigurator}},System.String,System.Int32)
  name: Decorate(Type, Type, Nullable<Action<WeaklyTypedDecoratorConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_System_Type_System_Type_System_Nullable_System_Action_Singularity_WeaklyTypedDecoratorConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate(System.Type,System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedDecoratorConfigurator}},System.String,System.Int32)
  name.vb: Decorate(Type, Type, Nullable(Of Action(Of WeaklyTypedDecoratorConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate(System.Type, System.Type, System.Nullable<System.Action<Singularity.WeaklyTypedDecoratorConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(System.Type, System.Type, System.Nullable(Of System.Action(Of Singularity.WeaklyTypedDecoratorConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate(Type, Type, Nullable<Action<WeaklyTypedDecoratorConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Type, Type, Nullable(Of Action(Of WeaklyTypedDecoratorConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.Decorate(System.Type,System.Type[],System.Nullable{System.Action{Singularity.WeaklyTypedDecoratorConfigurator}},System.String,System.Int32)
  name: Decorate(Type, Type[], Nullable<Action<WeaklyTypedDecoratorConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_System_Type_System_Type___System_Nullable_System_Action_Singularity_WeaklyTypedDecoratorConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate(System.Type,System.Type[],System.Nullable{System.Action{Singularity.WeaklyTypedDecoratorConfigurator}},System.String,System.Int32)
  name.vb: Decorate(Type, Type(), Nullable(Of Action(Of WeaklyTypedDecoratorConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate(System.Type, System.Type[], System.Nullable<System.Action<Singularity.WeaklyTypedDecoratorConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(System.Type, System.Type(), System.Nullable(Of System.Action(Of Singularity.WeaklyTypedDecoratorConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate(Type, Type[], Nullable<Action<WeaklyTypedDecoratorConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Type, Type(), Nullable(Of Action(Of WeaklyTypedDecoratorConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.Decorate*
  name: Decorate
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_
  commentId: Overload:Singularity.ContainerBuilder.Decorate
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.Decorate
  nameWithType: ContainerBuilder.Decorate
- uid: Singularity.ContainerBuilder.Decorate``2(System.Nullable{System.Action{Singularity.StronglyTypedDecoratorConfigurator{``0,``1}}},System.String,System.Int32)
  name: Decorate<TDependency, TDecorator>(Nullable<Action<StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate__2_System_Nullable_System_Action_Singularity_StronglyTypedDecoratorConfigurator___0___1____System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate``2(System.Nullable{System.Action{Singularity.StronglyTypedDecoratorConfigurator{``0,``1}}},System.String,System.Int32)
  name.vb: Decorate(Of TDependency, TDecorator)(Nullable(Of Action(Of StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator))), String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate<TDependency, TDecorator>(System.Nullable<System.Action<Singularity.StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(Of TDependency, TDecorator)(System.Nullable(Of System.Action(Of Singularity.StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator))), System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate<TDependency, TDecorator>(Nullable<Action<StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Of TDependency, TDecorator)(Nullable(Of Action(Of StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator))), String, Int32)
- uid: Singularity.ContainerBuilder.LateInject(System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedLateInjectorConfigurator}},System.String,System.Int32)
  name: LateInject(Type, Nullable<Action<WeaklyTypedLateInjectorConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject_System_Type_System_Nullable_System_Action_Singularity_WeaklyTypedLateInjectorConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.LateInject(System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedLateInjectorConfigurator}},System.String,System.Int32)
  name.vb: LateInject(Type, Nullable(Of Action(Of WeaklyTypedLateInjectorConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.LateInject(System.Type, System.Nullable<System.Action<Singularity.WeaklyTypedLateInjectorConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.LateInject(System.Type, System.Nullable(Of System.Action(Of Singularity.WeaklyTypedLateInjectorConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.LateInject(Type, Nullable<Action<WeaklyTypedLateInjectorConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.LateInject(Type, Nullable(Of Action(Of WeaklyTypedLateInjectorConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.LateInject*
  name: LateInject
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject_
  commentId: Overload:Singularity.ContainerBuilder.LateInject
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.LateInject
  nameWithType: ContainerBuilder.LateInject
- uid: Singularity.ContainerBuilder.LateInject``1(System.Nullable{System.Action{Singularity.StronglyTypedLateInjectorConfigurator{``0}}},System.String,System.Int32)
  name: LateInject<TInstance>(Nullable<Action<StronglyTypedLateInjectorConfigurator<TInstance>>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject__1_System_Nullable_System_Action_Singularity_StronglyTypedLateInjectorConfigurator___0____System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.LateInject``1(System.Nullable{System.Action{Singularity.StronglyTypedLateInjectorConfigurator{``0}}},System.String,System.Int32)
  name.vb: LateInject(Of TInstance)(Nullable(Of Action(Of StronglyTypedLateInjectorConfigurator(Of TInstance))), String, Int32)
  fullName: Singularity.ContainerBuilder.LateInject<TInstance>(System.Nullable<System.Action<Singularity.StronglyTypedLateInjectorConfigurator<TInstance>>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.LateInject(Of TInstance)(System.Nullable(Of System.Action(Of Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance))), System.String, System.Int32)
  nameWithType: ContainerBuilder.LateInject<TInstance>(Nullable<Action<StronglyTypedLateInjectorConfigurator<TInstance>>>, String, Int32)
  nameWithType.vb: ContainerBuilder.LateInject(Of TInstance)(Nullable(Of Action(Of StronglyTypedLateInjectorConfigurator(Of TInstance))), String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name: Register(Type, Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Nullable_System_Action_Singularity_WeaklyTypedServiceConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name.vb: Register(Type, Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Nullable<System.Action<Singularity.WeaklyTypedServiceConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Nullable(Of System.Action(Of Singularity.WeaklyTypedServiceConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name: Register(Type, Type, Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Type_System_Nullable_System_Action_Singularity_WeaklyTypedServiceConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Type,System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name.vb: Register(Type, Type, Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Type, System.Nullable<System.Action<Singularity.WeaklyTypedServiceConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Type, System.Nullable(Of System.Action(Of Singularity.WeaklyTypedServiceConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Type, Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Type, Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Type[],System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name: Register(Type, Type[], Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Type___System_Nullable_System_Action_Singularity_WeaklyTypedServiceConfigurator___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Type[],System.Nullable{System.Action{Singularity.WeaklyTypedServiceConfigurator}},System.String,System.Int32)
  name.vb: Register(Type, Type(), Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Type[], System.Nullable<System.Action<Singularity.WeaklyTypedServiceConfigurator>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Type(), System.Nullable(Of System.Action(Of Singularity.WeaklyTypedServiceConfigurator)), System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Type[], Nullable<Action<WeaklyTypedServiceConfigurator>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Type(), Nullable(Of Action(Of WeaklyTypedServiceConfigurator)), String, Int32)
- uid: Singularity.ContainerBuilder.Register*
  name: Register
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_
  commentId: Overload:Singularity.ContainerBuilder.Register
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.Register
  nameWithType: ContainerBuilder.Register
- uid: Singularity.ContainerBuilder.Register``1(System.Nullable{System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``0}}},System.String,System.Int32)
  name: Register<TInstance>(Nullable<Action<StronglyTypedServiceConfigurator<TInstance, TInstance>>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register__1_System_Nullable_System_Action_Singularity_StronglyTypedServiceConfigurator___0___0____System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register``1(System.Nullable{System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``0}}},System.String,System.Int32)
  name.vb: Register(Of TInstance)(Nullable(Of Action(Of StronglyTypedServiceConfigurator(Of TInstance, TInstance))), String, Int32)
  fullName: Singularity.ContainerBuilder.Register<TInstance>(System.Nullable<System.Action<Singularity.StronglyTypedServiceConfigurator<TInstance, TInstance>>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(Of TInstance)(System.Nullable(Of System.Action(Of Singularity.StronglyTypedServiceConfigurator(Of TInstance, TInstance))), System.String, System.Int32)
  nameWithType: ContainerBuilder.Register<TInstance>(Nullable<Action<StronglyTypedServiceConfigurator<TInstance, TInstance>>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Of TInstance)(Nullable(Of Action(Of StronglyTypedServiceConfigurator(Of TInstance, TInstance))), String, Int32)
- uid: Singularity.ContainerBuilder.Register``2(System.Nullable{System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``1}}},System.String,System.Int32)
  name: Register<TDependency, TInstance>(Nullable<Action<StronglyTypedServiceConfigurator<TDependency, TInstance>>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register__2_System_Nullable_System_Action_Singularity_StronglyTypedServiceConfigurator___0___1____System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register``2(System.Nullable{System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``1}}},System.String,System.Int32)
  name.vb: Register(Of TDependency, TInstance)(Nullable(Of Action(Of StronglyTypedServiceConfigurator(Of TDependency, TInstance))), String, Int32)
  fullName: Singularity.ContainerBuilder.Register<TDependency, TInstance>(System.Nullable<System.Action<Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(Of TDependency, TInstance)(System.Nullable(Of System.Action(Of Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance))), System.String, System.Int32)
  nameWithType: ContainerBuilder.Register<TDependency, TInstance>(Nullable<Action<StronglyTypedServiceConfigurator<TDependency, TInstance>>>, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Of TDependency, TInstance)(Nullable(Of Action(Of StronglyTypedServiceConfigurator(Of TDependency, TInstance))), String, Int32)
- uid: Singularity.Duality
  name: Singularity.Duality
  href: api/Singularity.Duality.html
  commentId: N:Singularity.Duality
  fullName: Singularity.Duality
  nameWithType: Singularity.Duality
- uid: Singularity.Duality.Resources
  name: Singularity.Duality.Resources
  href: api/Singularity.Duality.Resources.html
  commentId: N:Singularity.Duality.Resources
  fullName: Singularity.Duality.Resources
  nameWithType: Singularity.Duality.Resources
- uid: Singularity.Duality.Resources.ModuleRef
  name: ModuleRef
  href: api/Singularity.Duality.Resources.ModuleRef.html
  commentId: T:Singularity.Duality.Resources.ModuleRef
  fullName: Singularity.Duality.Resources.ModuleRef
  nameWithType: ModuleRef
- uid: Singularity.Duality.Resources.ModuleRef.#ctor
  name: ModuleRef()
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef__ctor
  commentId: M:Singularity.Duality.Resources.ModuleRef.#ctor
  fullName: Singularity.Duality.Resources.ModuleRef.ModuleRef()
  nameWithType: ModuleRef.ModuleRef()
- uid: Singularity.Duality.Resources.ModuleRef.#ctor*
  name: ModuleRef
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef__ctor_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.#ctor
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.ModuleRef
  nameWithType: ModuleRef.ModuleRef
- uid: Singularity.Duality.Resources.ModuleRef.Assembly
  name: Assembly
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Assembly
  commentId: P:Singularity.Duality.Resources.ModuleRef.Assembly
  fullName: Singularity.Duality.Resources.ModuleRef.Assembly
  nameWithType: ModuleRef.Assembly
- uid: Singularity.Duality.Resources.ModuleRef.Assembly*
  name: Assembly
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Assembly_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Assembly
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Assembly
  nameWithType: ModuleRef.Assembly
- uid: Singularity.Duality.Resources.ModuleRef.Name
  name: Name
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Name
  commentId: P:Singularity.Duality.Resources.ModuleRef.Name
  fullName: Singularity.Duality.Resources.ModuleRef.Name
  nameWithType: ModuleRef.Name
- uid: Singularity.Duality.Resources.ModuleRef.Name*
  name: Name
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Name_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Name
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Name
  nameWithType: ModuleRef.Name
- uid: Singularity.Duality.Resources.ModuleRef.NameSpace
  name: NameSpace
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_NameSpace
  commentId: P:Singularity.Duality.Resources.ModuleRef.NameSpace
  fullName: Singularity.Duality.Resources.ModuleRef.NameSpace
  nameWithType: ModuleRef.NameSpace
- uid: Singularity.Duality.Resources.ModuleRef.NameSpace*
  name: NameSpace
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_NameSpace_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.NameSpace
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.NameSpace
  nameWithType: ModuleRef.NameSpace
- uid: Singularity.Duality.Resources.ModuleRef.ToString
  name: ToString()
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_ToString
  commentId: M:Singularity.Duality.Resources.ModuleRef.ToString
  fullName: Singularity.Duality.Resources.ModuleRef.ToString()
  nameWithType: ModuleRef.ToString()
- uid: Singularity.Duality.Resources.ModuleRef.ToString*
  name: ToString
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_ToString_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.ToString
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.ToString
  nameWithType: ModuleRef.ToString
- uid: Singularity.Duality.Resources.ModuleRef.Type
  name: Type
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Type
  commentId: P:Singularity.Duality.Resources.ModuleRef.Type
  fullName: Singularity.Duality.Resources.ModuleRef.Type
  nameWithType: ModuleRef.Type
- uid: Singularity.Duality.Resources.ModuleRef.Type*
  name: Type
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Type_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Type
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Type
  nameWithType: ModuleRef.Type
- uid: Singularity.Duality.Resources.SingularityModules
  name: SingularityModules
  href: api/Singularity.Duality.Resources.SingularityModules.html
  commentId: T:Singularity.Duality.Resources.SingularityModules
  fullName: Singularity.Duality.Resources.SingularityModules
  nameWithType: SingularityModules
- uid: Singularity.Duality.Resources.SingularityModules.Modules
  name: Modules
  href: api/Singularity.Duality.Resources.SingularityModules.html#Singularity_Duality_Resources_SingularityModules_Modules
  commentId: P:Singularity.Duality.Resources.SingularityModules.Modules
  fullName: Singularity.Duality.Resources.SingularityModules.Modules
  nameWithType: SingularityModules.Modules
- uid: Singularity.Duality.Resources.SingularityModules.Modules*
  name: Modules
  href: api/Singularity.Duality.Resources.SingularityModules.html#Singularity_Duality_Resources_SingularityModules_Modules_
  commentId: Overload:Singularity.Duality.Resources.SingularityModules.Modules
  isSpec: "True"
  fullName: Singularity.Duality.Resources.SingularityModules.Modules
  nameWithType: SingularityModules.Modules
- uid: Singularity.Duality.SingularityPlugin
  name: SingularityPlugin
  href: api/Singularity.Duality.SingularityPlugin.html
  commentId: T:Singularity.Duality.SingularityPlugin
  fullName: Singularity.Duality.SingularityPlugin
  nameWithType: SingularityPlugin
- uid: Singularity.Duality.SingularityPlugin.OnGameEnded
  name: OnGameEnded()
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameEnded
  commentId: M:Singularity.Duality.SingularityPlugin.OnGameEnded
  fullName: Singularity.Duality.SingularityPlugin.OnGameEnded()
  nameWithType: SingularityPlugin.OnGameEnded()
- uid: Singularity.Duality.SingularityPlugin.OnGameEnded*
  name: OnGameEnded
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameEnded_
  commentId: Overload:Singularity.Duality.SingularityPlugin.OnGameEnded
  isSpec: "True"
  fullName: Singularity.Duality.SingularityPlugin.OnGameEnded
  nameWithType: SingularityPlugin.OnGameEnded
- uid: Singularity.Duality.SingularityPlugin.OnGameStarting
  name: OnGameStarting()
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameStarting
  commentId: M:Singularity.Duality.SingularityPlugin.OnGameStarting
  fullName: Singularity.Duality.SingularityPlugin.OnGameStarting()
  nameWithType: SingularityPlugin.OnGameStarting()
- uid: Singularity.Duality.SingularityPlugin.OnGameStarting*
  name: OnGameStarting
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameStarting_
  commentId: Overload:Singularity.Duality.SingularityPlugin.OnGameStarting
  isSpec: "True"
  fullName: Singularity.Duality.SingularityPlugin.OnGameStarting
  nameWithType: SingularityPlugin.OnGameStarting
- uid: Singularity.Exceptions
  name: Singularity.Exceptions
  href: api/Singularity.Exceptions.html
  commentId: N:Singularity.Exceptions
  fullName: Singularity.Exceptions
  nameWithType: Singularity.Exceptions
- uid: Singularity.Exceptions.AbstractTypeResolveException
  name: AbstractTypeResolveException
  href: api/Singularity.Exceptions.AbstractTypeResolveException.html
  commentId: T:Singularity.Exceptions.AbstractTypeResolveException
  fullName: Singularity.Exceptions.AbstractTypeResolveException
  nameWithType: AbstractTypeResolveException
- uid: Singularity.Exceptions.BindingConfigException
  name: BindingConfigException
  href: api/Singularity.Exceptions.BindingConfigException.html
  commentId: T:Singularity.Exceptions.BindingConfigException
  fullName: Singularity.Exceptions.BindingConfigException
  nameWithType: BindingConfigException
- uid: Singularity.Exceptions.CannotAutoResolveConstructorException
  name: CannotAutoResolveConstructorException
  href: api/Singularity.Exceptions.CannotAutoResolveConstructorException.html
  commentId: T:Singularity.Exceptions.CannotAutoResolveConstructorException
  fullName: Singularity.Exceptions.CannotAutoResolveConstructorException
  nameWithType: CannotAutoResolveConstructorException
- uid: Singularity.Exceptions.CircularDependencyException
  name: CircularDependencyException
  href: api/Singularity.Exceptions.CircularDependencyException.html
  commentId: T:Singularity.Exceptions.CircularDependencyException
  fullName: Singularity.Exceptions.CircularDependencyException
  nameWithType: CircularDependencyException
- uid: Singularity.Exceptions.CircularDependencyException.Cycle
  name: Cycle
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_Cycle
  commentId: P:Singularity.Exceptions.CircularDependencyException.Cycle
  fullName: Singularity.Exceptions.CircularDependencyException.Cycle
  nameWithType: CircularDependencyException.Cycle
- uid: Singularity.Exceptions.CircularDependencyException.Cycle*
  name: Cycle
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_Cycle_
  commentId: Overload:Singularity.Exceptions.CircularDependencyException.Cycle
  isSpec: "True"
  fullName: Singularity.Exceptions.CircularDependencyException.Cycle
  nameWithType: CircularDependencyException.Cycle
- uid: Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: CircularDependencyException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.CircularDependencyException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.CircularDependencyException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.CircularDependencyException.GetObjectData
  nameWithType: CircularDependencyException.GetObjectData
- uid: Singularity.Exceptions.DependencyNotFoundException
  name: DependencyNotFoundException
  href: api/Singularity.Exceptions.DependencyNotFoundException.html
  commentId: T:Singularity.Exceptions.DependencyNotFoundException
  fullName: Singularity.Exceptions.DependencyNotFoundException
  nameWithType: DependencyNotFoundException
- uid: Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: DependencyNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.DependencyNotFoundException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.DependencyNotFoundException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.DependencyNotFoundException.GetObjectData
  nameWithType: DependencyNotFoundException.GetObjectData
- uid: Singularity.Exceptions.DependencyNotFoundException.Type
  name: Type
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_Type
  commentId: P:Singularity.Exceptions.DependencyNotFoundException.Type
  fullName: Singularity.Exceptions.DependencyNotFoundException.Type
  nameWithType: DependencyNotFoundException.Type
- uid: Singularity.Exceptions.DependencyNotFoundException.Type*
  name: Type
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_Type_
  commentId: Overload:Singularity.Exceptions.DependencyNotFoundException.Type
  isSpec: "True"
  fullName: Singularity.Exceptions.DependencyNotFoundException.Type
  nameWithType: DependencyNotFoundException.Type
- uid: Singularity.Exceptions.EnumerableRegistrationException
  name: EnumerableRegistrationException
  href: api/Singularity.Exceptions.EnumerableRegistrationException.html
  commentId: T:Singularity.Exceptions.EnumerableRegistrationException
  fullName: Singularity.Exceptions.EnumerableRegistrationException
  nameWithType: EnumerableRegistrationException
- uid: Singularity.Exceptions.InterfaceExpectedException
  name: InterfaceExpectedException
  href: api/Singularity.Exceptions.InterfaceExpectedException.html
  commentId: T:Singularity.Exceptions.InterfaceExpectedException
  fullName: Singularity.Exceptions.InterfaceExpectedException
  nameWithType: InterfaceExpectedException
- uid: Singularity.Exceptions.InvalidEnumValueException`1
  name: InvalidEnumValueException<T>
  href: api/Singularity.Exceptions.InvalidEnumValueException-1.html
  commentId: T:Singularity.Exceptions.InvalidEnumValueException`1
  name.vb: InvalidEnumValueException(Of T)
  fullName: Singularity.Exceptions.InvalidEnumValueException<T>
  fullName.vb: Singularity.Exceptions.InvalidEnumValueException(Of T)
  nameWithType: InvalidEnumValueException<T>
  nameWithType.vb: InvalidEnumValueException(Of T)
- uid: Singularity.Exceptions.InvalidExpressionArgumentsException
  name: InvalidExpressionArgumentsException
  href: api/Singularity.Exceptions.InvalidExpressionArgumentsException.html
  commentId: T:Singularity.Exceptions.InvalidExpressionArgumentsException
  fullName: Singularity.Exceptions.InvalidExpressionArgumentsException
  nameWithType: InvalidExpressionArgumentsException
- uid: Singularity.Exceptions.NoConstructorException
  name: NoConstructorException
  href: api/Singularity.Exceptions.NoConstructorException.html
  commentId: T:Singularity.Exceptions.NoConstructorException
  fullName: Singularity.Exceptions.NoConstructorException
  nameWithType: NoConstructorException
- uid: Singularity.Exceptions.RegistrationAlreadyExistsException
  name: RegistrationAlreadyExistsException
  href: api/Singularity.Exceptions.RegistrationAlreadyExistsException.html
  commentId: T:Singularity.Exceptions.RegistrationAlreadyExistsException
  fullName: Singularity.Exceptions.RegistrationAlreadyExistsException
  nameWithType: RegistrationAlreadyExistsException
- uid: Singularity.Exceptions.SingularityAggregateException
  name: SingularityAggregateException
  href: api/Singularity.Exceptions.SingularityAggregateException.html
  commentId: T:Singularity.Exceptions.SingularityAggregateException
  fullName: Singularity.Exceptions.SingularityAggregateException
  nameWithType: SingularityAggregateException
- uid: Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: SingularityAggregateException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.SingularityAggregateException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.GetObjectData
  nameWithType: SingularityAggregateException.GetObjectData
- uid: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  name: HeaderMessage
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_HeaderMessage
  commentId: P:Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  fullName: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  nameWithType: SingularityAggregateException.HeaderMessage
- uid: Singularity.Exceptions.SingularityAggregateException.HeaderMessage*
  name: HeaderMessage
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_HeaderMessage_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  nameWithType: SingularityAggregateException.HeaderMessage
- uid: Singularity.Exceptions.SingularityAggregateException.Message
  name: Message
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_Message
  commentId: P:Singularity.Exceptions.SingularityAggregateException.Message
  fullName: Singularity.Exceptions.SingularityAggregateException.Message
  nameWithType: SingularityAggregateException.Message
- uid: Singularity.Exceptions.SingularityAggregateException.Message*
  name: Message
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_Message_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.Message
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.Message
  nameWithType: SingularityAggregateException.Message
- uid: Singularity.Exceptions.SingularityException
  name: SingularityException
  href: api/Singularity.Exceptions.SingularityException.html
  commentId: T:Singularity.Exceptions.SingularityException
  fullName: Singularity.Exceptions.SingularityException
  nameWithType: SingularityException
- uid: Singularity.Exceptions.SingularityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: SingularityException(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.SingularityException.html#Singularity_Exceptions_SingularityException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.SingularityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.SingularityException.SingularityException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: SingularityException.SingularityException(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.SingularityException.#ctor*
  name: SingularityException
  href: api/Singularity.Exceptions.SingularityException.html#Singularity_Exceptions_SingularityException__ctor_
  commentId: Overload:Singularity.Exceptions.SingularityException.#ctor
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityException.SingularityException
  nameWithType: SingularityException.SingularityException
- uid: Singularity.Exceptions.TypeNotAssignableException
  name: TypeNotAssignableException
  href: api/Singularity.Exceptions.TypeNotAssignableException.html
  commentId: T:Singularity.Exceptions.TypeNotAssignableException
  fullName: Singularity.Exceptions.TypeNotAssignableException
  nameWithType: TypeNotAssignableException
- uid: Singularity.Expressions
  name: Singularity.Expressions
  href: api/Singularity.Expressions.html
  commentId: N:Singularity.Expressions
  fullName: Singularity.Expressions
  nameWithType: Singularity.Expressions
- uid: Singularity.Expressions.ExpressionContext
  name: ExpressionContext
  href: api/Singularity.Expressions.ExpressionContext.html
  commentId: T:Singularity.Expressions.ExpressionContext
  fullName: Singularity.Expressions.ExpressionContext
  nameWithType: ExpressionContext
- uid: Singularity.Expressions.ExpressionContext.Expression
  name: Expression
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_Expression
  commentId: P:Singularity.Expressions.ExpressionContext.Expression
  fullName: Singularity.Expressions.ExpressionContext.Expression
  nameWithType: ExpressionContext.Expression
- uid: Singularity.Expressions.ExpressionContext.Expression*
  name: Expression
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_Expression_
  commentId: Overload:Singularity.Expressions.ExpressionContext.Expression
  isSpec: "True"
  fullName: Singularity.Expressions.ExpressionContext.Expression
  nameWithType: ExpressionContext.Expression
- uid: Singularity.Expressions.ExpressionContext.op_Implicit(Singularity.Expressions.ExpressionContext)~Singularity.Expressions.ReadOnlyExpressionContext
  name: Implicit(ExpressionContext to ReadOnlyExpressionContext)
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_op_Implicit_Singularity_Expressions_ExpressionContext__Singularity_Expressions_ReadOnlyExpressionContext
  commentId: M:Singularity.Expressions.ExpressionContext.op_Implicit(Singularity.Expressions.ExpressionContext)~Singularity.Expressions.ReadOnlyExpressionContext
  name.vb: Widening(ExpressionContext to ReadOnlyExpressionContext)
  fullName: Singularity.Expressions.ExpressionContext.Implicit(Singularity.Expressions.ExpressionContext to Singularity.Expressions.ReadOnlyExpressionContext)
  fullName.vb: Singularity.Expressions.ExpressionContext.Widening(Singularity.Expressions.ExpressionContext to Singularity.Expressions.ReadOnlyExpressionContext)
  nameWithType: ExpressionContext.Implicit(ExpressionContext to ReadOnlyExpressionContext)
  nameWithType.vb: ExpressionContext.Widening(ExpressionContext to ReadOnlyExpressionContext)
- uid: Singularity.Expressions.ExpressionContext.op_Implicit*
  name: Implicit
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_op_Implicit_
  commentId: Overload:Singularity.Expressions.ExpressionContext.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Singularity.Expressions.ExpressionContext.Implicit
  fullName.vb: Singularity.Expressions.ExpressionContext.Widening
  nameWithType: ExpressionContext.Implicit
  nameWithType.vb: ExpressionContext.Widening
- uid: Singularity.Expressions.ExpressionContext.ScopedExpressions
  name: ScopedExpressions
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_ScopedExpressions
  commentId: P:Singularity.Expressions.ExpressionContext.ScopedExpressions
  fullName: Singularity.Expressions.ExpressionContext.ScopedExpressions
  nameWithType: ExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.ExpressionContext.ScopedExpressions*
  name: ScopedExpressions
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_ScopedExpressions_
  commentId: Overload:Singularity.Expressions.ExpressionContext.ScopedExpressions
  isSpec: "True"
  fullName: Singularity.Expressions.ExpressionContext.ScopedExpressions
  nameWithType: ExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.ReadOnlyExpressionContext
  name: ReadOnlyExpressionContext
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html
  commentId: T:Singularity.Expressions.ReadOnlyExpressionContext
  fullName: Singularity.Expressions.ReadOnlyExpressionContext
  nameWithType: ReadOnlyExpressionContext
- uid: Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit(Singularity.Expressions.ReadOnlyExpressionContext)~Singularity.Expressions.ExpressionContext
  name: Explicit(ReadOnlyExpressionContext to ExpressionContext)
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_op_Explicit_Singularity_Expressions_ReadOnlyExpressionContext__Singularity_Expressions_ExpressionContext
  commentId: M:Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit(Singularity.Expressions.ReadOnlyExpressionContext)~Singularity.Expressions.ExpressionContext
  name.vb: Narrowing(ReadOnlyExpressionContext to ExpressionContext)
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.Explicit(Singularity.Expressions.ReadOnlyExpressionContext to Singularity.Expressions.ExpressionContext)
  fullName.vb: Singularity.Expressions.ReadOnlyExpressionContext.Narrowing(Singularity.Expressions.ReadOnlyExpressionContext to Singularity.Expressions.ExpressionContext)
  nameWithType: ReadOnlyExpressionContext.Explicit(ReadOnlyExpressionContext to ExpressionContext)
  nameWithType.vb: ReadOnlyExpressionContext.Narrowing(ReadOnlyExpressionContext to ExpressionContext)
- uid: Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit*
  name: Explicit
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_op_Explicit_
  commentId: Overload:Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.Explicit
  fullName.vb: Singularity.Expressions.ReadOnlyExpressionContext.Narrowing
  nameWithType: ReadOnlyExpressionContext.Explicit
  nameWithType.vb: ReadOnlyExpressionContext.Narrowing
- uid: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  name: ScopedExpressions
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_ScopedExpressions
  commentId: P:Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  nameWithType: ReadOnlyExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions*
  name: ScopedExpressions
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_ScopedExpressions_
  commentId: Overload:Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  isSpec: "True"
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  nameWithType: ReadOnlyExpressionContext.ScopedExpressions
- uid: Singularity.Graph
  name: Singularity.Graph
  href: api/Singularity.Graph.html
  commentId: N:Singularity.Graph
  fullName: Singularity.Graph
  nameWithType: Singularity.Graph
- uid: Singularity.Graph.BindingMetadata
  name: BindingMetadata
  href: api/Singularity.Graph.BindingMetadata.html
  commentId: T:Singularity.Graph.BindingMetadata
  fullName: Singularity.Graph.BindingMetadata
  nameWithType: BindingMetadata
- uid: Singularity.Graph.BindingMetadata.CreatorFilePath
  name: CreatorFilePath
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_CreatorFilePath
  commentId: P:Singularity.Graph.BindingMetadata.CreatorFilePath
  fullName: Singularity.Graph.BindingMetadata.CreatorFilePath
  nameWithType: BindingMetadata.CreatorFilePath
- uid: Singularity.Graph.BindingMetadata.CreatorFilePath*
  name: CreatorFilePath
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_CreatorFilePath_
  commentId: Overload:Singularity.Graph.BindingMetadata.CreatorFilePath
  isSpec: "True"
  fullName: Singularity.Graph.BindingMetadata.CreatorFilePath
  nameWithType: BindingMetadata.CreatorFilePath
- uid: Singularity.Graph.BindingMetadata.CreatorLineNumber
  name: CreatorLineNumber
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_CreatorLineNumber
  commentId: P:Singularity.Graph.BindingMetadata.CreatorLineNumber
  fullName: Singularity.Graph.BindingMetadata.CreatorLineNumber
  nameWithType: BindingMetadata.CreatorLineNumber
- uid: Singularity.Graph.BindingMetadata.CreatorLineNumber*
  name: CreatorLineNumber
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_CreatorLineNumber_
  commentId: Overload:Singularity.Graph.BindingMetadata.CreatorLineNumber
  isSpec: "True"
  fullName: Singularity.Graph.BindingMetadata.CreatorLineNumber
  nameWithType: BindingMetadata.CreatorLineNumber
- uid: Singularity.Graph.BindingMetadata.Generated
  name: Generated
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_Generated
  commentId: P:Singularity.Graph.BindingMetadata.Generated
  fullName: Singularity.Graph.BindingMetadata.Generated
  nameWithType: BindingMetadata.Generated
- uid: Singularity.Graph.BindingMetadata.Generated*
  name: Generated
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_Generated_
  commentId: Overload:Singularity.Graph.BindingMetadata.Generated
  isSpec: "True"
  fullName: Singularity.Graph.BindingMetadata.Generated
  nameWithType: BindingMetadata.Generated
- uid: Singularity.Graph.BindingMetadata.ModuleType
  name: ModuleType
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_ModuleType
  commentId: P:Singularity.Graph.BindingMetadata.ModuleType
  fullName: Singularity.Graph.BindingMetadata.ModuleType
  nameWithType: BindingMetadata.ModuleType
- uid: Singularity.Graph.BindingMetadata.ModuleType*
  name: ModuleType
  href: api/Singularity.Graph.BindingMetadata.html#Singularity_Graph_BindingMetadata_ModuleType_
  commentId: Overload:Singularity.Graph.BindingMetadata.ModuleType
  isSpec: "True"
  fullName: Singularity.Graph.BindingMetadata.ModuleType
  nameWithType: BindingMetadata.ModuleType
- uid: Singularity.IContainer
  name: IContainer
  href: api/Singularity.IContainer.html
  commentId: T:Singularity.IContainer
  fullName: Singularity.IContainer
  nameWithType: IContainer
- uid: Singularity.IContainer.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance_System_Type_
  commentId: M:Singularity.IContainer.GetInstance(System.Type)
  fullName: Singularity.IContainer.GetInstance(System.Type)
  nameWithType: IContainer.GetInstance(Type)
- uid: Singularity.IContainer.GetInstance*
  name: GetInstance
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance_
  commentId: Overload:Singularity.IContainer.GetInstance
  isSpec: "True"
  fullName: Singularity.IContainer.GetInstance
  nameWithType: IContainer.GetInstance
- uid: Singularity.IContainer.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance__1
  commentId: M:Singularity.IContainer.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.IContainer.GetInstance<T>()
  fullName.vb: Singularity.IContainer.GetInstance(Of T)()
  nameWithType: IContainer.GetInstance<T>()
  nameWithType.vb: IContainer.GetInstance(Of T)()
- uid: Singularity.IContainer.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInject_System_Object_
  commentId: M:Singularity.IContainer.LateInject(System.Object)
  fullName: Singularity.IContainer.LateInject(System.Object)
  nameWithType: IContainer.LateInject(Object)
- uid: Singularity.IContainer.LateInject*
  name: LateInject
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInject_
  commentId: Overload:Singularity.IContainer.LateInject
  isSpec: "True"
  fullName: Singularity.IContainer.LateInject
  nameWithType: IContainer.LateInject
- uid: Singularity.IContainer.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInjectAll_
  commentId: Overload:Singularity.IContainer.LateInjectAll
  isSpec: "True"
  fullName: Singularity.IContainer.LateInjectAll
  nameWithType: IContainer.LateInjectAll
- uid: Singularity.IContainer.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.IContainer.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.IContainer.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.IContainer.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: IContainer.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: IContainer.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.ILifetime
  name: ILifetime
  href: api/Singularity.ILifetime.html
  commentId: T:Singularity.ILifetime
  fullName: Singularity.ILifetime
  nameWithType: ILifetime
- uid: Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.ILifetime.html#Singularity_ILifetime_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: ILifetime.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.ILifetime.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.ILifetime.html#Singularity_ILifetime_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.ILifetime.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.ILifetime.ApplyLifetimeOnExpression
  nameWithType: ILifetime.ApplyLifetimeOnExpression
- uid: Singularity.IModule
  name: IModule
  href: api/Singularity.IModule.html
  commentId: T:Singularity.IModule
  fullName: Singularity.IModule
  nameWithType: IModule
- uid: Singularity.IModule.Register(Singularity.ContainerBuilder)
  name: Register(ContainerBuilder)
  href: api/Singularity.IModule.html#Singularity_IModule_Register_Singularity_ContainerBuilder_
  commentId: M:Singularity.IModule.Register(Singularity.ContainerBuilder)
  fullName: Singularity.IModule.Register(Singularity.ContainerBuilder)
  nameWithType: IModule.Register(ContainerBuilder)
- uid: Singularity.IModule.Register*
  name: Register
  href: api/Singularity.IModule.html#Singularity_IModule_Register_
  commentId: Overload:Singularity.IModule.Register
  isSpec: "True"
  fullName: Singularity.IModule.Register
  nameWithType: IModule.Register
- uid: Singularity.Lifetimes
  name: Lifetimes
  href: api/Singularity.Lifetimes.html
  commentId: T:Singularity.Lifetimes
  fullName: Singularity.Lifetimes
  nameWithType: Lifetimes
- uid: Singularity.Lifetimes.PerContainer
  name: PerContainer
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerContainer
  commentId: P:Singularity.Lifetimes.PerContainer
  fullName: Singularity.Lifetimes.PerContainer
  nameWithType: Lifetimes.PerContainer
- uid: Singularity.Lifetimes.PerContainer*
  name: PerContainer
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerContainer_
  commentId: Overload:Singularity.Lifetimes.PerContainer
  isSpec: "True"
  fullName: Singularity.Lifetimes.PerContainer
  nameWithType: Lifetimes.PerContainer
- uid: Singularity.Lifetimes.PerScope
  name: PerScope
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerScope
  commentId: P:Singularity.Lifetimes.PerScope
  fullName: Singularity.Lifetimes.PerScope
  nameWithType: Lifetimes.PerScope
- uid: Singularity.Lifetimes.PerScope*
  name: PerScope
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerScope_
  commentId: Overload:Singularity.Lifetimes.PerScope
  isSpec: "True"
  fullName: Singularity.Lifetimes.PerScope
  nameWithType: Lifetimes.PerScope
- uid: Singularity.Lifetimes.Transient
  name: Transient
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_Transient
  commentId: P:Singularity.Lifetimes.Transient
  fullName: Singularity.Lifetimes.Transient
  nameWithType: Lifetimes.Transient
- uid: Singularity.Lifetimes.Transient*
  name: Transient
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_Transient_
  commentId: Overload:Singularity.Lifetimes.Transient
  isSpec: "True"
  fullName: Singularity.Lifetimes.Transient
  nameWithType: Lifetimes.Transient
- uid: Singularity.Microsoft.DependencyInjection
  name: Singularity.Microsoft.DependencyInjection
  href: api/Singularity.Microsoft.DependencyInjection.html
  commentId: N:Singularity.Microsoft.DependencyInjection
  fullName: Singularity.Microsoft.DependencyInjection
  nameWithType: Singularity.Microsoft.DependencyInjection
- uid: Singularity.Microsoft.DependencyInjection.Extensions
  name: Extensions
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html
  commentId: T:Singularity.Microsoft.DependencyInjection.Extensions
  fullName: Singularity.Microsoft.DependencyInjection.Extensions
  nameWithType: Extensions
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterService(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name: RegisterService(ContainerBuilder, ServiceDescriptor)
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterService_Singularity_ContainerBuilder_Microsoft_Extensions_DependencyInjection_ServiceDescriptor_
  commentId: M:Singularity.Microsoft.DependencyInjection.Extensions.RegisterService(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterService(Singularity.ContainerBuilder, Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType: Extensions.RegisterService(ContainerBuilder, ServiceDescriptor)
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterService*
  name: RegisterService
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterService_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.Extensions.RegisterService
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterService
  nameWithType: Extensions.RegisterService
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  name: RegisterServiceProvider(ContainerBuilder)
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterServiceProvider_Singularity_ContainerBuilder_
  commentId: M:Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  nameWithType: Extensions.RegisterServiceProvider(ContainerBuilder)
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider*
  name: RegisterServiceProvider
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterServiceProvider_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServiceProvider
  nameWithType: Extensions.RegisterServiceProvider
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: RegisterServices(ContainerBuilder, IServiceCollection)
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterServices_Singularity_ContainerBuilder_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices(Singularity.ContainerBuilder, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Extensions.RegisterServices(ContainerBuilder, IServiceCollection)
- uid: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices*
  name: RegisterServices
  href: api/Singularity.Microsoft.DependencyInjection.Extensions.html#Singularity_Microsoft_DependencyInjection_Extensions_RegisterServices_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.Extensions.RegisterServices
  nameWithType: Extensions.RegisterServices
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider
  name: SingularityServiceProvider
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.html
  commentId: T:Singularity.Microsoft.DependencyInjection.SingularityServiceProvider
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider
  nameWithType: SingularityServiceProvider
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.#ctor(Singularity.Container)
  name: SingularityServiceProvider(Container)
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.html#Singularity_Microsoft_DependencyInjection_SingularityServiceProvider__ctor_Singularity_Container_
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.#ctor(Singularity.Container)
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.SingularityServiceProvider(Singularity.Container)
  nameWithType: SingularityServiceProvider.SingularityServiceProvider(Container)
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.#ctor*
  name: SingularityServiceProvider
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.html#Singularity_Microsoft_DependencyInjection_SingularityServiceProvider__ctor_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.#ctor
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.SingularityServiceProvider
  nameWithType: SingularityServiceProvider.SingularityServiceProvider
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService(System.Type)
  name: GetService(Type)
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.html#Singularity_Microsoft_DependencyInjection_SingularityServiceProvider_GetService_System_Type_
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService(System.Type)
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService(System.Type)
  nameWithType: SingularityServiceProvider.GetService(Type)
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService*
  name: GetService
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.html#Singularity_Microsoft_DependencyInjection_SingularityServiceProvider_GetService_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceProvider.GetService
  nameWithType: SingularityServiceProvider.GetService
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope
  name: SingularityServiceScope
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html
  commentId: T:Singularity.Microsoft.DependencyInjection.SingularityServiceScope
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope
  nameWithType: SingularityServiceScope
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.#ctor(Singularity.Scoped)
  name: SingularityServiceScope(Scoped)
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope__ctor_Singularity_Scoped_
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.#ctor(Singularity.Scoped)
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.SingularityServiceScope(Singularity.Scoped)
  nameWithType: SingularityServiceScope.SingularityServiceScope(Scoped)
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.#ctor*
  name: SingularityServiceScope
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope__ctor_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.#ctor
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.SingularityServiceScope
  nameWithType: SingularityServiceScope.SingularityServiceScope
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose
  name: Dispose()
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_Dispose
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose()
  nameWithType: SingularityServiceScope.Dispose()
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose*
  name: Dispose
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_Dispose_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.Dispose
  nameWithType: SingularityServiceScope.Dispose
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService(System.Type)
  name: GetService(Type)
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_GetService_System_Type_
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService(System.Type)
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService(System.Type)
  nameWithType: SingularityServiceScope.GetService(Type)
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService*
  name: GetService
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_GetService_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.GetService
  nameWithType: SingularityServiceScope.GetService
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider
  name: ServiceProvider
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_ServiceProvider
  commentId: P:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider
  nameWithType: SingularityServiceScope.ServiceProvider
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider*
  name: ServiceProvider
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScope.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScope_ServiceProvider_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScope.ServiceProvider
  nameWithType: SingularityServiceScope.ServiceProvider
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory
  name: SingularityServiceScopeFactory
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.html
  commentId: T:Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory
  nameWithType: SingularityServiceScopeFactory
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.#ctor(Singularity.Container)
  name: SingularityServiceScopeFactory(Container)
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScopeFactory__ctor_Singularity_Container_
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.#ctor(Singularity.Container)
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.SingularityServiceScopeFactory(Singularity.Container)
  nameWithType: SingularityServiceScopeFactory.SingularityServiceScopeFactory(Container)
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.#ctor*
  name: SingularityServiceScopeFactory
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScopeFactory__ctor_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.#ctor
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.SingularityServiceScopeFactory
  nameWithType: SingularityServiceScopeFactory.SingularityServiceScopeFactory
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope
  name: CreateScope()
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScopeFactory_CreateScope
  commentId: M:Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope()
  nameWithType: SingularityServiceScopeFactory.CreateScope()
- uid: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope*
  name: CreateScope
  href: api/Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.html#Singularity_Microsoft_DependencyInjection_SingularityServiceScopeFactory_CreateScope_
  commentId: Overload:Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope
  isSpec: "True"
  fullName: Singularity.Microsoft.DependencyInjection.SingularityServiceScopeFactory.CreateScope
  nameWithType: SingularityServiceScopeFactory.CreateScope
- uid: Singularity.PerContainer
  name: PerContainer
  href: api/Singularity.PerContainer.html
  commentId: T:Singularity.PerContainer
  fullName: Singularity.PerContainer
  nameWithType: PerContainer
- uid: Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.PerContainer.html#Singularity_PerContainer_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: PerContainer.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.PerContainer.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.PerContainer.html#Singularity_PerContainer_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.PerContainer.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.PerContainer.ApplyLifetimeOnExpression
  nameWithType: PerContainer.ApplyLifetimeOnExpression
- uid: Singularity.PerScope
  name: PerScope
  href: api/Singularity.PerScope.html
  commentId: T:Singularity.PerScope
  fullName: Singularity.PerScope
  nameWithType: PerScope
- uid: Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.PerScope.html#Singularity_PerScope_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: PerScope.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.PerScope.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.PerScope.html#Singularity_PerScope_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.PerScope.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.PerScope.ApplyLifetimeOnExpression
  nameWithType: PerScope.ApplyLifetimeOnExpression
- uid: Singularity.PerScope.CreateScopedExpression*
  name: CreateScopedExpression
  href: api/Singularity.PerScope.html#Singularity_PerScope_CreateScopedExpression_
  commentId: Overload:Singularity.PerScope.CreateScopedExpression
  isSpec: "True"
  fullName: Singularity.PerScope.CreateScopedExpression
  nameWithType: PerScope.CreateScopedExpression
- uid: Singularity.PerScope.CreateScopedExpression``1(System.Linq.Expressions.Expression)
  name: CreateScopedExpression<T>(Expression)
  href: api/Singularity.PerScope.html#Singularity_PerScope_CreateScopedExpression__1_System_Linq_Expressions_Expression_
  commentId: M:Singularity.PerScope.CreateScopedExpression``1(System.Linq.Expressions.Expression)
  name.vb: CreateScopedExpression(Of T)(Expression)
  fullName: Singularity.PerScope.CreateScopedExpression<T>(System.Linq.Expressions.Expression)
  fullName.vb: Singularity.PerScope.CreateScopedExpression(Of T)(System.Linq.Expressions.Expression)
  nameWithType: PerScope.CreateScopedExpression<T>(Expression)
  nameWithType.vb: PerScope.CreateScopedExpression(Of T)(Expression)
- uid: Singularity.Scoped
  name: Scoped
  href: api/Singularity.Scoped.html
  commentId: T:Singularity.Scoped
  fullName: Singularity.Scoped
  nameWithType: Scoped
- uid: Singularity.Scoped.Dispose
  name: Dispose()
  href: api/Singularity.Scoped.html#Singularity_Scoped_Dispose
  commentId: M:Singularity.Scoped.Dispose
  fullName: Singularity.Scoped.Dispose()
  nameWithType: Scoped.Dispose()
- uid: Singularity.Scoped.Dispose*
  name: Dispose
  href: api/Singularity.Scoped.html#Singularity_Scoped_Dispose_
  commentId: Overload:Singularity.Scoped.Dispose
  isSpec: "True"
  fullName: Singularity.Scoped.Dispose
  nameWithType: Scoped.Dispose
- uid: Singularity.Scoped.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance_System_Type_
  commentId: M:Singularity.Scoped.GetInstance(System.Type)
  fullName: Singularity.Scoped.GetInstance(System.Type)
  nameWithType: Scoped.GetInstance(Type)
- uid: Singularity.Scoped.GetInstance*
  name: GetInstance
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance_
  commentId: Overload:Singularity.Scoped.GetInstance
  isSpec: "True"
  fullName: Singularity.Scoped.GetInstance
  nameWithType: Scoped.GetInstance
- uid: Singularity.Scoped.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance__1
  commentId: M:Singularity.Scoped.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.Scoped.GetInstance<T>()
  fullName.vb: Singularity.Scoped.GetInstance(Of T)()
  nameWithType: Scoped.GetInstance<T>()
  nameWithType.vb: Scoped.GetInstance(Of T)()
- uid: Singularity.Scoped.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInject_System_Object_
  commentId: M:Singularity.Scoped.LateInject(System.Object)
  fullName: Singularity.Scoped.LateInject(System.Object)
  nameWithType: Scoped.LateInject(Object)
- uid: Singularity.Scoped.LateInject*
  name: LateInject
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInject_
  commentId: Overload:Singularity.Scoped.LateInject
  isSpec: "True"
  fullName: Singularity.Scoped.LateInject
  nameWithType: Scoped.LateInject
- uid: Singularity.Scoped.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInjectAll_
  commentId: Overload:Singularity.Scoped.LateInjectAll
  isSpec: "True"
  fullName: Singularity.Scoped.LateInjectAll
  nameWithType: Scoped.LateInjectAll
- uid: Singularity.Scoped.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.Scoped.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.Scoped.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.Scoped.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Scoped.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: Scoped.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.ServiceAutoDispose
  name: ServiceAutoDispose
  href: api/Singularity.ServiceAutoDispose.html
  commentId: T:Singularity.ServiceAutoDispose
  fullName: Singularity.ServiceAutoDispose
  nameWithType: ServiceAutoDispose
- uid: Singularity.ServiceAutoDispose.Always
  name: Always
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Always
  commentId: F:Singularity.ServiceAutoDispose.Always
  fullName: Singularity.ServiceAutoDispose.Always
  nameWithType: ServiceAutoDispose.Always
- uid: Singularity.ServiceAutoDispose.Default
  name: Default
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Default
  commentId: F:Singularity.ServiceAutoDispose.Default
  fullName: Singularity.ServiceAutoDispose.Default
  nameWithType: ServiceAutoDispose.Default
- uid: Singularity.ServiceAutoDispose.Never
  name: Never
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Never
  commentId: F:Singularity.ServiceAutoDispose.Never
  fullName: Singularity.ServiceAutoDispose.Never
  nameWithType: ServiceAutoDispose.Never
- uid: Singularity.SingularitySettings
  name: SingularitySettings
  href: api/Singularity.SingularitySettings.html
  commentId: T:Singularity.SingularitySettings
  fullName: Singularity.SingularitySettings
  nameWithType: SingularitySettings
- uid: Singularity.SingularitySettings.AutoDisposeLifetimes
  name: AutoDisposeLifetimes
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_AutoDisposeLifetimes
  commentId: P:Singularity.SingularitySettings.AutoDisposeLifetimes
  fullName: Singularity.SingularitySettings.AutoDisposeLifetimes
  nameWithType: SingularitySettings.AutoDisposeLifetimes
- uid: Singularity.SingularitySettings.AutoDisposeLifetimes*
  name: AutoDisposeLifetimes
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_AutoDisposeLifetimes_
  commentId: Overload:Singularity.SingularitySettings.AutoDisposeLifetimes
  isSpec: "True"
  fullName: Singularity.SingularitySettings.AutoDisposeLifetimes
  nameWithType: SingularitySettings.AutoDisposeLifetimes
- uid: Singularity.SingularitySettings.Default
  name: Default
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Default
  commentId: F:Singularity.SingularitySettings.Default
  fullName: Singularity.SingularitySettings.Default
  nameWithType: SingularitySettings.Default
- uid: Singularity.SingularitySettings.Microsoft
  name: Microsoft
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Microsoft
  commentId: F:Singularity.SingularitySettings.Microsoft
  fullName: Singularity.SingularitySettings.Microsoft
  nameWithType: SingularitySettings.Microsoft
- uid: Singularity.StronglyTypedDecoratorConfigurator`2
  name: StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  href: api/Singularity.StronglyTypedDecoratorConfigurator-2.html
  commentId: T:Singularity.StronglyTypedDecoratorConfigurator`2
  name.vb: StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
  fullName: Singularity.StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  fullName.vb: Singularity.StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
  nameWithType: StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  nameWithType.vb: StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1
  name: StronglyTypedLateInjectorConfigurator<TInstance>
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html
  commentId: T:Singularity.StronglyTypedLateInjectorConfigurator`1
  name.vb: StronglyTypedLateInjectorConfigurator(Of TInstance)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.Reflection.FieldInfo)
  name: UseField(FieldInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_System_Reflection_FieldInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.Reflection.FieldInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField(System.Reflection.FieldInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(System.Reflection.FieldInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField(FieldInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(FieldInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.String)
  name: UseField(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField*
  name: UseField
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Object}}})
  name: UseMember(Expression<Func<TInstance, Nullable<Object>>>)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMember_System_Linq_Expressions_Expression_System_Func__0_System_Nullable_System_Object____
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Object}}})
  name.vb: UseMember(Expression(Of Func(Of TInstance, Nullable(Of Object))))
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMember(System.Linq.Expressions.Expression<System.Func<TInstance, System.Nullable<System.Object>>>)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember(System.Linq.Expressions.Expression(Of System.Func(Of TInstance, System.Nullable(Of System.Object))))
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMember(Expression<Func<TInstance, Nullable<Object>>>)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember(Expression(Of Func(Of TInstance, Nullable(Of Object))))
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember*
  name: UseMember
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMember_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMember
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMember
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.Reflection.MethodInfo)
  name: UseMethod(MethodInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_System_Reflection_MethodInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.Reflection.MethodInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(System.Reflection.MethodInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(System.Reflection.MethodInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(MethodInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(MethodInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.String)
  name: UseMethod(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod*
  name: UseMethod
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.Reflection.PropertyInfo)
  name: UseProperty(PropertyInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_System_Reflection_PropertyInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.Reflection.PropertyInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(System.Reflection.PropertyInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(System.Reflection.PropertyInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(PropertyInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(PropertyInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.String)
  name: UseProperty(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty*
  name: UseProperty
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty
- uid: Singularity.StronglyTypedServiceConfigurator`2
  name: StronglyTypedServiceConfigurator<TDependency, TInstance>
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html
  commentId: T:Singularity.StronglyTypedServiceConfigurator`2
  name.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance)
- uid: Singularity.StronglyTypedServiceConfigurator`2.As*
  name: As
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_As_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.As
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.As
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).As
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.As
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).As
- uid: Singularity.StronglyTypedServiceConfigurator`2.As``1
  name: As<TService>()
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_As__1
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.As``1
  name.vb: As(Of TService)()
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.As<TService>()
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).As(Of TService)()
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.As<TService>()
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).As(Of TService)()
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject(System.Linq.Expressions.Expression{System.Func{`1}})
  name: Inject(Expression<Func<TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject_System_Linq_Expressions_Expression_System_Func__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject(System.Linq.Expressions.Expression{System.Func{`1}})
  name.vb: Inject(Expression(Of Func(Of TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject(System.Linq.Expressions.Expression<System.Func<TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(System.Linq.Expressions.Expression(Of System.Func(Of TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject(Expression<Func<TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Expression(Of Func(Of TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject*
  name: Inject
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.Inject
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``1(System.Linq.Expressions.Expression{System.Func{``0,`1}})
  name: Inject<TP1>(Expression<Func<TP1, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__1_System_Linq_Expressions_Expression_System_Func___0__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``1(System.Linq.Expressions.Expression{System.Func{``0,`1}})
  name.vb: Inject(Of TP1)(Expression(Of Func(Of TP1, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1>(System.Linq.Expressions.Expression<System.Func<TP1, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1>(Expression<Func<TP1, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1)(Expression(Of Func(Of TP1, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``2(System.Linq.Expressions.Expression{System.Func{``0,``1,`1}})
  name: Inject<TP1, TP2>(Expression<Func<TP1, TP2, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__2_System_Linq_Expressions_Expression_System_Func___0___1__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``2(System.Linq.Expressions.Expression{System.Func{``0,``1,`1}})
  name.vb: Inject(Of TP1, TP2)(Expression(Of Func(Of TP1, TP2, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2>(Expression<Func<TP1, TP2, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2)(Expression(Of Func(Of TP1, TP2, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,`1}})
  name: Inject<TP1, TP2, TP3>(Expression<Func<TP1, TP2, TP3, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__3_System_Linq_Expressions_Expression_System_Func___0___1___2__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,`1}})
  name.vb: Inject(Of TP1, TP2, TP3)(Expression(Of Func(Of TP1, TP2, TP3, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3>(Expression<Func<TP1, TP2, TP3, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3)(Expression(Of Func(Of TP1, TP2, TP3, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,`1}})
  name: Inject<TP1, TP2, TP3, TP4>(Expression<Func<TP1, TP2, TP3, TP4, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__4_System_Linq_Expressions_Expression_System_Func___0___1___2___3__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4>(Expression<Func<TP1, TP2, TP3, TP4, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__5_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__6_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__7_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__8_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ILifetime)
  name: With(ILifetime)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_Singularity_ILifetime_
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ILifetime)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With(Singularity.ILifetime)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(Singularity.ILifetime)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With(ILifetime)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(ILifetime)
- uid: Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ServiceAutoDispose)
  name: With(ServiceAutoDispose)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_Singularity_ServiceAutoDispose_
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ServiceAutoDispose)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With(Singularity.ServiceAutoDispose)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(Singularity.ServiceAutoDispose)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With(ServiceAutoDispose)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(ServiceAutoDispose)
- uid: Singularity.StronglyTypedServiceConfigurator`2.With*
  name: With
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.With
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With
- uid: Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer(System.Action{`1})
  name: WithFinalizer(Action<TInstance>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_WithFinalizer_System_Action__1__
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer(System.Action{`1})
  name.vb: WithFinalizer(Action(Of TInstance))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer(System.Action<TInstance>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer(System.Action(Of TInstance))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer(Action<TInstance>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer(Action(Of TInstance))
- uid: Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer*
  name: WithFinalizer
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_WithFinalizer_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer
- uid: Singularity.Transient
  name: Transient
  href: api/Singularity.Transient.html
  commentId: T:Singularity.Transient
  fullName: Singularity.Transient
  nameWithType: Transient
- uid: Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.Transient.html#Singularity_Transient_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: Transient.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.Transient.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.Transient.html#Singularity_Transient_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.Transient.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.Transient.ApplyLifetimeOnExpression
  nameWithType: Transient.ApplyLifetimeOnExpression
- uid: Singularity.WeaklyTypedDecoratorConfigurator
  name: WeaklyTypedDecoratorConfigurator
  href: api/Singularity.WeaklyTypedDecoratorConfigurator.html
  commentId: T:Singularity.WeaklyTypedDecoratorConfigurator
  fullName: Singularity.WeaklyTypedDecoratorConfigurator
  nameWithType: WeaklyTypedDecoratorConfigurator
- uid: Singularity.WeaklyTypedLateInjectorConfigurator
  name: WeaklyTypedLateInjectorConfigurator
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html
  commentId: T:Singularity.WeaklyTypedLateInjectorConfigurator
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator
  nameWithType: WeaklyTypedLateInjectorConfigurator
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  name: UseMethod(MethodInfo)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_System_Reflection_MethodInfo_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod(MethodInfo)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  name: UseMethod(String)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_System_String_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod(String)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod*
  name: UseMethod
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_
  commentId: Overload:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod
  isSpec: "True"
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  name: UseProperty(PropertyInfo)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_System_Reflection_PropertyInfo_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty(PropertyInfo)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  name: UseProperty(String)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_System_String_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty(String)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty*
  name: UseProperty
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_
  commentId: Overload:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty
  isSpec: "True"
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty
- uid: Singularity.WeaklyTypedServiceConfigurator
  name: WeaklyTypedServiceConfigurator
  href: api/Singularity.WeaklyTypedServiceConfigurator.html
  commentId: T:Singularity.WeaklyTypedServiceConfigurator
  fullName: Singularity.WeaklyTypedServiceConfigurator
  nameWithType: WeaklyTypedServiceConfigurator
- uid: Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  name: As(Type)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_As_System_Type_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  fullName: Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  nameWithType: WeaklyTypedServiceConfigurator.As(Type)
- uid: Singularity.WeaklyTypedServiceConfigurator.As*
  name: As
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_As_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.As
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.As
  nameWithType: WeaklyTypedServiceConfigurator.As
- uid: Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  name: Inject(Expression)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_Inject_System_Linq_Expressions_Expression_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  fullName: Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  nameWithType: WeaklyTypedServiceConfigurator.Inject(Expression)
- uid: Singularity.WeaklyTypedServiceConfigurator.Inject*
  name: Inject
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_Inject_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.Inject
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.Inject
  nameWithType: WeaklyTypedServiceConfigurator.Inject
- uid: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  name: With(ILifetime)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_Singularity_ILifetime_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  fullName: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  nameWithType: WeaklyTypedServiceConfigurator.With(ILifetime)
- uid: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  name: With(ServiceAutoDispose)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_Singularity_ServiceAutoDispose_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  fullName: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  nameWithType: WeaklyTypedServiceConfigurator.With(ServiceAutoDispose)
- uid: Singularity.WeaklyTypedServiceConfigurator.With*
  name: With
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.With
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.With
  nameWithType: WeaklyTypedServiceConfigurator.With
- uid: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action{System.Object})
  name: WithFinalizer(Action<Object>)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_WithFinalizer_System_Action_System_Object__
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action{System.Object})
  name.vb: WithFinalizer(Action(Of Object))
  fullName: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action<System.Object>)
  fullName.vb: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action(Of System.Object))
  nameWithType: WeaklyTypedServiceConfigurator.WithFinalizer(Action<Object>)
  nameWithType.vb: WeaklyTypedServiceConfigurator.WithFinalizer(Action(Of Object))
- uid: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer*
  name: WithFinalizer
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_WithFinalizer_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.WithFinalizer
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer
  nameWithType: WeaklyTypedServiceConfigurator.WithFinalizer
