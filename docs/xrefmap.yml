### YamlMime:XRefMap
sorted: true
references:
- uid: Singularity
  name: Singularity
  href: api/Singularity.html
  commentId: N:Singularity
  fullName: Singularity
  nameWithType: Singularity
- uid: Singularity.BestMatchConstructorResolver
  name: BestMatchConstructorResolver
  href: api/Singularity.BestMatchConstructorResolver.html
  commentId: T:Singularity.BestMatchConstructorResolver
  fullName: Singularity.BestMatchConstructorResolver
  nameWithType: BestMatchConstructorResolver
- uid: Singularity.BestMatchConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  name: DynamicSelectConstructor(Type, IInstanceFactoryResolver)
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_DynamicSelectConstructor_System_Type_Singularity_Resolving_IInstanceFactoryResolver_
  commentId: M:Singularity.BestMatchConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  fullName: Singularity.BestMatchConstructorResolver.DynamicSelectConstructor(System.Type, Singularity.Resolving.IInstanceFactoryResolver)
  nameWithType: BestMatchConstructorResolver.DynamicSelectConstructor(Type, IInstanceFactoryResolver)
- uid: Singularity.BestMatchConstructorResolver.DynamicSelectConstructor*
  name: DynamicSelectConstructor
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_DynamicSelectConstructor_
  commentId: Overload:Singularity.BestMatchConstructorResolver.DynamicSelectConstructor
  isSpec: "True"
  fullName: Singularity.BestMatchConstructorResolver.DynamicSelectConstructor
  nameWithType: BestMatchConstructorResolver.DynamicSelectConstructor
- uid: Singularity.BestMatchConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  name: ResolveConstructorExpression(Type, ConstructorInfo)
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_ResolveConstructorExpression_System_Type_System_Reflection_ConstructorInfo_
  commentId: M:Singularity.BestMatchConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  fullName: Singularity.BestMatchConstructorResolver.ResolveConstructorExpression(System.Type, System.Reflection.ConstructorInfo)
  nameWithType: BestMatchConstructorResolver.ResolveConstructorExpression(Type, ConstructorInfo)
- uid: Singularity.BestMatchConstructorResolver.ResolveConstructorExpression*
  name: ResolveConstructorExpression
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_ResolveConstructorExpression_
  commentId: Overload:Singularity.BestMatchConstructorResolver.ResolveConstructorExpression
  isSpec: "True"
  fullName: Singularity.BestMatchConstructorResolver.ResolveConstructorExpression
  nameWithType: BestMatchConstructorResolver.ResolveConstructorExpression
- uid: Singularity.BestMatchConstructorResolver.StaticSelectConstructor(System.Type)
  name: StaticSelectConstructor(Type)
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_StaticSelectConstructor_System_Type_
  commentId: M:Singularity.BestMatchConstructorResolver.StaticSelectConstructor(System.Type)
  fullName: Singularity.BestMatchConstructorResolver.StaticSelectConstructor(System.Type)
  nameWithType: BestMatchConstructorResolver.StaticSelectConstructor(Type)
- uid: Singularity.BestMatchConstructorResolver.StaticSelectConstructor*
  name: StaticSelectConstructor
  href: api/Singularity.BestMatchConstructorResolver.html#Singularity_BestMatchConstructorResolver_StaticSelectConstructor_
  commentId: Overload:Singularity.BestMatchConstructorResolver.StaticSelectConstructor
  isSpec: "True"
  fullName: Singularity.BestMatchConstructorResolver.StaticSelectConstructor
  nameWithType: BestMatchConstructorResolver.StaticSelectConstructor
- uid: Singularity.BindingMetadata
  name: BindingMetadata
  href: api/Singularity.BindingMetadata.html
  commentId: T:Singularity.BindingMetadata
  fullName: Singularity.BindingMetadata
  nameWithType: BindingMetadata
- uid: Singularity.BindingMetadata.CreatorFilePath
  name: CreatorFilePath
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_CreatorFilePath
  commentId: P:Singularity.BindingMetadata.CreatorFilePath
  fullName: Singularity.BindingMetadata.CreatorFilePath
  nameWithType: BindingMetadata.CreatorFilePath
- uid: Singularity.BindingMetadata.CreatorFilePath*
  name: CreatorFilePath
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_CreatorFilePath_
  commentId: Overload:Singularity.BindingMetadata.CreatorFilePath
  isSpec: "True"
  fullName: Singularity.BindingMetadata.CreatorFilePath
  nameWithType: BindingMetadata.CreatorFilePath
- uid: Singularity.BindingMetadata.CreatorLineNumber
  name: CreatorLineNumber
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_CreatorLineNumber
  commentId: P:Singularity.BindingMetadata.CreatorLineNumber
  fullName: Singularity.BindingMetadata.CreatorLineNumber
  nameWithType: BindingMetadata.CreatorLineNumber
- uid: Singularity.BindingMetadata.CreatorLineNumber*
  name: CreatorLineNumber
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_CreatorLineNumber_
  commentId: Overload:Singularity.BindingMetadata.CreatorLineNumber
  isSpec: "True"
  fullName: Singularity.BindingMetadata.CreatorLineNumber
  nameWithType: BindingMetadata.CreatorLineNumber
- uid: Singularity.BindingMetadata.Generated
  name: Generated
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_Generated
  commentId: P:Singularity.BindingMetadata.Generated
  fullName: Singularity.BindingMetadata.Generated
  nameWithType: BindingMetadata.Generated
- uid: Singularity.BindingMetadata.Generated*
  name: Generated
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_Generated_
  commentId: Overload:Singularity.BindingMetadata.Generated
  isSpec: "True"
  fullName: Singularity.BindingMetadata.Generated
  nameWithType: BindingMetadata.Generated
- uid: Singularity.BindingMetadata.ModuleType
  name: ModuleType
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_ModuleType
  commentId: P:Singularity.BindingMetadata.ModuleType
  fullName: Singularity.BindingMetadata.ModuleType
  nameWithType: BindingMetadata.ModuleType
- uid: Singularity.BindingMetadata.ModuleType*
  name: ModuleType
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_ModuleType_
  commentId: Overload:Singularity.BindingMetadata.ModuleType
  isSpec: "True"
  fullName: Singularity.BindingMetadata.ModuleType
  nameWithType: BindingMetadata.ModuleType
- uid: Singularity.BindingMetadata.ToString
  name: ToString()
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_ToString
  commentId: M:Singularity.BindingMetadata.ToString
  fullName: Singularity.BindingMetadata.ToString()
  nameWithType: BindingMetadata.ToString()
- uid: Singularity.BindingMetadata.ToString*
  name: ToString
  href: api/Singularity.BindingMetadata.html#Singularity_BindingMetadata_ToString_
  commentId: Overload:Singularity.BindingMetadata.ToString
  isSpec: "True"
  fullName: Singularity.BindingMetadata.ToString
  nameWithType: BindingMetadata.ToString
- uid: Singularity.Collections
  name: Singularity.Collections
  href: api/Singularity.Collections.html
  commentId: N:Singularity.Collections
  fullName: Singularity.Collections
  nameWithType: Singularity.Collections
- uid: Singularity.Collections.ArrayList`1
  name: ArrayList<T>
  href: api/Singularity.Collections.ArrayList-1.html
  commentId: T:Singularity.Collections.ArrayList`1
  name.vb: ArrayList(Of T)
  fullName: Singularity.Collections.ArrayList<T>
  fullName.vb: Singularity.Collections.ArrayList(Of T)
  nameWithType: ArrayList<T>
  nameWithType.vb: ArrayList(Of T)
- uid: Singularity.Collections.ArrayList`1.#ctor
  name: ArrayList()
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1__ctor
  commentId: M:Singularity.Collections.ArrayList`1.#ctor
  fullName: Singularity.Collections.ArrayList<T>.ArrayList()
  fullName.vb: Singularity.Collections.ArrayList(Of T).ArrayList()
  nameWithType: ArrayList<T>.ArrayList()
  nameWithType.vb: ArrayList(Of T).ArrayList()
- uid: Singularity.Collections.ArrayList`1.#ctor(`0[])
  name: ArrayList(T[])
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1__ctor__0___
  commentId: M:Singularity.Collections.ArrayList`1.#ctor(`0[])
  name.vb: ArrayList(T())
  fullName: Singularity.Collections.ArrayList<T>.ArrayList(T[])
  fullName.vb: Singularity.Collections.ArrayList(Of T).ArrayList(T())
  nameWithType: ArrayList<T>.ArrayList(T[])
  nameWithType.vb: ArrayList(Of T).ArrayList(T())
- uid: Singularity.Collections.ArrayList`1.#ctor*
  name: ArrayList
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1__ctor_
  commentId: Overload:Singularity.Collections.ArrayList`1.#ctor
  isSpec: "True"
  fullName: Singularity.Collections.ArrayList<T>.ArrayList
  fullName.vb: Singularity.Collections.ArrayList(Of T).ArrayList
  nameWithType: ArrayList<T>.ArrayList
  nameWithType.vb: ArrayList(Of T).ArrayList
- uid: Singularity.Collections.ArrayList`1.Add(`0)
  name: Add(T)
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Add__0_
  commentId: M:Singularity.Collections.ArrayList`1.Add(`0)
  fullName: Singularity.Collections.ArrayList<T>.Add(T)
  fullName.vb: Singularity.Collections.ArrayList(Of T).Add(T)
  nameWithType: ArrayList<T>.Add(T)
  nameWithType.vb: ArrayList(Of T).Add(T)
- uid: Singularity.Collections.ArrayList`1.Add*
  name: Add
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Add_
  commentId: Overload:Singularity.Collections.ArrayList`1.Add
  isSpec: "True"
  fullName: Singularity.Collections.ArrayList<T>.Add
  fullName.vb: Singularity.Collections.ArrayList(Of T).Add
  nameWithType: ArrayList<T>.Add
  nameWithType.vb: ArrayList(Of T).Add
- uid: Singularity.Collections.ArrayList`1.Array
  name: Array
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Array
  commentId: P:Singularity.Collections.ArrayList`1.Array
  fullName: Singularity.Collections.ArrayList<T>.Array
  fullName.vb: Singularity.Collections.ArrayList(Of T).Array
  nameWithType: ArrayList<T>.Array
  nameWithType.vb: ArrayList(Of T).Array
- uid: Singularity.Collections.ArrayList`1.Array*
  name: Array
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Array_
  commentId: Overload:Singularity.Collections.ArrayList`1.Array
  isSpec: "True"
  fullName: Singularity.Collections.ArrayList<T>.Array
  fullName.vb: Singularity.Collections.ArrayList(Of T).Array
  nameWithType: ArrayList<T>.Array
  nameWithType.vb: ArrayList(Of T).Array
- uid: Singularity.Collections.ArrayList`1.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_GetEnumerator
  commentId: M:Singularity.Collections.ArrayList`1.GetEnumerator
  fullName: Singularity.Collections.ArrayList<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.ArrayList(Of T).GetEnumerator()
  nameWithType: ArrayList<T>.GetEnumerator()
  nameWithType.vb: ArrayList(Of T).GetEnumerator()
- uid: Singularity.Collections.ArrayList`1.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_GetEnumerator_
  commentId: Overload:Singularity.Collections.ArrayList`1.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.ArrayList<T>.GetEnumerator
  fullName.vb: Singularity.Collections.ArrayList(Of T).GetEnumerator
  nameWithType: ArrayList<T>.GetEnumerator
  nameWithType.vb: ArrayList(Of T).GetEnumerator
- uid: Singularity.Collections.ArrayList`1.Last
  name: Last()
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Last
  commentId: M:Singularity.Collections.ArrayList`1.Last
  fullName: Singularity.Collections.ArrayList<T>.Last()
  fullName.vb: Singularity.Collections.ArrayList(Of T).Last()
  nameWithType: ArrayList<T>.Last()
  nameWithType.vb: ArrayList(Of T).Last()
- uid: Singularity.Collections.ArrayList`1.Last*
  name: Last
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_Last_
  commentId: Overload:Singularity.Collections.ArrayList`1.Last
  isSpec: "True"
  fullName: Singularity.Collections.ArrayList<T>.Last
  fullName.vb: Singularity.Collections.ArrayList(Of T).Last
  nameWithType: ArrayList<T>.Last
  nameWithType.vb: ArrayList(Of T).Last
- uid: Singularity.Collections.ArrayList`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.ArrayList`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.ArrayList<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.ArrayList(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ArrayList<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: ArrayList(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.ArrayList`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.ArrayList-1.html#Singularity_Collections_ArrayList_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.ArrayList`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.ArrayList<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.ArrayList(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ArrayList<T>.IEnumerable.GetEnumerator
  nameWithType.vb: ArrayList(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.ConfigurationList`1
  name: ConfigurationList<T>
  href: api/Singularity.Collections.ConfigurationList-1.html
  commentId: T:Singularity.Collections.ConfigurationList`1
  name.vb: ConfigurationList(Of T)
  fullName: Singularity.Collections.ConfigurationList<T>
  fullName.vb: Singularity.Collections.ConfigurationList(Of T)
  nameWithType: ConfigurationList<T>
  nameWithType.vb: ConfigurationList(Of T)
- uid: Singularity.Collections.ConfigurationList`1.Add(`0)
  name: Add(T)
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Add__0_
  commentId: M:Singularity.Collections.ConfigurationList`1.Add(`0)
  fullName: Singularity.Collections.ConfigurationList<T>.Add(T)
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Add(T)
  nameWithType: ConfigurationList<T>.Add(T)
  nameWithType.vb: ConfigurationList(Of T).Add(T)
- uid: Singularity.Collections.ConfigurationList`1.Add*
  name: Add
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Add_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.Add
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.Add
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Add
  nameWithType: ConfigurationList<T>.Add
  nameWithType.vb: ConfigurationList(Of T).Add
- uid: Singularity.Collections.ConfigurationList`1.After(System.Func{`0,System.Boolean},`0)
  name: After(Func<T, Boolean>, T)
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_After_System_Func__0_System_Boolean___0_
  commentId: M:Singularity.Collections.ConfigurationList`1.After(System.Func{`0,System.Boolean},`0)
  name.vb: After(Func(Of T, Boolean), T)
  fullName: Singularity.Collections.ConfigurationList<T>.After(System.Func<T, System.Boolean>, T)
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).After(System.Func(Of T, System.Boolean), T)
  nameWithType: ConfigurationList<T>.After(Func<T, Boolean>, T)
  nameWithType.vb: ConfigurationList(Of T).After(Func(Of T, Boolean), T)
- uid: Singularity.Collections.ConfigurationList`1.After*
  name: After
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_After_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.After
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.After
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).After
  nameWithType: ConfigurationList<T>.After
  nameWithType.vb: ConfigurationList(Of T).After
- uid: Singularity.Collections.ConfigurationList`1.Before(System.Func{`0,System.Boolean},`0)
  name: Before(Func<T, Boolean>, T)
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Before_System_Func__0_System_Boolean___0_
  commentId: M:Singularity.Collections.ConfigurationList`1.Before(System.Func{`0,System.Boolean},`0)
  name.vb: Before(Func(Of T, Boolean), T)
  fullName: Singularity.Collections.ConfigurationList<T>.Before(System.Func<T, System.Boolean>, T)
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Before(System.Func(Of T, System.Boolean), T)
  nameWithType: ConfigurationList<T>.Before(Func<T, Boolean>, T)
  nameWithType.vb: ConfigurationList(Of T).Before(Func(Of T, Boolean), T)
- uid: Singularity.Collections.ConfigurationList`1.Before*
  name: Before
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Before_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.Before
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.Before
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Before
  nameWithType: ConfigurationList<T>.Before
  nameWithType.vb: ConfigurationList(Of T).Before
- uid: Singularity.Collections.ConfigurationList`1.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_GetEnumerator
  commentId: M:Singularity.Collections.ConfigurationList`1.GetEnumerator
  fullName: Singularity.Collections.ConfigurationList<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).GetEnumerator()
  nameWithType: ConfigurationList<T>.GetEnumerator()
  nameWithType.vb: ConfigurationList(Of T).GetEnumerator()
- uid: Singularity.Collections.ConfigurationList`1.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_GetEnumerator_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.GetEnumerator
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).GetEnumerator
  nameWithType: ConfigurationList<T>.GetEnumerator
  nameWithType.vb: ConfigurationList(Of T).GetEnumerator
- uid: Singularity.Collections.ConfigurationList`1.Remove(System.Func{`0,System.Boolean})
  name: Remove(Func<T, Boolean>)
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Remove_System_Func__0_System_Boolean__
  commentId: M:Singularity.Collections.ConfigurationList`1.Remove(System.Func{`0,System.Boolean})
  name.vb: Remove(Func(Of T, Boolean))
  fullName: Singularity.Collections.ConfigurationList<T>.Remove(System.Func<T, System.Boolean>)
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Remove(System.Func(Of T, System.Boolean))
  nameWithType: ConfigurationList<T>.Remove(Func<T, Boolean>)
  nameWithType.vb: ConfigurationList(Of T).Remove(Func(Of T, Boolean))
- uid: Singularity.Collections.ConfigurationList`1.Remove*
  name: Remove
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Remove_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.Remove
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.Remove
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Remove
  nameWithType: ConfigurationList<T>.Remove
  nameWithType.vb: ConfigurationList(Of T).Remove
- uid: Singularity.Collections.ConfigurationList`1.Replace(System.Func{`0,System.Boolean},`0)
  name: Replace(Func<T, Boolean>, T)
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Replace_System_Func__0_System_Boolean___0_
  commentId: M:Singularity.Collections.ConfigurationList`1.Replace(System.Func{`0,System.Boolean},`0)
  name.vb: Replace(Func(Of T, Boolean), T)
  fullName: Singularity.Collections.ConfigurationList<T>.Replace(System.Func<T, System.Boolean>, T)
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Replace(System.Func(Of T, System.Boolean), T)
  nameWithType: ConfigurationList<T>.Replace(Func<T, Boolean>, T)
  nameWithType.vb: ConfigurationList(Of T).Replace(Func(Of T, Boolean), T)
- uid: Singularity.Collections.ConfigurationList`1.Replace*
  name: Replace
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_Replace_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.Replace
  isSpec: "True"
  fullName: Singularity.Collections.ConfigurationList<T>.Replace
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).Replace
  nameWithType: ConfigurationList<T>.Replace
  nameWithType.vb: ConfigurationList(Of T).Replace
- uid: Singularity.Collections.ConfigurationList`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.ConfigurationList`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.ConfigurationList<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ConfigurationList<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: ConfigurationList(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.ConfigurationList`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.ConfigurationList-1.html#Singularity_Collections_ConfigurationList_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.ConfigurationList`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.ConfigurationList<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.ConfigurationList(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: ConfigurationList<T>.IEnumerable.GetEnumerator
  nameWithType.vb: ConfigurationList(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2
  name: SinglyLinkedListKeyNode<TKey, TValue>
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html
  commentId: T:Singularity.Collections.SinglyLinkedListKeyNode`2
  name.vb: SinglyLinkedListKeyNode(Of TKey, TValue)
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue)
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue)
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor(Singularity.Collections.SinglyLinkedListKeyNode{`0,`1},`0@,`1@)
  name: SinglyLinkedListKeyNode(SinglyLinkedListKeyNode<TKey, TValue>, TKey, TValue)
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2__ctor_Singularity_Collections_SinglyLinkedListKeyNode__0__1___0___1__
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor(Singularity.Collections.SinglyLinkedListKeyNode{`0,`1},`0@,`1@)
  name.vb: SinglyLinkedListKeyNode(SinglyLinkedListKeyNode(Of TKey, TValue), ByRef TKey, ByRef TValue)
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode(Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>, TKey, TValue)
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode(Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue), ByRef TKey, ByRef TValue)
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode(SinglyLinkedListKeyNode<TKey, TValue>, TKey, TValue)
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode(SinglyLinkedListKeyNode(Of TKey, TValue), ByRef TKey, ByRef TValue)
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor*
  name: SinglyLinkedListKeyNode
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2__ctor_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.#ctor
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.SinglyLinkedListKeyNode
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).SinglyLinkedListKeyNode
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator
  name: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html
  commentId: T:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator
  name.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current*
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Current
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  name: Dispose()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Dispose
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose*
  name: Dispose
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Dispose_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Dispose
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Dispose
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Dispose
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  name: MoveNext()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_MoveNext
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext*
  name: MoveNext
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_MoveNext_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.MoveNext
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.MoveNext
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.MoveNext
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  name: Reset()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Reset
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset*
  name: Reset
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_Reset_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.Reset
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.Reset
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.Reset
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.Enumerator.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Key
  name: Key
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Key
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Key
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Key
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Key
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Key
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Key
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Next
  name: Next
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Next
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Next
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Next
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Next
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Next
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Next
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  name: IEnumerable<TValue>.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_Generic_IEnumerable_TValue__GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable<TValue>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator*
  name: IEnumerable<TValue>.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_Generic_IEnumerable_TValue__GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable<TValue>.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.Generic.IEnumerable<TValue>.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable.GetEnumerator()
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListKeyNode`2.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.IEnumerable.GetEnumerator
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListKeyNode`2.Value
  name: Value
  href: api/Singularity.Collections.SinglyLinkedListKeyNode-2.html#Singularity_Collections_SinglyLinkedListKeyNode_2_Value
  commentId: F:Singularity.Collections.SinglyLinkedListKeyNode`2.Value
  fullName: Singularity.Collections.SinglyLinkedListKeyNode<TKey, TValue>.Value
  fullName.vb: Singularity.Collections.SinglyLinkedListKeyNode(Of TKey, TValue).Value
  nameWithType: SinglyLinkedListKeyNode<TKey, TValue>.Value
  nameWithType.vb: SinglyLinkedListKeyNode(Of TKey, TValue).Value
- uid: Singularity.Collections.SinglyLinkedListNode`1
  name: SinglyLinkedListNode<T>
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html
  commentId: T:Singularity.Collections.SinglyLinkedListNode`1
  name.vb: SinglyLinkedListNode(Of T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T)
  nameWithType: SinglyLinkedListNode<T>
  nameWithType.vb: SinglyLinkedListNode(Of T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor(`0@)
  name: SinglyLinkedListNode(T)
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor__0__
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.#ctor(`0@)
  name.vb: SinglyLinkedListNode(ByRef T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode(T)
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode(ByRef T)
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode(T)
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode(ByRef T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor(Singularity.Collections.SinglyLinkedListNode{`0},`0@)
  name: SinglyLinkedListNode(SinglyLinkedListNode<T>, T)
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor_Singularity_Collections_SinglyLinkedListNode__0___0__
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.#ctor(Singularity.Collections.SinglyLinkedListNode{`0},`0@)
  name.vb: SinglyLinkedListNode(SinglyLinkedListNode(Of T), ByRef T)
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode(Singularity.Collections.SinglyLinkedListNode<T>, T)
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode(Singularity.Collections.SinglyLinkedListNode(Of T), ByRef T)
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode(SinglyLinkedListNode<T>, T)
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode(SinglyLinkedListNode(Of T), ByRef T)
- uid: Singularity.Collections.SinglyLinkedListNode`1.#ctor*
  name: SinglyLinkedListNode
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1__ctor_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.#ctor
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.SinglyLinkedListNode
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).SinglyLinkedListNode
  nameWithType: SinglyLinkedListNode<T>.SinglyLinkedListNode
  nameWithType.vb: SinglyLinkedListNode(Of T).SinglyLinkedListNode
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator
  name: SinglyLinkedListNode<T>.Enumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html
  commentId: T:Singularity.Collections.SinglyLinkedListNode`1.Enumerator
  name.vb: SinglyLinkedListNode(Of T).Enumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator
  nameWithType: SinglyLinkedListNode<T>.Enumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current*
  name: Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Current
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  name: Dispose()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Dispose
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Dispose()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Dispose()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Dispose()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Dispose()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose*
  name: Dispose
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Dispose_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Dispose
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Dispose
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Dispose
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Dispose
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Dispose
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  name: MoveNext()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_MoveNext
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.MoveNext()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.MoveNext()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.MoveNext()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.MoveNext()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext*
  name: MoveNext
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_MoveNext_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.MoveNext
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.MoveNext
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.MoveNext
  nameWithType: SinglyLinkedListNode<T>.Enumerator.MoveNext
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.MoveNext
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  name: Reset()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Reset
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Reset()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Reset()
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Reset()
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Reset()
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset*
  name: Reset
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_Reset_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.Reset
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.Reset
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.Reset
  nameWithType: SinglyLinkedListNode<T>.Enumerator.Reset
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.Reset
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_System_Collections_IEnumerator_Current
  commentId: P:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current*
  name: IEnumerator.Current
  href: api/Singularity.Collections.SinglyLinkedListNode-1.Enumerator.html#Singularity_Collections_SinglyLinkedListNode_1_Enumerator_System_Collections_IEnumerator_Current_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.Enumerator.System#Collections#IEnumerator#Current
  isSpec: "True"
  name.vb: System.Collections.IEnumerator.Current
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Enumerator.System.Collections.IEnumerator.Current
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
  nameWithType: SinglyLinkedListNode<T>.Enumerator.IEnumerator.Current
  nameWithType.vb: SinglyLinkedListNode(Of T).Enumerator.System.Collections.IEnumerator.Current
- uid: Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  name: GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator*
  name: GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.GetEnumerator
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Next
  name: Next
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_Next
  commentId: F:Singularity.Collections.SinglyLinkedListNode`1.Next
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Next
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Next
  nameWithType: SinglyLinkedListNode<T>.Next
  nameWithType.vb: SinglyLinkedListNode(Of T).Next
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_Generic_IEnumerable_T__GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  name: IEnumerable<T>.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_Generic_IEnumerable_T__GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.IEnumerable<T>.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_IEnumerable_GetEnumerator
  commentId: M:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SinglyLinkedListNode<T>.IEnumerable.GetEnumerator()
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator()
- uid: Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator*
  name: IEnumerable.GetEnumerator
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_System_Collections_IEnumerable_GetEnumerator_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNode`1.System#Collections#IEnumerable#GetEnumerator
  isSpec: "True"
  name.vb: System.Collections.IEnumerable.GetEnumerator
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.System.Collections.IEnumerable.GetEnumerator
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator
  nameWithType: SinglyLinkedListNode<T>.IEnumerable.GetEnumerator
  nameWithType.vb: SinglyLinkedListNode(Of T).System.Collections.IEnumerable.GetEnumerator
- uid: Singularity.Collections.SinglyLinkedListNode`1.Value
  name: Value
  href: api/Singularity.Collections.SinglyLinkedListNode-1.html#Singularity_Collections_SinglyLinkedListNode_1_Value
  commentId: F:Singularity.Collections.SinglyLinkedListNode`1.Value
  fullName: Singularity.Collections.SinglyLinkedListNode<T>.Value
  fullName.vb: Singularity.Collections.SinglyLinkedListNode(Of T).Value
  nameWithType: SinglyLinkedListNode<T>.Value
  nameWithType.vb: SinglyLinkedListNode(Of T).Value
- uid: Singularity.Collections.SinglyLinkedListNodeExtensions
  name: SinglyLinkedListNodeExtensions
  href: api/Singularity.Collections.SinglyLinkedListNodeExtensions.html
  commentId: T:Singularity.Collections.SinglyLinkedListNodeExtensions
  fullName: Singularity.Collections.SinglyLinkedListNodeExtensions
  nameWithType: SinglyLinkedListNodeExtensions
- uid: Singularity.Collections.SinglyLinkedListNodeExtensions.Add*
  name: Add
  href: api/Singularity.Collections.SinglyLinkedListNodeExtensions.html#Singularity_Collections_SinglyLinkedListNodeExtensions_Add_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNodeExtensions.Add
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNodeExtensions.Add
  nameWithType: SinglyLinkedListNodeExtensions.Add
- uid: Singularity.Collections.SinglyLinkedListNodeExtensions.Add``1(Singularity.Collections.SinglyLinkedListNode{``0},``0@)
  name: Add<T>(SinglyLinkedListNode<T>, T)
  href: api/Singularity.Collections.SinglyLinkedListNodeExtensions.html#Singularity_Collections_SinglyLinkedListNodeExtensions_Add__1_Singularity_Collections_SinglyLinkedListNode___0____0__
  commentId: M:Singularity.Collections.SinglyLinkedListNodeExtensions.Add``1(Singularity.Collections.SinglyLinkedListNode{``0},``0@)
  name.vb: Add(Of T)(SinglyLinkedListNode(Of T), ByRef T)
  fullName: Singularity.Collections.SinglyLinkedListNodeExtensions.Add<T>(Singularity.Collections.SinglyLinkedListNode<T>, T)
  fullName.vb: Singularity.Collections.SinglyLinkedListNodeExtensions.Add(Of T)(Singularity.Collections.SinglyLinkedListNode(Of T), ByRef T)
  nameWithType: SinglyLinkedListNodeExtensions.Add<T>(SinglyLinkedListNode<T>, T)
  nameWithType.vb: SinglyLinkedListNodeExtensions.Add(Of T)(SinglyLinkedListNode(Of T), ByRef T)
- uid: Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList*
  name: ToSinglyLinkedList
  href: api/Singularity.Collections.SinglyLinkedListNodeExtensions.html#Singularity_Collections_SinglyLinkedListNodeExtensions_ToSinglyLinkedList_
  commentId: Overload:Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList
  isSpec: "True"
  fullName: Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList
  nameWithType: SinglyLinkedListNodeExtensions.ToSinglyLinkedList
- uid: Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList``1(System.Collections.Generic.IEnumerable{``0})
  name: ToSinglyLinkedList<T>(IEnumerable<T>)
  href: api/Singularity.Collections.SinglyLinkedListNodeExtensions.html#Singularity_Collections_SinglyLinkedListNodeExtensions_ToSinglyLinkedList__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: ToSinglyLinkedList(Of T)(IEnumerable(Of T))
  fullName: Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.Collections.SinglyLinkedListNodeExtensions.ToSinglyLinkedList(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: SinglyLinkedListNodeExtensions.ToSinglyLinkedList<T>(IEnumerable<T>)
  nameWithType.vb: SinglyLinkedListNodeExtensions.ToSinglyLinkedList(Of T)(IEnumerable(Of T))
- uid: Singularity.ConfigurationExtensions
  name: ConfigurationExtensions
  href: api/Singularity.ConfigurationExtensions.html
  commentId: T:Singularity.ConfigurationExtensions
  fullName: Singularity.ConfigurationExtensions
  nameWithType: ConfigurationExtensions
- uid: Singularity.ConfigurationExtensions.CreateContainerBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,Singularity.SingularitySettings)
  name: CreateContainerBuilder(IServiceCollection, SingularitySettings)
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_CreateContainerBuilder_Microsoft_Extensions_DependencyInjection_IServiceCollection_Singularity_SingularitySettings_
  commentId: M:Singularity.ConfigurationExtensions.CreateContainerBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,Singularity.SingularitySettings)
  fullName: Singularity.ConfigurationExtensions.CreateContainerBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection, Singularity.SingularitySettings)
  nameWithType: ConfigurationExtensions.CreateContainerBuilder(IServiceCollection, SingularitySettings)
- uid: Singularity.ConfigurationExtensions.CreateContainerBuilder*
  name: CreateContainerBuilder
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_CreateContainerBuilder_
  commentId: Overload:Singularity.ConfigurationExtensions.CreateContainerBuilder
  isSpec: "True"
  fullName: Singularity.ConfigurationExtensions.CreateContainerBuilder
  nameWithType: ConfigurationExtensions.CreateContainerBuilder
- uid: Singularity.ConfigurationExtensions.RegisterService(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  name: RegisterService(ContainerBuilder, ServiceDescriptor)
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterService_Singularity_ContainerBuilder_Microsoft_Extensions_DependencyInjection_ServiceDescriptor_
  commentId: M:Singularity.ConfigurationExtensions.RegisterService(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  fullName: Singularity.ConfigurationExtensions.RegisterService(Singularity.ContainerBuilder, Microsoft.Extensions.DependencyInjection.ServiceDescriptor)
  nameWithType: ConfigurationExtensions.RegisterService(ContainerBuilder, ServiceDescriptor)
- uid: Singularity.ConfigurationExtensions.RegisterService*
  name: RegisterService
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterService_
  commentId: Overload:Singularity.ConfigurationExtensions.RegisterService
  isSpec: "True"
  fullName: Singularity.ConfigurationExtensions.RegisterService
  nameWithType: ConfigurationExtensions.RegisterService
- uid: Singularity.ConfigurationExtensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  name: RegisterServiceProvider(ContainerBuilder)
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterServiceProvider_Singularity_ContainerBuilder_
  commentId: M:Singularity.ConfigurationExtensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  fullName: Singularity.ConfigurationExtensions.RegisterServiceProvider(Singularity.ContainerBuilder)
  nameWithType: ConfigurationExtensions.RegisterServiceProvider(ContainerBuilder)
- uid: Singularity.ConfigurationExtensions.RegisterServiceProvider*
  name: RegisterServiceProvider
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterServiceProvider_
  commentId: Overload:Singularity.ConfigurationExtensions.RegisterServiceProvider
  isSpec: "True"
  fullName: Singularity.ConfigurationExtensions.RegisterServiceProvider
  nameWithType: ConfigurationExtensions.RegisterServiceProvider
- uid: Singularity.ConfigurationExtensions.RegisterServices(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: RegisterServices(ContainerBuilder, IServiceCollection)
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterServices_Singularity_ContainerBuilder_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Singularity.ConfigurationExtensions.RegisterServices(Singularity.ContainerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Singularity.ConfigurationExtensions.RegisterServices(Singularity.ContainerBuilder, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: ConfigurationExtensions.RegisterServices(ContainerBuilder, IServiceCollection)
- uid: Singularity.ConfigurationExtensions.RegisterServices*
  name: RegisterServices
  href: api/Singularity.ConfigurationExtensions.html#Singularity_ConfigurationExtensions_RegisterServices_
  commentId: Overload:Singularity.ConfigurationExtensions.RegisterServices
  isSpec: "True"
  fullName: Singularity.ConfigurationExtensions.RegisterServices
  nameWithType: ConfigurationExtensions.RegisterServices
- uid: Singularity.ConstructorResolverCache
  name: ConstructorResolverCache
  href: api/Singularity.ConstructorResolverCache.html
  commentId: T:Singularity.ConstructorResolverCache
  fullName: Singularity.ConstructorResolverCache
  nameWithType: ConstructorResolverCache
- uid: Singularity.ConstructorResolverCache.#ctor(Singularity.Expressions.IConstructorResolver)
  name: ConstructorResolverCache(IConstructorResolver)
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache__ctor_Singularity_Expressions_IConstructorResolver_
  commentId: M:Singularity.ConstructorResolverCache.#ctor(Singularity.Expressions.IConstructorResolver)
  fullName: Singularity.ConstructorResolverCache.ConstructorResolverCache(Singularity.Expressions.IConstructorResolver)
  nameWithType: ConstructorResolverCache.ConstructorResolverCache(IConstructorResolver)
- uid: Singularity.ConstructorResolverCache.#ctor*
  name: ConstructorResolverCache
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache__ctor_
  commentId: Overload:Singularity.ConstructorResolverCache.#ctor
  isSpec: "True"
  fullName: Singularity.ConstructorResolverCache.ConstructorResolverCache
  nameWithType: ConstructorResolverCache.ConstructorResolverCache
- uid: Singularity.ConstructorResolverCache.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  name: DynamicSelectConstructor(Type, IInstanceFactoryResolver)
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_DynamicSelectConstructor_System_Type_Singularity_Resolving_IInstanceFactoryResolver_
  commentId: M:Singularity.ConstructorResolverCache.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  fullName: Singularity.ConstructorResolverCache.DynamicSelectConstructor(System.Type, Singularity.Resolving.IInstanceFactoryResolver)
  nameWithType: ConstructorResolverCache.DynamicSelectConstructor(Type, IInstanceFactoryResolver)
- uid: Singularity.ConstructorResolverCache.DynamicSelectConstructor*
  name: DynamicSelectConstructor
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_DynamicSelectConstructor_
  commentId: Overload:Singularity.ConstructorResolverCache.DynamicSelectConstructor
  isSpec: "True"
  fullName: Singularity.ConstructorResolverCache.DynamicSelectConstructor
  nameWithType: ConstructorResolverCache.DynamicSelectConstructor
- uid: Singularity.ConstructorResolverCache.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  name: ResolveConstructorExpression(Type, ConstructorInfo)
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_ResolveConstructorExpression_System_Type_System_Reflection_ConstructorInfo_
  commentId: M:Singularity.ConstructorResolverCache.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  fullName: Singularity.ConstructorResolverCache.ResolveConstructorExpression(System.Type, System.Reflection.ConstructorInfo)
  nameWithType: ConstructorResolverCache.ResolveConstructorExpression(Type, ConstructorInfo)
- uid: Singularity.ConstructorResolverCache.ResolveConstructorExpression*
  name: ResolveConstructorExpression
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_ResolveConstructorExpression_
  commentId: Overload:Singularity.ConstructorResolverCache.ResolveConstructorExpression
  isSpec: "True"
  fullName: Singularity.ConstructorResolverCache.ResolveConstructorExpression
  nameWithType: ConstructorResolverCache.ResolveConstructorExpression
- uid: Singularity.ConstructorResolverCache.StaticSelectConstructor(System.Type)
  name: StaticSelectConstructor(Type)
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_StaticSelectConstructor_System_Type_
  commentId: M:Singularity.ConstructorResolverCache.StaticSelectConstructor(System.Type)
  fullName: Singularity.ConstructorResolverCache.StaticSelectConstructor(System.Type)
  nameWithType: ConstructorResolverCache.StaticSelectConstructor(Type)
- uid: Singularity.ConstructorResolverCache.StaticSelectConstructor*
  name: StaticSelectConstructor
  href: api/Singularity.ConstructorResolverCache.html#Singularity_ConstructorResolverCache_StaticSelectConstructor_
  commentId: Overload:Singularity.ConstructorResolverCache.StaticSelectConstructor
  isSpec: "True"
  fullName: Singularity.ConstructorResolverCache.StaticSelectConstructor
  nameWithType: ConstructorResolverCache.StaticSelectConstructor
- uid: Singularity.ConstructorResolverExtensions
  name: ConstructorResolverExtensions
  href: api/Singularity.ConstructorResolverExtensions.html
  commentId: T:Singularity.ConstructorResolverExtensions
  fullName: Singularity.ConstructorResolverExtensions
  nameWithType: ConstructorResolverExtensions
- uid: Singularity.ConstructorResolverExtensions.GetConstructorCandidates(System.Type)
  name: GetConstructorCandidates(Type)
  href: api/Singularity.ConstructorResolverExtensions.html#Singularity_ConstructorResolverExtensions_GetConstructorCandidates_System_Type_
  commentId: M:Singularity.ConstructorResolverExtensions.GetConstructorCandidates(System.Type)
  fullName: Singularity.ConstructorResolverExtensions.GetConstructorCandidates(System.Type)
  nameWithType: ConstructorResolverExtensions.GetConstructorCandidates(Type)
- uid: Singularity.ConstructorResolverExtensions.GetConstructorCandidates*
  name: GetConstructorCandidates
  href: api/Singularity.ConstructorResolverExtensions.html#Singularity_ConstructorResolverExtensions_GetConstructorCandidates_
  commentId: Overload:Singularity.ConstructorResolverExtensions.GetConstructorCandidates
  isSpec: "True"
  fullName: Singularity.ConstructorResolverExtensions.GetConstructorCandidates
  nameWithType: ConstructorResolverExtensions.GetConstructorCandidates
- uid: Singularity.ConstructorResolverExtensions.ResolveConstructorExpression(Singularity.Expressions.IConstructorResolver,System.Type)
  name: ResolveConstructorExpression(IConstructorResolver, Type)
  href: api/Singularity.ConstructorResolverExtensions.html#Singularity_ConstructorResolverExtensions_ResolveConstructorExpression_Singularity_Expressions_IConstructorResolver_System_Type_
  commentId: M:Singularity.ConstructorResolverExtensions.ResolveConstructorExpression(Singularity.Expressions.IConstructorResolver,System.Type)
  fullName: Singularity.ConstructorResolverExtensions.ResolveConstructorExpression(Singularity.Expressions.IConstructorResolver, System.Type)
  nameWithType: ConstructorResolverExtensions.ResolveConstructorExpression(IConstructorResolver, Type)
- uid: Singularity.ConstructorResolverExtensions.ResolveConstructorExpression*
  name: ResolveConstructorExpression
  href: api/Singularity.ConstructorResolverExtensions.html#Singularity_ConstructorResolverExtensions_ResolveConstructorExpression_
  commentId: Overload:Singularity.ConstructorResolverExtensions.ResolveConstructorExpression
  isSpec: "True"
  fullName: Singularity.ConstructorResolverExtensions.ResolveConstructorExpression
  nameWithType: ConstructorResolverExtensions.ResolveConstructorExpression
- uid: Singularity.ConstructorResolvers
  name: ConstructorResolvers
  href: api/Singularity.ConstructorResolvers.html
  commentId: T:Singularity.ConstructorResolvers
  fullName: Singularity.ConstructorResolvers
  nameWithType: ConstructorResolvers
- uid: Singularity.ConstructorResolvers.BestMatch
  name: BestMatch
  href: api/Singularity.ConstructorResolvers.html#Singularity_ConstructorResolvers_BestMatch
  commentId: P:Singularity.ConstructorResolvers.BestMatch
  fullName: Singularity.ConstructorResolvers.BestMatch
  nameWithType: ConstructorResolvers.BestMatch
- uid: Singularity.ConstructorResolvers.BestMatch*
  name: BestMatch
  href: api/Singularity.ConstructorResolvers.html#Singularity_ConstructorResolvers_BestMatch_
  commentId: Overload:Singularity.ConstructorResolvers.BestMatch
  isSpec: "True"
  fullName: Singularity.ConstructorResolvers.BestMatch
  nameWithType: ConstructorResolvers.BestMatch
- uid: Singularity.ConstructorResolvers.Default
  name: Default
  href: api/Singularity.ConstructorResolvers.html#Singularity_ConstructorResolvers_Default
  commentId: P:Singularity.ConstructorResolvers.Default
  fullName: Singularity.ConstructorResolvers.Default
  nameWithType: ConstructorResolvers.Default
- uid: Singularity.ConstructorResolvers.Default*
  name: Default
  href: api/Singularity.ConstructorResolvers.html#Singularity_ConstructorResolvers_Default_
  commentId: Overload:Singularity.ConstructorResolvers.Default
  isSpec: "True"
  fullName: Singularity.ConstructorResolvers.Default
  nameWithType: ConstructorResolvers.Default
- uid: Singularity.Container
  name: Container
  href: api/Singularity.Container.html
  commentId: T:Singularity.Container
  fullName: Singularity.Container
  nameWithType: Container
- uid: Singularity.Container.#ctor(Singularity.ContainerBuilder)
  name: Container(ContainerBuilder)
  href: api/Singularity.Container.html#Singularity_Container__ctor_Singularity_ContainerBuilder_
  commentId: M:Singularity.Container.#ctor(Singularity.ContainerBuilder)
  fullName: Singularity.Container.Container(Singularity.ContainerBuilder)
  nameWithType: Container.Container(ContainerBuilder)
- uid: Singularity.Container.#ctor(System.Action{Singularity.ContainerBuilder})
  name: Container(Action<ContainerBuilder>)
  href: api/Singularity.Container.html#Singularity_Container__ctor_System_Action_Singularity_ContainerBuilder__
  commentId: M:Singularity.Container.#ctor(System.Action{Singularity.ContainerBuilder})
  name.vb: Container(Action(Of ContainerBuilder))
  fullName: Singularity.Container.Container(System.Action<Singularity.ContainerBuilder>)
  fullName.vb: Singularity.Container.Container(System.Action(Of Singularity.ContainerBuilder))
  nameWithType: Container.Container(Action<ContainerBuilder>)
  nameWithType.vb: Container.Container(Action(Of ContainerBuilder))
- uid: Singularity.Container.#ctor(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name: Container(IEnumerable<IModule>)
  href: api/Singularity.Container.html#Singularity_Container__ctor_System_Collections_Generic_IEnumerable_Singularity_IModule__
  commentId: M:Singularity.Container.#ctor(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name.vb: Container(IEnumerable(Of IModule))
  fullName: Singularity.Container.Container(System.Collections.Generic.IEnumerable<Singularity.IModule>)
  fullName.vb: Singularity.Container.Container(System.Collections.Generic.IEnumerable(Of Singularity.IModule))
  nameWithType: Container.Container(IEnumerable<IModule>)
  nameWithType.vb: Container.Container(IEnumerable(Of IModule))
- uid: Singularity.Container.#ctor*
  name: Container
  href: api/Singularity.Container.html#Singularity_Container__ctor_
  commentId: Overload:Singularity.Container.#ctor
  isSpec: "True"
  fullName: Singularity.Container.Container
  nameWithType: Container.Container
- uid: Singularity.Container.BeginScope
  name: BeginScope()
  href: api/Singularity.Container.html#Singularity_Container_BeginScope
  commentId: M:Singularity.Container.BeginScope
  fullName: Singularity.Container.BeginScope()
  nameWithType: Container.BeginScope()
- uid: Singularity.Container.BeginScope*
  name: BeginScope
  href: api/Singularity.Container.html#Singularity_Container_BeginScope_
  commentId: Overload:Singularity.Container.BeginScope
  isSpec: "True"
  fullName: Singularity.Container.BeginScope
  nameWithType: Container.BeginScope
- uid: Singularity.Container.Dispose
  name: Dispose()
  href: api/Singularity.Container.html#Singularity_Container_Dispose
  commentId: M:Singularity.Container.Dispose
  fullName: Singularity.Container.Dispose()
  nameWithType: Container.Dispose()
- uid: Singularity.Container.Dispose*
  name: Dispose
  href: api/Singularity.Container.html#Singularity_Container_Dispose_
  commentId: Overload:Singularity.Container.Dispose
  isSpec: "True"
  fullName: Singularity.Container.Dispose
  nameWithType: Container.Dispose
- uid: Singularity.Container.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.Container.html#Singularity_Container_GetInstance_System_Type_
  commentId: M:Singularity.Container.GetInstance(System.Type)
  fullName: Singularity.Container.GetInstance(System.Type)
  nameWithType: Container.GetInstance(Type)
- uid: Singularity.Container.GetInstance*
  name: GetInstance
  href: api/Singularity.Container.html#Singularity_Container_GetInstance_
  commentId: Overload:Singularity.Container.GetInstance
  isSpec: "True"
  fullName: Singularity.Container.GetInstance
  nameWithType: Container.GetInstance
- uid: Singularity.Container.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.Container.html#Singularity_Container_GetInstance__1
  commentId: M:Singularity.Container.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.Container.GetInstance<T>()
  fullName.vb: Singularity.Container.GetInstance(Of T)()
  nameWithType: Container.GetInstance<T>()
  nameWithType.vb: Container.GetInstance(Of T)()
- uid: Singularity.Container.GetInstanceOrDefault(System.Type)
  name: GetInstanceOrDefault(Type)
  href: api/Singularity.Container.html#Singularity_Container_GetInstanceOrDefault_System_Type_
  commentId: M:Singularity.Container.GetInstanceOrDefault(System.Type)
  fullName: Singularity.Container.GetInstanceOrDefault(System.Type)
  nameWithType: Container.GetInstanceOrDefault(Type)
- uid: Singularity.Container.GetInstanceOrDefault*
  name: GetInstanceOrDefault
  href: api/Singularity.Container.html#Singularity_Container_GetInstanceOrDefault_
  commentId: Overload:Singularity.Container.GetInstanceOrDefault
  isSpec: "True"
  fullName: Singularity.Container.GetInstanceOrDefault
  nameWithType: Container.GetInstanceOrDefault
- uid: Singularity.Container.GetInstanceOrDefault``1
  name: GetInstanceOrDefault<T>()
  href: api/Singularity.Container.html#Singularity_Container_GetInstanceOrDefault__1
  commentId: M:Singularity.Container.GetInstanceOrDefault``1
  name.vb: GetInstanceOrDefault(Of T)()
  fullName: Singularity.Container.GetInstanceOrDefault<T>()
  fullName.vb: Singularity.Container.GetInstanceOrDefault(Of T)()
  nameWithType: Container.GetInstanceOrDefault<T>()
  nameWithType.vb: Container.GetInstanceOrDefault(Of T)()
- uid: Singularity.Container.GetNestedContainer(System.Action{Singularity.ContainerBuilder})
  name: GetNestedContainer(Action<ContainerBuilder>)
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_System_Action_Singularity_ContainerBuilder__
  commentId: M:Singularity.Container.GetNestedContainer(System.Action{Singularity.ContainerBuilder})
  name.vb: GetNestedContainer(Action(Of ContainerBuilder))
  fullName: Singularity.Container.GetNestedContainer(System.Action<Singularity.ContainerBuilder>)
  fullName.vb: Singularity.Container.GetNestedContainer(System.Action(Of Singularity.ContainerBuilder))
  nameWithType: Container.GetNestedContainer(Action<ContainerBuilder>)
  nameWithType.vb: Container.GetNestedContainer(Action(Of ContainerBuilder))
- uid: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name: GetNestedContainer(IEnumerable<IModule>)
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_System_Collections_Generic_IEnumerable_Singularity_IModule__
  commentId: M:Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable{Singularity.IModule})
  name.vb: GetNestedContainer(IEnumerable(Of IModule))
  fullName: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable<Singularity.IModule>)
  fullName.vb: Singularity.Container.GetNestedContainer(System.Collections.Generic.IEnumerable(Of Singularity.IModule))
  nameWithType: Container.GetNestedContainer(IEnumerable<IModule>)
  nameWithType.vb: Container.GetNestedContainer(IEnumerable(Of IModule))
- uid: Singularity.Container.GetNestedContainer*
  name: GetNestedContainer
  href: api/Singularity.Container.html#Singularity_Container_GetNestedContainer_
  commentId: Overload:Singularity.Container.GetNestedContainer
  isSpec: "True"
  fullName: Singularity.Container.GetNestedContainer
  nameWithType: Container.GetNestedContainer
- uid: Singularity.Container.IsDisposed
  name: IsDisposed
  href: api/Singularity.Container.html#Singularity_Container_IsDisposed
  commentId: P:Singularity.Container.IsDisposed
  fullName: Singularity.Container.IsDisposed
  nameWithType: Container.IsDisposed
- uid: Singularity.Container.IsDisposed*
  name: IsDisposed
  href: api/Singularity.Container.html#Singularity_Container_IsDisposed_
  commentId: Overload:Singularity.Container.IsDisposed
  isSpec: "True"
  fullName: Singularity.Container.IsDisposed
  nameWithType: Container.IsDisposed
- uid: Singularity.Container.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.Container.html#Singularity_Container_LateInject_System_Object_
  commentId: M:Singularity.Container.LateInject(System.Object)
  fullName: Singularity.Container.LateInject(System.Object)
  nameWithType: Container.LateInject(Object)
- uid: Singularity.Container.LateInject*
  name: LateInject
  href: api/Singularity.Container.html#Singularity_Container_LateInject_
  commentId: Overload:Singularity.Container.LateInject
  isSpec: "True"
  fullName: Singularity.Container.LateInject
  nameWithType: Container.LateInject
- uid: Singularity.Container.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.Container.html#Singularity_Container_LateInjectAll_
  commentId: Overload:Singularity.Container.LateInjectAll
  isSpec: "True"
  fullName: Singularity.Container.LateInjectAll
  nameWithType: Container.LateInjectAll
- uid: Singularity.Container.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.Container.html#Singularity_Container_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.Container.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.Container.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.Container.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Container.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: Container.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.Container.System#IServiceProvider#GetService(System.Type)
  name: IServiceProvider.GetService(Type)
  href: api/Singularity.Container.html#Singularity_Container_System_IServiceProvider_GetService_System_Type_
  commentId: M:Singularity.Container.System#IServiceProvider#GetService(System.Type)
  name.vb: System.IServiceProvider.GetService(Type)
  fullName: Singularity.Container.System.IServiceProvider.GetService(System.Type)
  nameWithType: Container.IServiceProvider.GetService(Type)
  nameWithType.vb: Container.System.IServiceProvider.GetService(Type)
- uid: Singularity.Container.System#IServiceProvider#GetService*
  name: IServiceProvider.GetService
  href: api/Singularity.Container.html#Singularity_Container_System_IServiceProvider_GetService_
  commentId: Overload:Singularity.Container.System#IServiceProvider#GetService
  isSpec: "True"
  name.vb: System.IServiceProvider.GetService
  fullName: Singularity.Container.System.IServiceProvider.GetService
  nameWithType: Container.IServiceProvider.GetService
  nameWithType.vb: Container.System.IServiceProvider.GetService
- uid: Singularity.ContainerBuilder
  name: ContainerBuilder
  href: api/Singularity.ContainerBuilder.html
  commentId: T:Singularity.ContainerBuilder
  fullName: Singularity.ContainerBuilder
  nameWithType: ContainerBuilder
- uid: Singularity.ContainerBuilder.#ctor(System.Action{Singularity.ContainerBuilder},Singularity.SingularitySettings)
  name: ContainerBuilder(Action<ContainerBuilder>, SingularitySettings)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder__ctor_System_Action_Singularity_ContainerBuilder__Singularity_SingularitySettings_
  commentId: M:Singularity.ContainerBuilder.#ctor(System.Action{Singularity.ContainerBuilder},Singularity.SingularitySettings)
  name.vb: ContainerBuilder(Action(Of ContainerBuilder), SingularitySettings)
  fullName: Singularity.ContainerBuilder.ContainerBuilder(System.Action<Singularity.ContainerBuilder>, Singularity.SingularitySettings)
  fullName.vb: Singularity.ContainerBuilder.ContainerBuilder(System.Action(Of Singularity.ContainerBuilder), Singularity.SingularitySettings)
  nameWithType: ContainerBuilder.ContainerBuilder(Action<ContainerBuilder>, SingularitySettings)
  nameWithType.vb: ContainerBuilder.ContainerBuilder(Action(Of ContainerBuilder), SingularitySettings)
- uid: Singularity.ContainerBuilder.#ctor*
  name: ContainerBuilder
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder__ctor_
  commentId: Overload:Singularity.ContainerBuilder.#ctor
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.ContainerBuilder
  nameWithType: ContainerBuilder.ContainerBuilder
- uid: Singularity.ContainerBuilder.ConfigureSettings(Singularity.SingularitySettings)
  name: ConfigureSettings(SingularitySettings)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_ConfigureSettings_Singularity_SingularitySettings_
  commentId: M:Singularity.ContainerBuilder.ConfigureSettings(Singularity.SingularitySettings)
  fullName: Singularity.ContainerBuilder.ConfigureSettings(Singularity.SingularitySettings)
  nameWithType: ContainerBuilder.ConfigureSettings(SingularitySettings)
- uid: Singularity.ContainerBuilder.ConfigureSettings(System.Action{Singularity.SingularitySettings})
  name: ConfigureSettings(Action<SingularitySettings>)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_ConfigureSettings_System_Action_Singularity_SingularitySettings__
  commentId: M:Singularity.ContainerBuilder.ConfigureSettings(System.Action{Singularity.SingularitySettings})
  name.vb: ConfigureSettings(Action(Of SingularitySettings))
  fullName: Singularity.ContainerBuilder.ConfigureSettings(System.Action<Singularity.SingularitySettings>)
  fullName.vb: Singularity.ContainerBuilder.ConfigureSettings(System.Action(Of Singularity.SingularitySettings))
  nameWithType: ContainerBuilder.ConfigureSettings(Action<SingularitySettings>)
  nameWithType.vb: ContainerBuilder.ConfigureSettings(Action(Of SingularitySettings))
- uid: Singularity.ContainerBuilder.ConfigureSettings*
  name: ConfigureSettings
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_ConfigureSettings_
  commentId: Overload:Singularity.ContainerBuilder.ConfigureSettings
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.ConfigureSettings
  nameWithType: ContainerBuilder.ConfigureSettings
- uid: Singularity.ContainerBuilder.Decorate(System.Type,System.Type,System.Action{Singularity.WeaklyTypedDecoratorConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Decorate(Type, Type, Action<WeaklyTypedDecoratorConfigurator>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_System_Type_System_Type_System_Action_Singularity_WeaklyTypedDecoratorConfigurator__Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate(System.Type,System.Type,System.Action{Singularity.WeaklyTypedDecoratorConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Decorate(Type, Type, Action(Of WeaklyTypedDecoratorConfigurator), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate(System.Type, System.Type, System.Action<Singularity.WeaklyTypedDecoratorConfigurator>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(System.Type, System.Type, System.Action(Of Singularity.WeaklyTypedDecoratorConfigurator), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate(Type, Type, Action<WeaklyTypedDecoratorConfigurator>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Type, Type, Action(Of WeaklyTypedDecoratorConfigurator), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Decorate(System.Type,System.Type[],System.Action{Singularity.WeaklyTypedDecoratorConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Decorate(Type, Type[], Action<WeaklyTypedDecoratorConfigurator>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_System_Type_System_Type___System_Action_Singularity_WeaklyTypedDecoratorConfigurator__Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate(System.Type,System.Type[],System.Action{Singularity.WeaklyTypedDecoratorConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Decorate(Type, Type(), Action(Of WeaklyTypedDecoratorConfigurator), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate(System.Type, System.Type[], System.Action<Singularity.WeaklyTypedDecoratorConfigurator>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(System.Type, System.Type(), System.Action(Of Singularity.WeaklyTypedDecoratorConfigurator), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate(Type, Type[], Action<WeaklyTypedDecoratorConfigurator>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Type, Type(), Action(Of WeaklyTypedDecoratorConfigurator), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Decorate*
  name: Decorate
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate_
  commentId: Overload:Singularity.ContainerBuilder.Decorate
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.Decorate
  nameWithType: ContainerBuilder.Decorate
- uid: Singularity.ContainerBuilder.Decorate``2(System.Action{Singularity.StronglyTypedDecoratorConfigurator{``0,``1}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Decorate<TDependency, TDecorator>(Action<StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Decorate__2_System_Action_Singularity_StronglyTypedDecoratorConfigurator___0___1___Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Decorate``2(System.Action{Singularity.StronglyTypedDecoratorConfigurator{``0,``1}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Decorate(Of TDependency, TDecorator)(Action(Of StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Decorate<TDependency, TDecorator>(System.Action<Singularity.StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Decorate(Of TDependency, TDecorator)(System.Action(Of Singularity.StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Decorate<TDependency, TDecorator>(Action<StronglyTypedDecoratorConfigurator<TDependency, TDecorator>>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Decorate(Of TDependency, TDecorator)(Action(Of StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.LateInject(System.Type,System.Action{Singularity.WeaklyTypedLateInjectorConfigurator},System.String,System.Int32)
  name: LateInject(Type, Action<WeaklyTypedLateInjectorConfigurator>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject_System_Type_System_Action_Singularity_WeaklyTypedLateInjectorConfigurator__System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.LateInject(System.Type,System.Action{Singularity.WeaklyTypedLateInjectorConfigurator},System.String,System.Int32)
  name.vb: LateInject(Type, Action(Of WeaklyTypedLateInjectorConfigurator), String, Int32)
  fullName: Singularity.ContainerBuilder.LateInject(System.Type, System.Action<Singularity.WeaklyTypedLateInjectorConfigurator>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.LateInject(System.Type, System.Action(Of Singularity.WeaklyTypedLateInjectorConfigurator), System.String, System.Int32)
  nameWithType: ContainerBuilder.LateInject(Type, Action<WeaklyTypedLateInjectorConfigurator>, String, Int32)
  nameWithType.vb: ContainerBuilder.LateInject(Type, Action(Of WeaklyTypedLateInjectorConfigurator), String, Int32)
- uid: Singularity.ContainerBuilder.LateInject*
  name: LateInject
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject_
  commentId: Overload:Singularity.ContainerBuilder.LateInject
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.LateInject
  nameWithType: ContainerBuilder.LateInject
- uid: Singularity.ContainerBuilder.LateInject``1(System.Action{Singularity.StronglyTypedLateInjectorConfigurator{``0}},System.String,System.Int32)
  name: LateInject<TInstance>(Action<StronglyTypedLateInjectorConfigurator<TInstance>>, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_LateInject__1_System_Action_Singularity_StronglyTypedLateInjectorConfigurator___0___System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.LateInject``1(System.Action{Singularity.StronglyTypedLateInjectorConfigurator{``0}},System.String,System.Int32)
  name.vb: LateInject(Of TInstance)(Action(Of StronglyTypedLateInjectorConfigurator(Of TInstance)), String, Int32)
  fullName: Singularity.ContainerBuilder.LateInject<TInstance>(System.Action<Singularity.StronglyTypedLateInjectorConfigurator<TInstance>>, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.LateInject(Of TInstance)(System.Action(Of Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance)), System.String, System.Int32)
  nameWithType: ContainerBuilder.LateInject<TInstance>(Action<StronglyTypedLateInjectorConfigurator<TInstance>>, String, Int32)
  nameWithType.vb: ContainerBuilder.LateInject(Of TInstance)(Action(Of StronglyTypedLateInjectorConfigurator(Of TInstance)), String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Register(Type, Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Action_Singularity_WeaklyTypedServiceConfigurator__Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Register(Type, Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Action<Singularity.WeaklyTypedServiceConfigurator>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Action(Of Singularity.WeaklyTypedServiceConfigurator), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Type,System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Register(Type, Type, Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Type_System_Action_Singularity_WeaklyTypedServiceConfigurator__Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Type,System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Register(Type, Type, Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Type, System.Action<Singularity.WeaklyTypedServiceConfigurator>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Type, System.Action(Of Singularity.WeaklyTypedServiceConfigurator), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Type, Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Type, Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Register(System.Type,System.Type[],System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Register(Type, Type[], Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_System_Type_System_Type___System_Action_Singularity_WeaklyTypedServiceConfigurator__Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register(System.Type,System.Type[],System.Action{Singularity.WeaklyTypedServiceConfigurator},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Register(Type, Type(), Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Register(System.Type, System.Type[], System.Action<Singularity.WeaklyTypedServiceConfigurator>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(System.Type, System.Type(), System.Action(Of Singularity.WeaklyTypedServiceConfigurator), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Register(Type, Type[], Action<WeaklyTypedServiceConfigurator>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Type, Type(), Action(Of WeaklyTypedServiceConfigurator), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Register*
  name: Register
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register_
  commentId: Overload:Singularity.ContainerBuilder.Register
  isSpec: "True"
  fullName: Singularity.ContainerBuilder.Register
  nameWithType: ContainerBuilder.Register
- uid: Singularity.ContainerBuilder.Register``1(System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``0}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Register<TInstance>(Action<StronglyTypedServiceConfigurator<TInstance, TInstance>>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register__1_System_Action_Singularity_StronglyTypedServiceConfigurator___0___0___Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register``1(System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``0}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Register(Of TInstance)(Action(Of StronglyTypedServiceConfigurator(Of TInstance, TInstance)), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Register<TInstance>(System.Action<Singularity.StronglyTypedServiceConfigurator<TInstance, TInstance>>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(Of TInstance)(System.Action(Of Singularity.StronglyTypedServiceConfigurator(Of TInstance, TInstance)), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Register<TInstance>(Action<StronglyTypedServiceConfigurator<TInstance, TInstance>>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Of TInstance)(Action(Of StronglyTypedServiceConfigurator(Of TInstance, TInstance)), IConstructorResolver, String, Int32)
- uid: Singularity.ContainerBuilder.Register``2(System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``1}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name: Register<TDependency, TInstance>(Action<StronglyTypedServiceConfigurator<TDependency, TInstance>>, IConstructorResolver, String, Int32)
  href: api/Singularity.ContainerBuilder.html#Singularity_ContainerBuilder_Register__2_System_Action_Singularity_StronglyTypedServiceConfigurator___0___1___Singularity_Expressions_IConstructorResolver_System_String_System_Int32_
  commentId: M:Singularity.ContainerBuilder.Register``2(System.Action{Singularity.StronglyTypedServiceConfigurator{``0,``1}},Singularity.Expressions.IConstructorResolver,System.String,System.Int32)
  name.vb: Register(Of TDependency, TInstance)(Action(Of StronglyTypedServiceConfigurator(Of TDependency, TInstance)), IConstructorResolver, String, Int32)
  fullName: Singularity.ContainerBuilder.Register<TDependency, TInstance>(System.Action<Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>>, Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  fullName.vb: Singularity.ContainerBuilder.Register(Of TDependency, TInstance)(System.Action(Of Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance)), Singularity.Expressions.IConstructorResolver, System.String, System.Int32)
  nameWithType: ContainerBuilder.Register<TDependency, TInstance>(Action<StronglyTypedServiceConfigurator<TDependency, TInstance>>, IConstructorResolver, String, Int32)
  nameWithType.vb: ContainerBuilder.Register(Of TDependency, TInstance)(Action(Of StronglyTypedServiceConfigurator(Of TDependency, TInstance)), IConstructorResolver, String, Int32)
- uid: Singularity.DefaultConstructorResolver
  name: DefaultConstructorResolver
  href: api/Singularity.DefaultConstructorResolver.html
  commentId: T:Singularity.DefaultConstructorResolver
  fullName: Singularity.DefaultConstructorResolver
  nameWithType: DefaultConstructorResolver
- uid: Singularity.DefaultConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  name: DynamicSelectConstructor(Type, IInstanceFactoryResolver)
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_DynamicSelectConstructor_System_Type_Singularity_Resolving_IInstanceFactoryResolver_
  commentId: M:Singularity.DefaultConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  fullName: Singularity.DefaultConstructorResolver.DynamicSelectConstructor(System.Type, Singularity.Resolving.IInstanceFactoryResolver)
  nameWithType: DefaultConstructorResolver.DynamicSelectConstructor(Type, IInstanceFactoryResolver)
- uid: Singularity.DefaultConstructorResolver.DynamicSelectConstructor*
  name: DynamicSelectConstructor
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_DynamicSelectConstructor_
  commentId: Overload:Singularity.DefaultConstructorResolver.DynamicSelectConstructor
  isSpec: "True"
  fullName: Singularity.DefaultConstructorResolver.DynamicSelectConstructor
  nameWithType: DefaultConstructorResolver.DynamicSelectConstructor
- uid: Singularity.DefaultConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  name: ResolveConstructorExpression(Type, ConstructorInfo)
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_ResolveConstructorExpression_System_Type_System_Reflection_ConstructorInfo_
  commentId: M:Singularity.DefaultConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  fullName: Singularity.DefaultConstructorResolver.ResolveConstructorExpression(System.Type, System.Reflection.ConstructorInfo)
  nameWithType: DefaultConstructorResolver.ResolveConstructorExpression(Type, ConstructorInfo)
- uid: Singularity.DefaultConstructorResolver.ResolveConstructorExpression*
  name: ResolveConstructorExpression
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_ResolveConstructorExpression_
  commentId: Overload:Singularity.DefaultConstructorResolver.ResolveConstructorExpression
  isSpec: "True"
  fullName: Singularity.DefaultConstructorResolver.ResolveConstructorExpression
  nameWithType: DefaultConstructorResolver.ResolveConstructorExpression
- uid: Singularity.DefaultConstructorResolver.StaticSelectConstructor(System.Type)
  name: StaticSelectConstructor(Type)
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_StaticSelectConstructor_System_Type_
  commentId: M:Singularity.DefaultConstructorResolver.StaticSelectConstructor(System.Type)
  fullName: Singularity.DefaultConstructorResolver.StaticSelectConstructor(System.Type)
  nameWithType: DefaultConstructorResolver.StaticSelectConstructor(Type)
- uid: Singularity.DefaultConstructorResolver.StaticSelectConstructor*
  name: StaticSelectConstructor
  href: api/Singularity.DefaultConstructorResolver.html#Singularity_DefaultConstructorResolver_StaticSelectConstructor_
  commentId: Overload:Singularity.DefaultConstructorResolver.StaticSelectConstructor
  isSpec: "True"
  fullName: Singularity.DefaultConstructorResolver.StaticSelectConstructor
  nameWithType: DefaultConstructorResolver.StaticSelectConstructor
- uid: Singularity.Duality
  name: Singularity.Duality
  href: api/Singularity.Duality.html
  commentId: N:Singularity.Duality
  fullName: Singularity.Duality
  nameWithType: Singularity.Duality
- uid: Singularity.Duality.Resources
  name: Singularity.Duality.Resources
  href: api/Singularity.Duality.Resources.html
  commentId: N:Singularity.Duality.Resources
  fullName: Singularity.Duality.Resources
  nameWithType: Singularity.Duality.Resources
- uid: Singularity.Duality.Resources.ModuleRef
  name: ModuleRef
  href: api/Singularity.Duality.Resources.ModuleRef.html
  commentId: T:Singularity.Duality.Resources.ModuleRef
  fullName: Singularity.Duality.Resources.ModuleRef
  nameWithType: ModuleRef
- uid: Singularity.Duality.Resources.ModuleRef.#ctor
  name: ModuleRef()
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef__ctor
  commentId: M:Singularity.Duality.Resources.ModuleRef.#ctor
  fullName: Singularity.Duality.Resources.ModuleRef.ModuleRef()
  nameWithType: ModuleRef.ModuleRef()
- uid: Singularity.Duality.Resources.ModuleRef.#ctor*
  name: ModuleRef
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef__ctor_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.#ctor
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.ModuleRef
  nameWithType: ModuleRef.ModuleRef
- uid: Singularity.Duality.Resources.ModuleRef.Assembly
  name: Assembly
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Assembly
  commentId: P:Singularity.Duality.Resources.ModuleRef.Assembly
  fullName: Singularity.Duality.Resources.ModuleRef.Assembly
  nameWithType: ModuleRef.Assembly
- uid: Singularity.Duality.Resources.ModuleRef.Assembly*
  name: Assembly
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Assembly_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Assembly
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Assembly
  nameWithType: ModuleRef.Assembly
- uid: Singularity.Duality.Resources.ModuleRef.Name
  name: Name
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Name
  commentId: P:Singularity.Duality.Resources.ModuleRef.Name
  fullName: Singularity.Duality.Resources.ModuleRef.Name
  nameWithType: ModuleRef.Name
- uid: Singularity.Duality.Resources.ModuleRef.Name*
  name: Name
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Name_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Name
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Name
  nameWithType: ModuleRef.Name
- uid: Singularity.Duality.Resources.ModuleRef.NameSpace
  name: NameSpace
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_NameSpace
  commentId: P:Singularity.Duality.Resources.ModuleRef.NameSpace
  fullName: Singularity.Duality.Resources.ModuleRef.NameSpace
  nameWithType: ModuleRef.NameSpace
- uid: Singularity.Duality.Resources.ModuleRef.NameSpace*
  name: NameSpace
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_NameSpace_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.NameSpace
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.NameSpace
  nameWithType: ModuleRef.NameSpace
- uid: Singularity.Duality.Resources.ModuleRef.ToString
  name: ToString()
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_ToString
  commentId: M:Singularity.Duality.Resources.ModuleRef.ToString
  fullName: Singularity.Duality.Resources.ModuleRef.ToString()
  nameWithType: ModuleRef.ToString()
- uid: Singularity.Duality.Resources.ModuleRef.ToString*
  name: ToString
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_ToString_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.ToString
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.ToString
  nameWithType: ModuleRef.ToString
- uid: Singularity.Duality.Resources.ModuleRef.Type
  name: Type
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Type
  commentId: P:Singularity.Duality.Resources.ModuleRef.Type
  fullName: Singularity.Duality.Resources.ModuleRef.Type
  nameWithType: ModuleRef.Type
- uid: Singularity.Duality.Resources.ModuleRef.Type*
  name: Type
  href: api/Singularity.Duality.Resources.ModuleRef.html#Singularity_Duality_Resources_ModuleRef_Type_
  commentId: Overload:Singularity.Duality.Resources.ModuleRef.Type
  isSpec: "True"
  fullName: Singularity.Duality.Resources.ModuleRef.Type
  nameWithType: ModuleRef.Type
- uid: Singularity.Duality.Resources.SingularityModules
  name: SingularityModules
  href: api/Singularity.Duality.Resources.SingularityModules.html
  commentId: T:Singularity.Duality.Resources.SingularityModules
  fullName: Singularity.Duality.Resources.SingularityModules
  nameWithType: SingularityModules
- uid: Singularity.Duality.Resources.SingularityModules.Modules
  name: Modules
  href: api/Singularity.Duality.Resources.SingularityModules.html#Singularity_Duality_Resources_SingularityModules_Modules
  commentId: P:Singularity.Duality.Resources.SingularityModules.Modules
  fullName: Singularity.Duality.Resources.SingularityModules.Modules
  nameWithType: SingularityModules.Modules
- uid: Singularity.Duality.Resources.SingularityModules.Modules*
  name: Modules
  href: api/Singularity.Duality.Resources.SingularityModules.html#Singularity_Duality_Resources_SingularityModules_Modules_
  commentId: Overload:Singularity.Duality.Resources.SingularityModules.Modules
  isSpec: "True"
  fullName: Singularity.Duality.Resources.SingularityModules.Modules
  nameWithType: SingularityModules.Modules
- uid: Singularity.Duality.SingularityPlugin
  name: SingularityPlugin
  href: api/Singularity.Duality.SingularityPlugin.html
  commentId: T:Singularity.Duality.SingularityPlugin
  fullName: Singularity.Duality.SingularityPlugin
  nameWithType: SingularityPlugin
- uid: Singularity.Duality.SingularityPlugin.OnGameEnded
  name: OnGameEnded()
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameEnded
  commentId: M:Singularity.Duality.SingularityPlugin.OnGameEnded
  fullName: Singularity.Duality.SingularityPlugin.OnGameEnded()
  nameWithType: SingularityPlugin.OnGameEnded()
- uid: Singularity.Duality.SingularityPlugin.OnGameEnded*
  name: OnGameEnded
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameEnded_
  commentId: Overload:Singularity.Duality.SingularityPlugin.OnGameEnded
  isSpec: "True"
  fullName: Singularity.Duality.SingularityPlugin.OnGameEnded
  nameWithType: SingularityPlugin.OnGameEnded
- uid: Singularity.Duality.SingularityPlugin.OnGameStarting
  name: OnGameStarting()
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameStarting
  commentId: M:Singularity.Duality.SingularityPlugin.OnGameStarting
  fullName: Singularity.Duality.SingularityPlugin.OnGameStarting()
  nameWithType: SingularityPlugin.OnGameStarting()
- uid: Singularity.Duality.SingularityPlugin.OnGameStarting*
  name: OnGameStarting
  href: api/Singularity.Duality.SingularityPlugin.html#Singularity_Duality_SingularityPlugin_OnGameStarting_
  commentId: Overload:Singularity.Duality.SingularityPlugin.OnGameStarting
  isSpec: "True"
  fullName: Singularity.Duality.SingularityPlugin.OnGameStarting
  nameWithType: SingularityPlugin.OnGameStarting
- uid: Singularity.Exceptions
  name: Singularity.Exceptions
  href: api/Singularity.Exceptions.html
  commentId: N:Singularity.Exceptions
  fullName: Singularity.Exceptions
  nameWithType: Singularity.Exceptions
- uid: Singularity.Exceptions.BindingConfigException
  name: BindingConfigException
  href: api/Singularity.Exceptions.BindingConfigException.html
  commentId: T:Singularity.Exceptions.BindingConfigException
  fullName: Singularity.Exceptions.BindingConfigException
  nameWithType: BindingConfigException
- uid: Singularity.Exceptions.CannotAutoResolveConstructorException
  name: CannotAutoResolveConstructorException
  href: api/Singularity.Exceptions.CannotAutoResolveConstructorException.html
  commentId: T:Singularity.Exceptions.CannotAutoResolveConstructorException
  fullName: Singularity.Exceptions.CannotAutoResolveConstructorException
  nameWithType: CannotAutoResolveConstructorException
- uid: Singularity.Exceptions.CircularDependencyException
  name: CircularDependencyException
  href: api/Singularity.Exceptions.CircularDependencyException.html
  commentId: T:Singularity.Exceptions.CircularDependencyException
  fullName: Singularity.Exceptions.CircularDependencyException
  nameWithType: CircularDependencyException
- uid: Singularity.Exceptions.CircularDependencyException.Cycle
  name: Cycle
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_Cycle
  commentId: P:Singularity.Exceptions.CircularDependencyException.Cycle
  fullName: Singularity.Exceptions.CircularDependencyException.Cycle
  nameWithType: CircularDependencyException.Cycle
- uid: Singularity.Exceptions.CircularDependencyException.Cycle*
  name: Cycle
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_Cycle_
  commentId: Overload:Singularity.Exceptions.CircularDependencyException.Cycle
  isSpec: "True"
  fullName: Singularity.Exceptions.CircularDependencyException.Cycle
  nameWithType: CircularDependencyException.Cycle
- uid: Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.CircularDependencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: CircularDependencyException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.CircularDependencyException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.CircularDependencyException.html#Singularity_Exceptions_CircularDependencyException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.CircularDependencyException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.CircularDependencyException.GetObjectData
  nameWithType: CircularDependencyException.GetObjectData
- uid: Singularity.Exceptions.DependencyNotFoundException
  name: DependencyNotFoundException
  href: api/Singularity.Exceptions.DependencyNotFoundException.html
  commentId: T:Singularity.Exceptions.DependencyNotFoundException
  fullName: Singularity.Exceptions.DependencyNotFoundException
  nameWithType: DependencyNotFoundException
- uid: Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.DependencyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: DependencyNotFoundException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.DependencyNotFoundException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.DependencyNotFoundException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.DependencyNotFoundException.GetObjectData
  nameWithType: DependencyNotFoundException.GetObjectData
- uid: Singularity.Exceptions.DependencyNotFoundException.Type
  name: Type
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_Type
  commentId: P:Singularity.Exceptions.DependencyNotFoundException.Type
  fullName: Singularity.Exceptions.DependencyNotFoundException.Type
  nameWithType: DependencyNotFoundException.Type
- uid: Singularity.Exceptions.DependencyNotFoundException.Type*
  name: Type
  href: api/Singularity.Exceptions.DependencyNotFoundException.html#Singularity_Exceptions_DependencyNotFoundException_Type_
  commentId: Overload:Singularity.Exceptions.DependencyNotFoundException.Type
  isSpec: "True"
  fullName: Singularity.Exceptions.DependencyNotFoundException.Type
  nameWithType: DependencyNotFoundException.Type
- uid: Singularity.Exceptions.DependencyResolveException
  name: DependencyResolveException
  href: api/Singularity.Exceptions.DependencyResolveException.html
  commentId: T:Singularity.Exceptions.DependencyResolveException
  fullName: Singularity.Exceptions.DependencyResolveException
  nameWithType: DependencyResolveException
- uid: Singularity.Exceptions.DependencyResolveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: DependencyResolveException(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.DependencyResolveException.html#Singularity_Exceptions_DependencyResolveException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.DependencyResolveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.DependencyResolveException.DependencyResolveException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: DependencyResolveException.DependencyResolveException(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.DependencyResolveException.#ctor(System.Type,Singularity.ServiceBinding,System.Exception)
  name: DependencyResolveException(Type, ServiceBinding, Exception)
  href: api/Singularity.Exceptions.DependencyResolveException.html#Singularity_Exceptions_DependencyResolveException__ctor_System_Type_Singularity_ServiceBinding_System_Exception_
  commentId: M:Singularity.Exceptions.DependencyResolveException.#ctor(System.Type,Singularity.ServiceBinding,System.Exception)
  fullName: Singularity.Exceptions.DependencyResolveException.DependencyResolveException(System.Type, Singularity.ServiceBinding, System.Exception)
  nameWithType: DependencyResolveException.DependencyResolveException(Type, ServiceBinding, Exception)
- uid: Singularity.Exceptions.DependencyResolveException.#ctor*
  name: DependencyResolveException
  href: api/Singularity.Exceptions.DependencyResolveException.html#Singularity_Exceptions_DependencyResolveException__ctor_
  commentId: Overload:Singularity.Exceptions.DependencyResolveException.#ctor
  isSpec: "True"
  fullName: Singularity.Exceptions.DependencyResolveException.DependencyResolveException
  nameWithType: DependencyResolveException.DependencyResolveException
- uid: Singularity.Exceptions.EnumerableRegistrationException
  name: EnumerableRegistrationException
  href: api/Singularity.Exceptions.EnumerableRegistrationException.html
  commentId: T:Singularity.Exceptions.EnumerableRegistrationException
  fullName: Singularity.Exceptions.EnumerableRegistrationException
  nameWithType: EnumerableRegistrationException
- uid: Singularity.Exceptions.InterfaceExpectedException
  name: InterfaceExpectedException
  href: api/Singularity.Exceptions.InterfaceExpectedException.html
  commentId: T:Singularity.Exceptions.InterfaceExpectedException
  fullName: Singularity.Exceptions.InterfaceExpectedException
  nameWithType: InterfaceExpectedException
- uid: Singularity.Exceptions.InvalidEnumValueException`1
  name: InvalidEnumValueException<T>
  href: api/Singularity.Exceptions.InvalidEnumValueException-1.html
  commentId: T:Singularity.Exceptions.InvalidEnumValueException`1
  name.vb: InvalidEnumValueException(Of T)
  fullName: Singularity.Exceptions.InvalidEnumValueException<T>
  fullName.vb: Singularity.Exceptions.InvalidEnumValueException(Of T)
  nameWithType: InvalidEnumValueException<T>
  nameWithType.vb: InvalidEnumValueException(Of T)
- uid: Singularity.Exceptions.InvalidExpressionArgumentsException
  name: InvalidExpressionArgumentsException
  href: api/Singularity.Exceptions.InvalidExpressionArgumentsException.html
  commentId: T:Singularity.Exceptions.InvalidExpressionArgumentsException
  fullName: Singularity.Exceptions.InvalidExpressionArgumentsException
  nameWithType: InvalidExpressionArgumentsException
- uid: Singularity.Exceptions.NoConstructorException
  name: NoConstructorException
  href: api/Singularity.Exceptions.NoConstructorException.html
  commentId: T:Singularity.Exceptions.NoConstructorException
  fullName: Singularity.Exceptions.NoConstructorException
  nameWithType: NoConstructorException
- uid: Singularity.Exceptions.OpenGenericTypeResolveException
  name: OpenGenericTypeResolveException
  href: api/Singularity.Exceptions.OpenGenericTypeResolveException.html
  commentId: T:Singularity.Exceptions.OpenGenericTypeResolveException
  fullName: Singularity.Exceptions.OpenGenericTypeResolveException
  nameWithType: OpenGenericTypeResolveException
- uid: Singularity.Exceptions.RegistrationAlreadyExistsException
  name: RegistrationAlreadyExistsException
  href: api/Singularity.Exceptions.RegistrationAlreadyExistsException.html
  commentId: T:Singularity.Exceptions.RegistrationAlreadyExistsException
  fullName: Singularity.Exceptions.RegistrationAlreadyExistsException
  nameWithType: RegistrationAlreadyExistsException
- uid: Singularity.Exceptions.SingularityAggregateException
  name: SingularityAggregateException
  href: api/Singularity.Exceptions.SingularityAggregateException.html
  commentId: T:Singularity.Exceptions.SingularityAggregateException
  fullName: Singularity.Exceptions.SingularityAggregateException
  nameWithType: SingularityAggregateException
- uid: Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.SingularityAggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: SingularityAggregateException.GetObjectData(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.SingularityAggregateException.GetObjectData*
  name: GetObjectData
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_GetObjectData_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.GetObjectData
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.GetObjectData
  nameWithType: SingularityAggregateException.GetObjectData
- uid: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  name: HeaderMessage
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_HeaderMessage
  commentId: P:Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  fullName: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  nameWithType: SingularityAggregateException.HeaderMessage
- uid: Singularity.Exceptions.SingularityAggregateException.HeaderMessage*
  name: HeaderMessage
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_HeaderMessage_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.HeaderMessage
  nameWithType: SingularityAggregateException.HeaderMessage
- uid: Singularity.Exceptions.SingularityAggregateException.Message
  name: Message
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_Message
  commentId: P:Singularity.Exceptions.SingularityAggregateException.Message
  fullName: Singularity.Exceptions.SingularityAggregateException.Message
  nameWithType: SingularityAggregateException.Message
- uid: Singularity.Exceptions.SingularityAggregateException.Message*
  name: Message
  href: api/Singularity.Exceptions.SingularityAggregateException.html#Singularity_Exceptions_SingularityAggregateException_Message_
  commentId: Overload:Singularity.Exceptions.SingularityAggregateException.Message
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityAggregateException.Message
  nameWithType: SingularityAggregateException.Message
- uid: Singularity.Exceptions.SingularityException
  name: SingularityException
  href: api/Singularity.Exceptions.SingularityException.html
  commentId: T:Singularity.Exceptions.SingularityException
  fullName: Singularity.Exceptions.SingularityException
  nameWithType: SingularityException
- uid: Singularity.Exceptions.SingularityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: SingularityException(SerializationInfo, StreamingContext)
  href: api/Singularity.Exceptions.SingularityException.html#Singularity_Exceptions_SingularityException__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_
  commentId: M:Singularity.Exceptions.SingularityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  fullName: Singularity.Exceptions.SingularityException.SingularityException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType: SingularityException.SingularityException(SerializationInfo, StreamingContext)
- uid: Singularity.Exceptions.SingularityException.#ctor*
  name: SingularityException
  href: api/Singularity.Exceptions.SingularityException.html#Singularity_Exceptions_SingularityException__ctor_
  commentId: Overload:Singularity.Exceptions.SingularityException.#ctor
  isSpec: "True"
  fullName: Singularity.Exceptions.SingularityException.SingularityException
  nameWithType: SingularityException.SingularityException
- uid: Singularity.Exceptions.TypeNotAssignableException
  name: TypeNotAssignableException
  href: api/Singularity.Exceptions.TypeNotAssignableException.html
  commentId: T:Singularity.Exceptions.TypeNotAssignableException
  fullName: Singularity.Exceptions.TypeNotAssignableException
  nameWithType: TypeNotAssignableException
- uid: Singularity.Expressions
  name: Singularity.Expressions
  href: api/Singularity.Expressions.html
  commentId: N:Singularity.Expressions
  fullName: Singularity.Expressions
  nameWithType: Singularity.Expressions
- uid: Singularity.Expressions.ExpressionContext
  name: ExpressionContext
  href: api/Singularity.Expressions.ExpressionContext.html
  commentId: T:Singularity.Expressions.ExpressionContext
  fullName: Singularity.Expressions.ExpressionContext
  nameWithType: ExpressionContext
- uid: Singularity.Expressions.ExpressionContext.Expression
  name: Expression
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_Expression
  commentId: P:Singularity.Expressions.ExpressionContext.Expression
  fullName: Singularity.Expressions.ExpressionContext.Expression
  nameWithType: ExpressionContext.Expression
- uid: Singularity.Expressions.ExpressionContext.Expression*
  name: Expression
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_Expression_
  commentId: Overload:Singularity.Expressions.ExpressionContext.Expression
  isSpec: "True"
  fullName: Singularity.Expressions.ExpressionContext.Expression
  nameWithType: ExpressionContext.Expression
- uid: Singularity.Expressions.ExpressionContext.op_Implicit(Singularity.Expressions.ExpressionContext)~Singularity.Expressions.ReadOnlyExpressionContext
  name: Implicit(ExpressionContext to ReadOnlyExpressionContext)
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_op_Implicit_Singularity_Expressions_ExpressionContext__Singularity_Expressions_ReadOnlyExpressionContext
  commentId: M:Singularity.Expressions.ExpressionContext.op_Implicit(Singularity.Expressions.ExpressionContext)~Singularity.Expressions.ReadOnlyExpressionContext
  name.vb: Widening(ExpressionContext to ReadOnlyExpressionContext)
  fullName: Singularity.Expressions.ExpressionContext.Implicit(Singularity.Expressions.ExpressionContext to Singularity.Expressions.ReadOnlyExpressionContext)
  fullName.vb: Singularity.Expressions.ExpressionContext.Widening(Singularity.Expressions.ExpressionContext to Singularity.Expressions.ReadOnlyExpressionContext)
  nameWithType: ExpressionContext.Implicit(ExpressionContext to ReadOnlyExpressionContext)
  nameWithType.vb: ExpressionContext.Widening(ExpressionContext to ReadOnlyExpressionContext)
- uid: Singularity.Expressions.ExpressionContext.op_Implicit*
  name: Implicit
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_op_Implicit_
  commentId: Overload:Singularity.Expressions.ExpressionContext.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Singularity.Expressions.ExpressionContext.Implicit
  fullName.vb: Singularity.Expressions.ExpressionContext.Widening
  nameWithType: ExpressionContext.Implicit
  nameWithType.vb: ExpressionContext.Widening
- uid: Singularity.Expressions.ExpressionContext.ScopedExpressions
  name: ScopedExpressions
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_ScopedExpressions
  commentId: P:Singularity.Expressions.ExpressionContext.ScopedExpressions
  fullName: Singularity.Expressions.ExpressionContext.ScopedExpressions
  nameWithType: ExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.ExpressionContext.ScopedExpressions*
  name: ScopedExpressions
  href: api/Singularity.Expressions.ExpressionContext.html#Singularity_Expressions_ExpressionContext_ScopedExpressions_
  commentId: Overload:Singularity.Expressions.ExpressionContext.ScopedExpressions
  isSpec: "True"
  fullName: Singularity.Expressions.ExpressionContext.ScopedExpressions
  nameWithType: ExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.IConstructorResolver
  name: IConstructorResolver
  href: api/Singularity.Expressions.IConstructorResolver.html
  commentId: T:Singularity.Expressions.IConstructorResolver
  fullName: Singularity.Expressions.IConstructorResolver
  nameWithType: IConstructorResolver
- uid: Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  name: DynamicSelectConstructor(Type, IInstanceFactoryResolver)
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_DynamicSelectConstructor_System_Type_Singularity_Resolving_IInstanceFactoryResolver_
  commentId: M:Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor(System.Type,Singularity.Resolving.IInstanceFactoryResolver)
  fullName: Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor(System.Type, Singularity.Resolving.IInstanceFactoryResolver)
  nameWithType: IConstructorResolver.DynamicSelectConstructor(Type, IInstanceFactoryResolver)
- uid: Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor*
  name: DynamicSelectConstructor
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_DynamicSelectConstructor_
  commentId: Overload:Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor
  isSpec: "True"
  fullName: Singularity.Expressions.IConstructorResolver.DynamicSelectConstructor
  nameWithType: IConstructorResolver.DynamicSelectConstructor
- uid: Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  name: ResolveConstructorExpression(Type, ConstructorInfo)
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_ResolveConstructorExpression_System_Type_System_Reflection_ConstructorInfo_
  commentId: M:Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression(System.Type,System.Reflection.ConstructorInfo)
  fullName: Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression(System.Type, System.Reflection.ConstructorInfo)
  nameWithType: IConstructorResolver.ResolveConstructorExpression(Type, ConstructorInfo)
- uid: Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression*
  name: ResolveConstructorExpression
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_ResolveConstructorExpression_
  commentId: Overload:Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression
  isSpec: "True"
  fullName: Singularity.Expressions.IConstructorResolver.ResolveConstructorExpression
  nameWithType: IConstructorResolver.ResolveConstructorExpression
- uid: Singularity.Expressions.IConstructorResolver.StaticSelectConstructor(System.Type)
  name: StaticSelectConstructor(Type)
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_StaticSelectConstructor_System_Type_
  commentId: M:Singularity.Expressions.IConstructorResolver.StaticSelectConstructor(System.Type)
  fullName: Singularity.Expressions.IConstructorResolver.StaticSelectConstructor(System.Type)
  nameWithType: IConstructorResolver.StaticSelectConstructor(Type)
- uid: Singularity.Expressions.IConstructorResolver.StaticSelectConstructor*
  name: StaticSelectConstructor
  href: api/Singularity.Expressions.IConstructorResolver.html#Singularity_Expressions_IConstructorResolver_StaticSelectConstructor_
  commentId: Overload:Singularity.Expressions.IConstructorResolver.StaticSelectConstructor
  isSpec: "True"
  fullName: Singularity.Expressions.IConstructorResolver.StaticSelectConstructor
  nameWithType: IConstructorResolver.StaticSelectConstructor
- uid: Singularity.Expressions.ReadOnlyExpressionContext
  name: ReadOnlyExpressionContext
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html
  commentId: T:Singularity.Expressions.ReadOnlyExpressionContext
  fullName: Singularity.Expressions.ReadOnlyExpressionContext
  nameWithType: ReadOnlyExpressionContext
- uid: Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit(Singularity.Expressions.ReadOnlyExpressionContext)~Singularity.Expressions.ExpressionContext
  name: Explicit(ReadOnlyExpressionContext to ExpressionContext)
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_op_Explicit_Singularity_Expressions_ReadOnlyExpressionContext__Singularity_Expressions_ExpressionContext
  commentId: M:Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit(Singularity.Expressions.ReadOnlyExpressionContext)~Singularity.Expressions.ExpressionContext
  name.vb: Narrowing(ReadOnlyExpressionContext to ExpressionContext)
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.Explicit(Singularity.Expressions.ReadOnlyExpressionContext to Singularity.Expressions.ExpressionContext)
  fullName.vb: Singularity.Expressions.ReadOnlyExpressionContext.Narrowing(Singularity.Expressions.ReadOnlyExpressionContext to Singularity.Expressions.ExpressionContext)
  nameWithType: ReadOnlyExpressionContext.Explicit(ReadOnlyExpressionContext to ExpressionContext)
  nameWithType.vb: ReadOnlyExpressionContext.Narrowing(ReadOnlyExpressionContext to ExpressionContext)
- uid: Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit*
  name: Explicit
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_op_Explicit_
  commentId: Overload:Singularity.Expressions.ReadOnlyExpressionContext.op_Explicit
  isSpec: "True"
  name.vb: Narrowing
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.Explicit
  fullName.vb: Singularity.Expressions.ReadOnlyExpressionContext.Narrowing
  nameWithType: ReadOnlyExpressionContext.Explicit
  nameWithType.vb: ReadOnlyExpressionContext.Narrowing
- uid: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  name: ScopedExpressions
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_ScopedExpressions
  commentId: P:Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  nameWithType: ReadOnlyExpressionContext.ScopedExpressions
- uid: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions*
  name: ScopedExpressions
  href: api/Singularity.Expressions.ReadOnlyExpressionContext.html#Singularity_Expressions_ReadOnlyExpressionContext_ScopedExpressions_
  commentId: Overload:Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  isSpec: "True"
  fullName: Singularity.Expressions.ReadOnlyExpressionContext.ScopedExpressions
  nameWithType: ReadOnlyExpressionContext.ScopedExpressions
- uid: Singularity.IContainer
  name: IContainer
  href: api/Singularity.IContainer.html
  commentId: T:Singularity.IContainer
  fullName: Singularity.IContainer
  nameWithType: IContainer
- uid: Singularity.IContainer.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance_System_Type_
  commentId: M:Singularity.IContainer.GetInstance(System.Type)
  fullName: Singularity.IContainer.GetInstance(System.Type)
  nameWithType: IContainer.GetInstance(Type)
- uid: Singularity.IContainer.GetInstance*
  name: GetInstance
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance_
  commentId: Overload:Singularity.IContainer.GetInstance
  isSpec: "True"
  fullName: Singularity.IContainer.GetInstance
  nameWithType: IContainer.GetInstance
- uid: Singularity.IContainer.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstance__1
  commentId: M:Singularity.IContainer.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.IContainer.GetInstance<T>()
  fullName.vb: Singularity.IContainer.GetInstance(Of T)()
  nameWithType: IContainer.GetInstance<T>()
  nameWithType.vb: IContainer.GetInstance(Of T)()
- uid: Singularity.IContainer.GetInstanceOrDefault(System.Type)
  name: GetInstanceOrDefault(Type)
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstanceOrDefault_System_Type_
  commentId: M:Singularity.IContainer.GetInstanceOrDefault(System.Type)
  fullName: Singularity.IContainer.GetInstanceOrDefault(System.Type)
  nameWithType: IContainer.GetInstanceOrDefault(Type)
- uid: Singularity.IContainer.GetInstanceOrDefault*
  name: GetInstanceOrDefault
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstanceOrDefault_
  commentId: Overload:Singularity.IContainer.GetInstanceOrDefault
  isSpec: "True"
  fullName: Singularity.IContainer.GetInstanceOrDefault
  nameWithType: IContainer.GetInstanceOrDefault
- uid: Singularity.IContainer.GetInstanceOrDefault``1
  name: GetInstanceOrDefault<T>()
  href: api/Singularity.IContainer.html#Singularity_IContainer_GetInstanceOrDefault__1
  commentId: M:Singularity.IContainer.GetInstanceOrDefault``1
  name.vb: GetInstanceOrDefault(Of T)()
  fullName: Singularity.IContainer.GetInstanceOrDefault<T>()
  fullName.vb: Singularity.IContainer.GetInstanceOrDefault(Of T)()
  nameWithType: IContainer.GetInstanceOrDefault<T>()
  nameWithType.vb: IContainer.GetInstanceOrDefault(Of T)()
- uid: Singularity.IContainer.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInject_System_Object_
  commentId: M:Singularity.IContainer.LateInject(System.Object)
  fullName: Singularity.IContainer.LateInject(System.Object)
  nameWithType: IContainer.LateInject(Object)
- uid: Singularity.IContainer.LateInject*
  name: LateInject
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInject_
  commentId: Overload:Singularity.IContainer.LateInject
  isSpec: "True"
  fullName: Singularity.IContainer.LateInject
  nameWithType: IContainer.LateInject
- uid: Singularity.IContainer.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInjectAll_
  commentId: Overload:Singularity.IContainer.LateInjectAll
  isSpec: "True"
  fullName: Singularity.IContainer.LateInjectAll
  nameWithType: IContainer.LateInjectAll
- uid: Singularity.IContainer.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.IContainer.html#Singularity_IContainer_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.IContainer.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.IContainer.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.IContainer.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: IContainer.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: IContainer.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.ILifetime
  name: ILifetime
  href: api/Singularity.ILifetime.html
  commentId: T:Singularity.ILifetime
  fullName: Singularity.ILifetime
  nameWithType: ILifetime
- uid: Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.ILifetime.html#Singularity_ILifetime_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.ILifetime.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: ILifetime.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.ILifetime.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.ILifetime.html#Singularity_ILifetime_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.ILifetime.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.ILifetime.ApplyLifetimeOnExpression
  nameWithType: ILifetime.ApplyLifetimeOnExpression
- uid: Singularity.IModule
  name: IModule
  href: api/Singularity.IModule.html
  commentId: T:Singularity.IModule
  fullName: Singularity.IModule
  nameWithType: IModule
- uid: Singularity.IModule.Register(Singularity.ContainerBuilder)
  name: Register(ContainerBuilder)
  href: api/Singularity.IModule.html#Singularity_IModule_Register_Singularity_ContainerBuilder_
  commentId: M:Singularity.IModule.Register(Singularity.ContainerBuilder)
  fullName: Singularity.IModule.Register(Singularity.ContainerBuilder)
  nameWithType: IModule.Register(ContainerBuilder)
- uid: Singularity.IModule.Register*
  name: Register
  href: api/Singularity.IModule.html#Singularity_IModule_Register_
  commentId: Overload:Singularity.IModule.Register
  isSpec: "True"
  fullName: Singularity.IModule.Register
  nameWithType: IModule.Register
- uid: Singularity.ITypeMatcher
  name: ITypeMatcher
  href: api/Singularity.ITypeMatcher.html
  commentId: T:Singularity.ITypeMatcher
  fullName: Singularity.ITypeMatcher
  nameWithType: ITypeMatcher
- uid: Singularity.ITypeMatcher.Match(System.Type)
  name: Match(Type)
  href: api/Singularity.ITypeMatcher.html#Singularity_ITypeMatcher_Match_System_Type_
  commentId: M:Singularity.ITypeMatcher.Match(System.Type)
  fullName: Singularity.ITypeMatcher.Match(System.Type)
  nameWithType: ITypeMatcher.Match(Type)
- uid: Singularity.ITypeMatcher.Match*
  name: Match
  href: api/Singularity.ITypeMatcher.html#Singularity_ITypeMatcher_Match_
  commentId: Overload:Singularity.ITypeMatcher.Match
  isSpec: "True"
  fullName: Singularity.ITypeMatcher.Match
  nameWithType: ITypeMatcher.Match
- uid: Singularity.Lifetimes
  name: Lifetimes
  href: api/Singularity.Lifetimes.html
  commentId: T:Singularity.Lifetimes
  fullName: Singularity.Lifetimes
  nameWithType: Lifetimes
- uid: Singularity.Lifetimes.PerContainer
  name: PerContainer
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerContainer
  commentId: P:Singularity.Lifetimes.PerContainer
  fullName: Singularity.Lifetimes.PerContainer
  nameWithType: Lifetimes.PerContainer
- uid: Singularity.Lifetimes.PerContainer*
  name: PerContainer
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerContainer_
  commentId: Overload:Singularity.Lifetimes.PerContainer
  isSpec: "True"
  fullName: Singularity.Lifetimes.PerContainer
  nameWithType: Lifetimes.PerContainer
- uid: Singularity.Lifetimes.PerScope
  name: PerScope
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerScope
  commentId: P:Singularity.Lifetimes.PerScope
  fullName: Singularity.Lifetimes.PerScope
  nameWithType: Lifetimes.PerScope
- uid: Singularity.Lifetimes.PerScope*
  name: PerScope
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_PerScope_
  commentId: Overload:Singularity.Lifetimes.PerScope
  isSpec: "True"
  fullName: Singularity.Lifetimes.PerScope
  nameWithType: Lifetimes.PerScope
- uid: Singularity.Lifetimes.Transient
  name: Transient
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_Transient
  commentId: P:Singularity.Lifetimes.Transient
  fullName: Singularity.Lifetimes.Transient
  nameWithType: Lifetimes.Transient
- uid: Singularity.Lifetimes.Transient*
  name: Transient
  href: api/Singularity.Lifetimes.html#Singularity_Lifetimes_Transient_
  commentId: Overload:Singularity.Lifetimes.Transient
  isSpec: "True"
  fullName: Singularity.Lifetimes.Transient
  nameWithType: Lifetimes.Transient
- uid: Singularity.Loggers
  name: Loggers
  href: api/Singularity.Loggers.html
  commentId: T:Singularity.Loggers
  fullName: Singularity.Loggers
  nameWithType: Loggers
- uid: Singularity.Loggers.ConsoleLogger
  name: ConsoleLogger
  href: api/Singularity.Loggers.html#Singularity_Loggers_ConsoleLogger
  commentId: P:Singularity.Loggers.ConsoleLogger
  fullName: Singularity.Loggers.ConsoleLogger
  nameWithType: Loggers.ConsoleLogger
- uid: Singularity.Loggers.ConsoleLogger*
  name: ConsoleLogger
  href: api/Singularity.Loggers.html#Singularity_Loggers_ConsoleLogger_
  commentId: Overload:Singularity.Loggers.ConsoleLogger
  isSpec: "True"
  fullName: Singularity.Loggers.ConsoleLogger
  nameWithType: Loggers.ConsoleLogger
- uid: Singularity.Loggers.Default
  name: Default
  href: api/Singularity.Loggers.html#Singularity_Loggers_Default
  commentId: P:Singularity.Loggers.Default
  fullName: Singularity.Loggers.Default
  nameWithType: Loggers.Default
- uid: Singularity.Loggers.Default*
  name: Default
  href: api/Singularity.Loggers.html#Singularity_Loggers_Default_
  commentId: Overload:Singularity.Loggers.Default
  isSpec: "True"
  fullName: Singularity.Loggers.Default
  nameWithType: Loggers.Default
- uid: Singularity.Logging
  name: Singularity.Logging
  href: api/Singularity.Logging.html
  commentId: N:Singularity.Logging
  fullName: Singularity.Logging
  nameWithType: Singularity.Logging
- uid: Singularity.Logging.ConsoleLogger
  name: ConsoleLogger
  href: api/Singularity.Logging.ConsoleLogger.html
  commentId: T:Singularity.Logging.ConsoleLogger
  fullName: Singularity.Logging.ConsoleLogger
  nameWithType: ConsoleLogger
- uid: Singularity.Logging.ConsoleLogger.Log(System.String,System.Int32)
  name: Log(String, Int32)
  href: api/Singularity.Logging.ConsoleLogger.html#Singularity_Logging_ConsoleLogger_Log_System_String_System_Int32_
  commentId: M:Singularity.Logging.ConsoleLogger.Log(System.String,System.Int32)
  fullName: Singularity.Logging.ConsoleLogger.Log(System.String, System.Int32)
  nameWithType: ConsoleLogger.Log(String, Int32)
- uid: Singularity.Logging.ConsoleLogger.Log*
  name: Log
  href: api/Singularity.Logging.ConsoleLogger.html#Singularity_Logging_ConsoleLogger_Log_
  commentId: Overload:Singularity.Logging.ConsoleLogger.Log
  isSpec: "True"
  fullName: Singularity.Logging.ConsoleLogger.Log
  nameWithType: ConsoleLogger.Log
- uid: Singularity.Logging.ISingularityLogger
  name: ISingularityLogger
  href: api/Singularity.Logging.ISingularityLogger.html
  commentId: T:Singularity.Logging.ISingularityLogger
  fullName: Singularity.Logging.ISingularityLogger
  nameWithType: ISingularityLogger
- uid: Singularity.Logging.ISingularityLogger.Log(System.String,System.Int32)
  name: Log(String, Int32)
  href: api/Singularity.Logging.ISingularityLogger.html#Singularity_Logging_ISingularityLogger_Log_System_String_System_Int32_
  commentId: M:Singularity.Logging.ISingularityLogger.Log(System.String,System.Int32)
  fullName: Singularity.Logging.ISingularityLogger.Log(System.String, System.Int32)
  nameWithType: ISingularityLogger.Log(String, Int32)
- uid: Singularity.Logging.ISingularityLogger.Log*
  name: Log
  href: api/Singularity.Logging.ISingularityLogger.html#Singularity_Logging_ISingularityLogger_Log_
  commentId: Overload:Singularity.Logging.ISingularityLogger.Log
  isSpec: "True"
  fullName: Singularity.Logging.ISingularityLogger.Log
  nameWithType: ISingularityLogger.Log
- uid: Singularity.Logging.NullLogger
  name: NullLogger
  href: api/Singularity.Logging.NullLogger.html
  commentId: T:Singularity.Logging.NullLogger
  fullName: Singularity.Logging.NullLogger
  nameWithType: NullLogger
- uid: Singularity.Logging.NullLogger.Log(System.String,System.Int32)
  name: Log(String, Int32)
  href: api/Singularity.Logging.NullLogger.html#Singularity_Logging_NullLogger_Log_System_String_System_Int32_
  commentId: M:Singularity.Logging.NullLogger.Log(System.String,System.Int32)
  fullName: Singularity.Logging.NullLogger.Log(System.String, System.Int32)
  nameWithType: NullLogger.Log(String, Int32)
- uid: Singularity.Logging.NullLogger.Log*
  name: Log
  href: api/Singularity.Logging.NullLogger.html#Singularity_Logging_NullLogger_Log_
  commentId: Overload:Singularity.Logging.NullLogger.Log
  isSpec: "True"
  fullName: Singularity.Logging.NullLogger.Log
  nameWithType: NullLogger.Log
- uid: Singularity.MatchExtensions
  name: MatchExtensions
  href: api/Singularity.MatchExtensions.html
  commentId: T:Singularity.MatchExtensions
  fullName: Singularity.MatchExtensions
  nameWithType: MatchExtensions
- uid: Singularity.MatchExtensions.Match(System.Collections.Generic.List{Singularity.ITypeMatcher},System.Type)
  name: Match(List<ITypeMatcher>, Type)
  href: api/Singularity.MatchExtensions.html#Singularity_MatchExtensions_Match_System_Collections_Generic_List_Singularity_ITypeMatcher__System_Type_
  commentId: M:Singularity.MatchExtensions.Match(System.Collections.Generic.List{Singularity.ITypeMatcher},System.Type)
  name.vb: Match(List(Of ITypeMatcher), Type)
  fullName: Singularity.MatchExtensions.Match(System.Collections.Generic.List<Singularity.ITypeMatcher>, System.Type)
  fullName.vb: Singularity.MatchExtensions.Match(System.Collections.Generic.List(Of Singularity.ITypeMatcher), System.Type)
  nameWithType: MatchExtensions.Match(List<ITypeMatcher>, Type)
  nameWithType.vb: MatchExtensions.Match(List(Of ITypeMatcher), Type)
- uid: Singularity.MatchExtensions.Match*
  name: Match
  href: api/Singularity.MatchExtensions.html#Singularity_MatchExtensions_Match_
  commentId: Overload:Singularity.MatchExtensions.Match
  isSpec: "True"
  fullName: Singularity.MatchExtensions.Match
  nameWithType: MatchExtensions.Match
- uid: Singularity.PatternTypeMatcher
  name: PatternTypeMatcher
  href: api/Singularity.PatternTypeMatcher.html
  commentId: T:Singularity.PatternTypeMatcher
  fullName: Singularity.PatternTypeMatcher
  nameWithType: PatternTypeMatcher
- uid: Singularity.PatternTypeMatcher.#ctor(System.String)
  name: PatternTypeMatcher(String)
  href: api/Singularity.PatternTypeMatcher.html#Singularity_PatternTypeMatcher__ctor_System_String_
  commentId: M:Singularity.PatternTypeMatcher.#ctor(System.String)
  fullName: Singularity.PatternTypeMatcher.PatternTypeMatcher(System.String)
  nameWithType: PatternTypeMatcher.PatternTypeMatcher(String)
- uid: Singularity.PatternTypeMatcher.#ctor*
  name: PatternTypeMatcher
  href: api/Singularity.PatternTypeMatcher.html#Singularity_PatternTypeMatcher__ctor_
  commentId: Overload:Singularity.PatternTypeMatcher.#ctor
  isSpec: "True"
  fullName: Singularity.PatternTypeMatcher.PatternTypeMatcher
  nameWithType: PatternTypeMatcher.PatternTypeMatcher
- uid: Singularity.PatternTypeMatcher.Match(System.Type)
  name: Match(Type)
  href: api/Singularity.PatternTypeMatcher.html#Singularity_PatternTypeMatcher_Match_System_Type_
  commentId: M:Singularity.PatternTypeMatcher.Match(System.Type)
  fullName: Singularity.PatternTypeMatcher.Match(System.Type)
  nameWithType: PatternTypeMatcher.Match(Type)
- uid: Singularity.PatternTypeMatcher.Match*
  name: Match
  href: api/Singularity.PatternTypeMatcher.html#Singularity_PatternTypeMatcher_Match_
  commentId: Overload:Singularity.PatternTypeMatcher.Match
  isSpec: "True"
  fullName: Singularity.PatternTypeMatcher.Match
  nameWithType: PatternTypeMatcher.Match
- uid: Singularity.PerContainer
  name: PerContainer
  href: api/Singularity.PerContainer.html
  commentId: T:Singularity.PerContainer
  fullName: Singularity.PerContainer
  nameWithType: PerContainer
- uid: Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.PerContainer.html#Singularity_PerContainer_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.PerContainer.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: PerContainer.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.PerContainer.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.PerContainer.html#Singularity_PerContainer_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.PerContainer.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.PerContainer.ApplyLifetimeOnExpression
  nameWithType: PerContainer.ApplyLifetimeOnExpression
- uid: Singularity.PerScope
  name: PerScope
  href: api/Singularity.PerScope.html
  commentId: T:Singularity.PerScope
  fullName: Singularity.PerScope
  nameWithType: PerScope
- uid: Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.PerScope.html#Singularity_PerScope_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.PerScope.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: PerScope.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.PerScope.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.PerScope.html#Singularity_PerScope_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.PerScope.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.PerScope.ApplyLifetimeOnExpression
  nameWithType: PerScope.ApplyLifetimeOnExpression
- uid: Singularity.Resolving
  name: Singularity.Resolving
  href: api/Singularity.Resolving.html
  commentId: N:Singularity.Resolving
  fullName: Singularity.Resolving
  nameWithType: Singularity.Resolving
- uid: Singularity.Resolving.Generators
  name: Singularity.Resolving.Generators
  href: api/Singularity.Resolving.Generators.html
  commentId: N:Singularity.Resolving.Generators
  fullName: Singularity.Resolving.Generators
  nameWithType: Singularity.Resolving.Generators
- uid: Singularity.Resolving.Generators.CollectionServiceBindingGenerator
  name: CollectionServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.CollectionServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.CollectionServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.CollectionServiceBindingGenerator
  nameWithType: CollectionServiceBindingGenerator
- uid: Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.CollectionServiceBindingGenerator.html#Singularity_Resolving_Generators_CollectionServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: CollectionServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.CollectionServiceBindingGenerator.html#Singularity_Resolving_Generators_CollectionServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.CollectionServiceBindingGenerator.Resolve
  nameWithType: CollectionServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator
  name: ConcreteServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.ConcreteServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator
  nameWithType: ConcreteServiceBindingGenerator
- uid: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.html#Singularity_Resolving_Generators_ConcreteServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: ConcreteServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.html#Singularity_Resolving_Generators_ConcreteServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.ConcreteServiceBindingGenerator.Resolve
  nameWithType: ConcreteServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.ContainerServiceBindingGenerator
  name: ContainerServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.ContainerServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.ContainerServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.ContainerServiceBindingGenerator
  nameWithType: ContainerServiceBindingGenerator
- uid: Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.ContainerServiceBindingGenerator.html#Singularity_Resolving_Generators_ContainerServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: ContainerServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.ContainerServiceBindingGenerator.html#Singularity_Resolving_Generators_ContainerServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.ContainerServiceBindingGenerator.Resolve
  nameWithType: ContainerServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator
  name: ExpressionServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.ExpressionServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator
  nameWithType: ExpressionServiceBindingGenerator
- uid: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.html#Singularity_Resolving_Generators_ExpressionServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: ExpressionServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.html#Singularity_Resolving_Generators_ExpressionServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.ExpressionServiceBindingGenerator.Resolve
  nameWithType: ExpressionServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.FactoryServiceBindingGenerator
  name: FactoryServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.FactoryServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.FactoryServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.FactoryServiceBindingGenerator
  nameWithType: FactoryServiceBindingGenerator
- uid: Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.FactoryServiceBindingGenerator.html#Singularity_Resolving_Generators_FactoryServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: FactoryServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.FactoryServiceBindingGenerator.html#Singularity_Resolving_Generators_FactoryServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.FactoryServiceBindingGenerator.Resolve
  nameWithType: FactoryServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.IServiceBindingGenerator
  name: IServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.IServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.IServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.IServiceBindingGenerator
  nameWithType: IServiceBindingGenerator
- uid: Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.IServiceBindingGenerator.html#Singularity_Resolving_Generators_IServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: IServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.IServiceBindingGenerator.html#Singularity_Resolving_Generators_IServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.IServiceBindingGenerator.Resolve
  nameWithType: IServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.LazyServiceBindingGenerator
  name: LazyServiceBindingGenerator
  href: api/Singularity.Resolving.Generators.LazyServiceBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.LazyServiceBindingGenerator
  fullName: Singularity.Resolving.Generators.LazyServiceBindingGenerator
  nameWithType: LazyServiceBindingGenerator
- uid: Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.LazyServiceBindingGenerator.html#Singularity_Resolving_Generators_LazyServiceBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: LazyServiceBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.LazyServiceBindingGenerator.html#Singularity_Resolving_Generators_LazyServiceBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.LazyServiceBindingGenerator.Resolve
  nameWithType: LazyServiceBindingGenerator.Resolve
- uid: Singularity.Resolving.Generators.OpenGenericBindingGenerator
  name: OpenGenericBindingGenerator
  href: api/Singularity.Resolving.Generators.OpenGenericBindingGenerator.html
  commentId: T:Singularity.Resolving.Generators.OpenGenericBindingGenerator
  fullName: Singularity.Resolving.Generators.OpenGenericBindingGenerator
  nameWithType: OpenGenericBindingGenerator
- uid: Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  name: Resolve(IInstanceFactoryResolver, Type)
  href: api/Singularity.Resolving.Generators.OpenGenericBindingGenerator.html#Singularity_Resolving_Generators_OpenGenericBindingGenerator_Resolve_Singularity_Resolving_IInstanceFactoryResolver_System_Type_
  commentId: M:Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver,System.Type)
  fullName: Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve(Singularity.Resolving.IInstanceFactoryResolver, System.Type)
  nameWithType: OpenGenericBindingGenerator.Resolve(IInstanceFactoryResolver, Type)
- uid: Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.Generators.OpenGenericBindingGenerator.html#Singularity_Resolving_Generators_OpenGenericBindingGenerator_Resolve_
  commentId: Overload:Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.Generators.OpenGenericBindingGenerator.Resolve
  nameWithType: OpenGenericBindingGenerator.Resolve
- uid: Singularity.Resolving.IInstanceFactoryResolver
  name: IInstanceFactoryResolver
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html
  commentId: T:Singularity.Resolving.IInstanceFactoryResolver
  fullName: Singularity.Resolving.IInstanceFactoryResolver
  nameWithType: IInstanceFactoryResolver
- uid: Singularity.Resolving.IInstanceFactoryResolver.GetBinding(System.Type)
  name: GetBinding(Type)
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_GetBinding_System_Type_
  commentId: M:Singularity.Resolving.IInstanceFactoryResolver.GetBinding(System.Type)
  fullName: Singularity.Resolving.IInstanceFactoryResolver.GetBinding(System.Type)
  nameWithType: IInstanceFactoryResolver.GetBinding(Type)
- uid: Singularity.Resolving.IInstanceFactoryResolver.GetBinding*
  name: GetBinding
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_GetBinding_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.GetBinding
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.GetBinding
  nameWithType: IInstanceFactoryResolver.GetBinding
- uid: Singularity.Resolving.IInstanceFactoryResolver.Resolve(System.Type)
  name: Resolve(Type)
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_Resolve_System_Type_
  commentId: M:Singularity.Resolving.IInstanceFactoryResolver.Resolve(System.Type)
  fullName: Singularity.Resolving.IInstanceFactoryResolver.Resolve(System.Type)
  nameWithType: IInstanceFactoryResolver.Resolve(Type)
- uid: Singularity.Resolving.IInstanceFactoryResolver.Resolve*
  name: Resolve
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_Resolve_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.Resolve
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.Resolve
  nameWithType: IInstanceFactoryResolver.Resolve
- uid: Singularity.Resolving.IInstanceFactoryResolver.Settings
  name: Settings
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_Settings
  commentId: P:Singularity.Resolving.IInstanceFactoryResolver.Settings
  fullName: Singularity.Resolving.IInstanceFactoryResolver.Settings
  nameWithType: IInstanceFactoryResolver.Settings
- uid: Singularity.Resolving.IInstanceFactoryResolver.Settings*
  name: Settings
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_Settings_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.Settings
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.Settings
  nameWithType: IInstanceFactoryResolver.Settings
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding(System.Type)
  name: TryGetBinding(Type)
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryGetBinding_System_Type_
  commentId: M:Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding(System.Type)
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding(System.Type)
  nameWithType: IInstanceFactoryResolver.TryGetBinding(Type)
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding*
  name: TryGetBinding
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryGetBinding_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryGetBinding
  nameWithType: IInstanceFactoryResolver.TryGetBinding
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryResolve(System.Type)
  name: TryResolve(Type)
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryResolve_System_Type_
  commentId: M:Singularity.Resolving.IInstanceFactoryResolver.TryResolve(System.Type)
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryResolve(System.Type)
  nameWithType: IInstanceFactoryResolver.TryResolve(Type)
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryResolve*
  name: TryResolve
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryResolve_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.TryResolve
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryResolve
  nameWithType: IInstanceFactoryResolver.TryResolve
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll(System.Type)
  name: TryResolveAll(Type)
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryResolveAll_System_Type_
  commentId: M:Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll(System.Type)
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll(System.Type)
  nameWithType: IInstanceFactoryResolver.TryResolveAll(Type)
- uid: Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll*
  name: TryResolveAll
  href: api/Singularity.Resolving.IInstanceFactoryResolver.html#Singularity_Resolving_IInstanceFactoryResolver_TryResolveAll_
  commentId: Overload:Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll
  isSpec: "True"
  fullName: Singularity.Resolving.IInstanceFactoryResolver.TryResolveAll
  nameWithType: IInstanceFactoryResolver.TryResolveAll
- uid: Singularity.Resolving.InstanceFactory
  name: InstanceFactory
  href: api/Singularity.Resolving.InstanceFactory.html
  commentId: T:Singularity.Resolving.InstanceFactory
  fullName: Singularity.Resolving.InstanceFactory
  nameWithType: InstanceFactory
- uid: Singularity.Resolving.InstanceFactory.#ctor(System.Type,Singularity.Expressions.ReadOnlyExpressionContext,System.Func{Singularity.Scoped,System.Object})
  name: InstanceFactory(Type, ReadOnlyExpressionContext, Func<Scoped, Object>)
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory__ctor_System_Type_Singularity_Expressions_ReadOnlyExpressionContext_System_Func_Singularity_Scoped_System_Object__
  commentId: M:Singularity.Resolving.InstanceFactory.#ctor(System.Type,Singularity.Expressions.ReadOnlyExpressionContext,System.Func{Singularity.Scoped,System.Object})
  name.vb: InstanceFactory(Type, ReadOnlyExpressionContext, Func(Of Scoped, Object))
  fullName: Singularity.Resolving.InstanceFactory.InstanceFactory(System.Type, Singularity.Expressions.ReadOnlyExpressionContext, System.Func<Singularity.Scoped, System.Object>)
  fullName.vb: Singularity.Resolving.InstanceFactory.InstanceFactory(System.Type, Singularity.Expressions.ReadOnlyExpressionContext, System.Func(Of Singularity.Scoped, System.Object))
  nameWithType: InstanceFactory.InstanceFactory(Type, ReadOnlyExpressionContext, Func<Scoped, Object>)
  nameWithType.vb: InstanceFactory.InstanceFactory(Type, ReadOnlyExpressionContext, Func(Of Scoped, Object))
- uid: Singularity.Resolving.InstanceFactory.#ctor*
  name: InstanceFactory
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory__ctor_
  commentId: Overload:Singularity.Resolving.InstanceFactory.#ctor
  isSpec: "True"
  fullName: Singularity.Resolving.InstanceFactory.InstanceFactory
  nameWithType: InstanceFactory.InstanceFactory
- uid: Singularity.Resolving.InstanceFactory.Context
  name: Context
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_Context
  commentId: P:Singularity.Resolving.InstanceFactory.Context
  fullName: Singularity.Resolving.InstanceFactory.Context
  nameWithType: InstanceFactory.Context
- uid: Singularity.Resolving.InstanceFactory.Context*
  name: Context
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_Context_
  commentId: Overload:Singularity.Resolving.InstanceFactory.Context
  isSpec: "True"
  fullName: Singularity.Resolving.InstanceFactory.Context
  nameWithType: InstanceFactory.Context
- uid: Singularity.Resolving.InstanceFactory.DependencyType
  name: DependencyType
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_DependencyType
  commentId: P:Singularity.Resolving.InstanceFactory.DependencyType
  fullName: Singularity.Resolving.InstanceFactory.DependencyType
  nameWithType: InstanceFactory.DependencyType
- uid: Singularity.Resolving.InstanceFactory.DependencyType*
  name: DependencyType
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_DependencyType_
  commentId: Overload:Singularity.Resolving.InstanceFactory.DependencyType
  isSpec: "True"
  fullName: Singularity.Resolving.InstanceFactory.DependencyType
  nameWithType: InstanceFactory.DependencyType
- uid: Singularity.Resolving.InstanceFactory.Factory
  name: Factory
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_Factory
  commentId: P:Singularity.Resolving.InstanceFactory.Factory
  fullName: Singularity.Resolving.InstanceFactory.Factory
  nameWithType: InstanceFactory.Factory
- uid: Singularity.Resolving.InstanceFactory.Factory*
  name: Factory
  href: api/Singularity.Resolving.InstanceFactory.html#Singularity_Resolving_InstanceFactory_Factory_
  commentId: Overload:Singularity.Resolving.InstanceFactory.Factory
  isSpec: "True"
  fullName: Singularity.Resolving.InstanceFactory.Factory
  nameWithType: InstanceFactory.Factory
- uid: Singularity.Scoped
  name: Scoped
  href: api/Singularity.Scoped.html
  commentId: T:Singularity.Scoped
  fullName: Singularity.Scoped
  nameWithType: Scoped
- uid: Singularity.Scoped.Dispose
  name: Dispose()
  href: api/Singularity.Scoped.html#Singularity_Scoped_Dispose
  commentId: M:Singularity.Scoped.Dispose
  fullName: Singularity.Scoped.Dispose()
  nameWithType: Scoped.Dispose()
- uid: Singularity.Scoped.Dispose*
  name: Dispose
  href: api/Singularity.Scoped.html#Singularity_Scoped_Dispose_
  commentId: Overload:Singularity.Scoped.Dispose
  isSpec: "True"
  fullName: Singularity.Scoped.Dispose
  nameWithType: Scoped.Dispose
- uid: Singularity.Scoped.GetInstance(System.Type)
  name: GetInstance(Type)
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance_System_Type_
  commentId: M:Singularity.Scoped.GetInstance(System.Type)
  fullName: Singularity.Scoped.GetInstance(System.Type)
  nameWithType: Scoped.GetInstance(Type)
- uid: Singularity.Scoped.GetInstance*
  name: GetInstance
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance_
  commentId: Overload:Singularity.Scoped.GetInstance
  isSpec: "True"
  fullName: Singularity.Scoped.GetInstance
  nameWithType: Scoped.GetInstance
- uid: Singularity.Scoped.GetInstance``1
  name: GetInstance<T>()
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstance__1
  commentId: M:Singularity.Scoped.GetInstance``1
  name.vb: GetInstance(Of T)()
  fullName: Singularity.Scoped.GetInstance<T>()
  fullName.vb: Singularity.Scoped.GetInstance(Of T)()
  nameWithType: Scoped.GetInstance<T>()
  nameWithType.vb: Scoped.GetInstance(Of T)()
- uid: Singularity.Scoped.GetInstanceOrDefault(System.Type)
  name: GetInstanceOrDefault(Type)
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstanceOrDefault_System_Type_
  commentId: M:Singularity.Scoped.GetInstanceOrDefault(System.Type)
  fullName: Singularity.Scoped.GetInstanceOrDefault(System.Type)
  nameWithType: Scoped.GetInstanceOrDefault(Type)
- uid: Singularity.Scoped.GetInstanceOrDefault*
  name: GetInstanceOrDefault
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstanceOrDefault_
  commentId: Overload:Singularity.Scoped.GetInstanceOrDefault
  isSpec: "True"
  fullName: Singularity.Scoped.GetInstanceOrDefault
  nameWithType: Scoped.GetInstanceOrDefault
- uid: Singularity.Scoped.GetInstanceOrDefault``1
  name: GetInstanceOrDefault<T>()
  href: api/Singularity.Scoped.html#Singularity_Scoped_GetInstanceOrDefault__1
  commentId: M:Singularity.Scoped.GetInstanceOrDefault``1
  name.vb: GetInstanceOrDefault(Of T)()
  fullName: Singularity.Scoped.GetInstanceOrDefault<T>()
  fullName.vb: Singularity.Scoped.GetInstanceOrDefault(Of T)()
  nameWithType: Scoped.GetInstanceOrDefault<T>()
  nameWithType.vb: Scoped.GetInstanceOrDefault(Of T)()
- uid: Singularity.Scoped.LateInject(System.Object)
  name: LateInject(Object)
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInject_System_Object_
  commentId: M:Singularity.Scoped.LateInject(System.Object)
  fullName: Singularity.Scoped.LateInject(System.Object)
  nameWithType: Scoped.LateInject(Object)
- uid: Singularity.Scoped.LateInject*
  name: LateInject
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInject_
  commentId: Overload:Singularity.Scoped.LateInject
  isSpec: "True"
  fullName: Singularity.Scoped.LateInject
  nameWithType: Scoped.LateInject
- uid: Singularity.Scoped.LateInjectAll*
  name: LateInjectAll
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInjectAll_
  commentId: Overload:Singularity.Scoped.LateInjectAll
  isSpec: "True"
  fullName: Singularity.Scoped.LateInjectAll
  nameWithType: Scoped.LateInjectAll
- uid: Singularity.Scoped.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name: LateInjectAll<T>(IEnumerable<T>)
  href: api/Singularity.Scoped.html#Singularity_Scoped_LateInjectAll__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Singularity.Scoped.LateInjectAll``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: LateInjectAll(Of T)(IEnumerable(Of T))
  fullName: Singularity.Scoped.LateInjectAll<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Singularity.Scoped.LateInjectAll(Of T)(System.Collections.Generic.IEnumerable(Of T))
  nameWithType: Scoped.LateInjectAll<T>(IEnumerable<T>)
  nameWithType.vb: Scoped.LateInjectAll(Of T)(IEnumerable(Of T))
- uid: Singularity.Scoped.System#IServiceProvider#GetService(System.Type)
  name: IServiceProvider.GetService(Type)
  href: api/Singularity.Scoped.html#Singularity_Scoped_System_IServiceProvider_GetService_System_Type_
  commentId: M:Singularity.Scoped.System#IServiceProvider#GetService(System.Type)
  name.vb: System.IServiceProvider.GetService(Type)
  fullName: Singularity.Scoped.System.IServiceProvider.GetService(System.Type)
  nameWithType: Scoped.IServiceProvider.GetService(Type)
  nameWithType.vb: Scoped.System.IServiceProvider.GetService(Type)
- uid: Singularity.Scoped.System#IServiceProvider#GetService*
  name: IServiceProvider.GetService
  href: api/Singularity.Scoped.html#Singularity_Scoped_System_IServiceProvider_GetService_
  commentId: Overload:Singularity.Scoped.System#IServiceProvider#GetService
  isSpec: "True"
  name.vb: System.IServiceProvider.GetService
  fullName: Singularity.Scoped.System.IServiceProvider.GetService
  nameWithType: Scoped.IServiceProvider.GetService
  nameWithType.vb: Scoped.System.IServiceProvider.GetService
- uid: Singularity.ServiceAutoDispose
  name: ServiceAutoDispose
  href: api/Singularity.ServiceAutoDispose.html
  commentId: T:Singularity.ServiceAutoDispose
  fullName: Singularity.ServiceAutoDispose
  nameWithType: ServiceAutoDispose
- uid: Singularity.ServiceAutoDispose.Always
  name: Always
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Always
  commentId: F:Singularity.ServiceAutoDispose.Always
  fullName: Singularity.ServiceAutoDispose.Always
  nameWithType: ServiceAutoDispose.Always
- uid: Singularity.ServiceAutoDispose.Default
  name: Default
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Default
  commentId: F:Singularity.ServiceAutoDispose.Default
  fullName: Singularity.ServiceAutoDispose.Default
  nameWithType: ServiceAutoDispose.Default
- uid: Singularity.ServiceAutoDispose.Never
  name: Never
  href: api/Singularity.ServiceAutoDispose.html#Singularity_ServiceAutoDispose_Never
  commentId: F:Singularity.ServiceAutoDispose.Never
  fullName: Singularity.ServiceAutoDispose.Never
  nameWithType: ServiceAutoDispose.Never
- uid: Singularity.ServiceBinding
  name: ServiceBinding
  href: api/Singularity.ServiceBinding.html
  commentId: T:Singularity.ServiceBinding
  fullName: Singularity.ServiceBinding
  nameWithType: ServiceBinding
- uid: Singularity.ServiceBinding.#ctor(Singularity.Collections.SinglyLinkedListNode{System.Type},Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name: ServiceBinding(SinglyLinkedListNode<Type>, BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding__ctor_Singularity_Collections_SinglyLinkedListNode_System_Type__Singularity_BindingMetadata__System_Linq_Expressions_Expression_System_Type_Singularity_Expressions_IConstructorResolver_Singularity_ILifetime_System_Action_System_Object__Singularity_ServiceAutoDispose_
  commentId: M:Singularity.ServiceBinding.#ctor(Singularity.Collections.SinglyLinkedListNode{System.Type},Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name.vb: ServiceBinding(SinglyLinkedListNode(Of Type), ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
  fullName: Singularity.ServiceBinding.ServiceBinding(Singularity.Collections.SinglyLinkedListNode<System.Type>, Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action<System.Object>, Singularity.ServiceAutoDispose)
  fullName.vb: Singularity.ServiceBinding.ServiceBinding(Singularity.Collections.SinglyLinkedListNode(Of System.Type), ByRef Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action(Of System.Object), Singularity.ServiceAutoDispose)
  nameWithType: ServiceBinding.ServiceBinding(SinglyLinkedListNode<Type>, BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  nameWithType.vb: ServiceBinding.ServiceBinding(SinglyLinkedListNode(Of Type), ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
- uid: Singularity.ServiceBinding.#ctor(System.Type,Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name: ServiceBinding(Type, BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding__ctor_System_Type_Singularity_BindingMetadata__System_Linq_Expressions_Expression_System_Type_Singularity_Expressions_IConstructorResolver_Singularity_ILifetime_System_Action_System_Object__Singularity_ServiceAutoDispose_
  commentId: M:Singularity.ServiceBinding.#ctor(System.Type,Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name.vb: ServiceBinding(Type, ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
  fullName: Singularity.ServiceBinding.ServiceBinding(System.Type, Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action<System.Object>, Singularity.ServiceAutoDispose)
  fullName.vb: Singularity.ServiceBinding.ServiceBinding(System.Type, ByRef Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action(Of System.Object), Singularity.ServiceAutoDispose)
  nameWithType: ServiceBinding.ServiceBinding(Type, BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  nameWithType.vb: ServiceBinding.ServiceBinding(Type, ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
- uid: Singularity.ServiceBinding.#ctor(System.Type[],Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name: ServiceBinding(Type[], BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding__ctor_System_Type___Singularity_BindingMetadata__System_Linq_Expressions_Expression_System_Type_Singularity_Expressions_IConstructorResolver_Singularity_ILifetime_System_Action_System_Object__Singularity_ServiceAutoDispose_
  commentId: M:Singularity.ServiceBinding.#ctor(System.Type[],Singularity.BindingMetadata@,System.Linq.Expressions.Expression,System.Type,Singularity.Expressions.IConstructorResolver,Singularity.ILifetime,System.Action{System.Object},Singularity.ServiceAutoDispose)
  name.vb: ServiceBinding(Type(), ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
  fullName: Singularity.ServiceBinding.ServiceBinding(System.Type[], Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action<System.Object>, Singularity.ServiceAutoDispose)
  fullName.vb: Singularity.ServiceBinding.ServiceBinding(System.Type(), ByRef Singularity.BindingMetadata, System.Linq.Expressions.Expression, System.Type, Singularity.Expressions.IConstructorResolver, Singularity.ILifetime, System.Action(Of System.Object), Singularity.ServiceAutoDispose)
  nameWithType: ServiceBinding.ServiceBinding(Type[], BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action<Object>, ServiceAutoDispose)
  nameWithType.vb: ServiceBinding.ServiceBinding(Type(), ByRef BindingMetadata, Expression, Type, IConstructorResolver, ILifetime, Action(Of Object), ServiceAutoDispose)
- uid: Singularity.ServiceBinding.#ctor*
  name: ServiceBinding
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding__ctor_
  commentId: Overload:Singularity.ServiceBinding.#ctor
  isSpec: "True"
  fullName: Singularity.ServiceBinding.ServiceBinding
  nameWithType: ServiceBinding.ServiceBinding
- uid: Singularity.ServiceBinding.BaseExpression
  name: BaseExpression
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_BaseExpression
  commentId: P:Singularity.ServiceBinding.BaseExpression
  fullName: Singularity.ServiceBinding.BaseExpression
  nameWithType: ServiceBinding.BaseExpression
- uid: Singularity.ServiceBinding.BaseExpression*
  name: BaseExpression
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_BaseExpression_
  commentId: Overload:Singularity.ServiceBinding.BaseExpression
  isSpec: "True"
  fullName: Singularity.ServiceBinding.BaseExpression
  nameWithType: ServiceBinding.BaseExpression
- uid: Singularity.ServiceBinding.BindingMetadata
  name: BindingMetadata
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_BindingMetadata
  commentId: P:Singularity.ServiceBinding.BindingMetadata
  fullName: Singularity.ServiceBinding.BindingMetadata
  nameWithType: ServiceBinding.BindingMetadata
- uid: Singularity.ServiceBinding.BindingMetadata*
  name: BindingMetadata
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_BindingMetadata_
  commentId: Overload:Singularity.ServiceBinding.BindingMetadata
  isSpec: "True"
  fullName: Singularity.ServiceBinding.BindingMetadata
  nameWithType: ServiceBinding.BindingMetadata
- uid: Singularity.ServiceBinding.ConcreteType
  name: ConcreteType
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ConcreteType
  commentId: P:Singularity.ServiceBinding.ConcreteType
  fullName: Singularity.ServiceBinding.ConcreteType
  nameWithType: ServiceBinding.ConcreteType
- uid: Singularity.ServiceBinding.ConcreteType*
  name: ConcreteType
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ConcreteType_
  commentId: Overload:Singularity.ServiceBinding.ConcreteType
  isSpec: "True"
  fullName: Singularity.ServiceBinding.ConcreteType
  nameWithType: ServiceBinding.ConcreteType
- uid: Singularity.ServiceBinding.ConstructorResolver
  name: ConstructorResolver
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ConstructorResolver
  commentId: P:Singularity.ServiceBinding.ConstructorResolver
  fullName: Singularity.ServiceBinding.ConstructorResolver
  nameWithType: ServiceBinding.ConstructorResolver
- uid: Singularity.ServiceBinding.ConstructorResolver*
  name: ConstructorResolver
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ConstructorResolver_
  commentId: Overload:Singularity.ServiceBinding.ConstructorResolver
  isSpec: "True"
  fullName: Singularity.ServiceBinding.ConstructorResolver
  nameWithType: ServiceBinding.ConstructorResolver
- uid: Singularity.ServiceBinding.Expression
  name: Expression
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Expression
  commentId: P:Singularity.ServiceBinding.Expression
  fullName: Singularity.ServiceBinding.Expression
  nameWithType: ServiceBinding.Expression
- uid: Singularity.ServiceBinding.Expression*
  name: Expression
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Expression_
  commentId: Overload:Singularity.ServiceBinding.Expression
  isSpec: "True"
  fullName: Singularity.ServiceBinding.Expression
  nameWithType: ServiceBinding.Expression
- uid: Singularity.ServiceBinding.Factories
  name: Factories
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Factories
  commentId: P:Singularity.ServiceBinding.Factories
  fullName: Singularity.ServiceBinding.Factories
  nameWithType: ServiceBinding.Factories
- uid: Singularity.ServiceBinding.Factories*
  name: Factories
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Factories_
  commentId: Overload:Singularity.ServiceBinding.Factories
  isSpec: "True"
  fullName: Singularity.ServiceBinding.Factories
  nameWithType: ServiceBinding.Factories
- uid: Singularity.ServiceBinding.Finalizer
  name: Finalizer
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Finalizer
  commentId: P:Singularity.ServiceBinding.Finalizer
  fullName: Singularity.ServiceBinding.Finalizer
  nameWithType: ServiceBinding.Finalizer
- uid: Singularity.ServiceBinding.Finalizer*
  name: Finalizer
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Finalizer_
  commentId: Overload:Singularity.ServiceBinding.Finalizer
  isSpec: "True"
  fullName: Singularity.ServiceBinding.Finalizer
  nameWithType: ServiceBinding.Finalizer
- uid: Singularity.ServiceBinding.Lifetime
  name: Lifetime
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Lifetime
  commentId: P:Singularity.ServiceBinding.Lifetime
  fullName: Singularity.ServiceBinding.Lifetime
  nameWithType: ServiceBinding.Lifetime
- uid: Singularity.ServiceBinding.Lifetime*
  name: Lifetime
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_Lifetime_
  commentId: Overload:Singularity.ServiceBinding.Lifetime
  isSpec: "True"
  fullName: Singularity.ServiceBinding.Lifetime
  nameWithType: ServiceBinding.Lifetime
- uid: Singularity.ServiceBinding.NeedsDispose
  name: NeedsDispose
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_NeedsDispose
  commentId: P:Singularity.ServiceBinding.NeedsDispose
  fullName: Singularity.ServiceBinding.NeedsDispose
  nameWithType: ServiceBinding.NeedsDispose
- uid: Singularity.ServiceBinding.NeedsDispose*
  name: NeedsDispose
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_NeedsDispose_
  commentId: Overload:Singularity.ServiceBinding.NeedsDispose
  isSpec: "True"
  fullName: Singularity.ServiceBinding.NeedsDispose
  nameWithType: ServiceBinding.NeedsDispose
- uid: Singularity.ServiceBinding.ResolveError
  name: ResolveError
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ResolveError
  commentId: P:Singularity.ServiceBinding.ResolveError
  fullName: Singularity.ServiceBinding.ResolveError
  nameWithType: ServiceBinding.ResolveError
- uid: Singularity.ServiceBinding.ResolveError*
  name: ResolveError
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ResolveError_
  commentId: Overload:Singularity.ServiceBinding.ResolveError
  isSpec: "True"
  fullName: Singularity.ServiceBinding.ResolveError
  nameWithType: ServiceBinding.ResolveError
- uid: Singularity.ServiceBinding.ServiceTypes
  name: ServiceTypes
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ServiceTypes
  commentId: P:Singularity.ServiceBinding.ServiceTypes
  fullName: Singularity.ServiceBinding.ServiceTypes
  nameWithType: ServiceBinding.ServiceTypes
- uid: Singularity.ServiceBinding.ServiceTypes*
  name: ServiceTypes
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_ServiceTypes_
  commentId: Overload:Singularity.ServiceBinding.ServiceTypes
  isSpec: "True"
  fullName: Singularity.ServiceBinding.ServiceTypes
  nameWithType: ServiceBinding.ServiceTypes
- uid: Singularity.ServiceBinding.TryGetInstanceFactory(System.Type,Singularity.Resolving.InstanceFactory@)
  name: TryGetInstanceFactory(Type, out InstanceFactory)
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_TryGetInstanceFactory_System_Type_Singularity_Resolving_InstanceFactory__
  commentId: M:Singularity.ServiceBinding.TryGetInstanceFactory(System.Type,Singularity.Resolving.InstanceFactory@)
  name.vb: TryGetInstanceFactory(Type, ByRef InstanceFactory)
  fullName: Singularity.ServiceBinding.TryGetInstanceFactory(System.Type, out Singularity.Resolving.InstanceFactory)
  fullName.vb: Singularity.ServiceBinding.TryGetInstanceFactory(System.Type, ByRef Singularity.Resolving.InstanceFactory)
  nameWithType: ServiceBinding.TryGetInstanceFactory(Type, out InstanceFactory)
  nameWithType.vb: ServiceBinding.TryGetInstanceFactory(Type, ByRef InstanceFactory)
- uid: Singularity.ServiceBinding.TryGetInstanceFactory*
  name: TryGetInstanceFactory
  href: api/Singularity.ServiceBinding.html#Singularity_ServiceBinding_TryGetInstanceFactory_
  commentId: Overload:Singularity.ServiceBinding.TryGetInstanceFactory
  isSpec: "True"
  fullName: Singularity.ServiceBinding.TryGetInstanceFactory
  nameWithType: ServiceBinding.TryGetInstanceFactory
- uid: Singularity.SingularityServiceProviderFactory
  name: SingularityServiceProviderFactory
  href: api/Singularity.SingularityServiceProviderFactory.html
  commentId: T:Singularity.SingularityServiceProviderFactory
  fullName: Singularity.SingularityServiceProviderFactory
  nameWithType: SingularityServiceProviderFactory
- uid: Singularity.SingularityServiceProviderFactory.#ctor(Singularity.SingularitySettings)
  name: SingularityServiceProviderFactory(SingularitySettings)
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory__ctor_Singularity_SingularitySettings_
  commentId: M:Singularity.SingularityServiceProviderFactory.#ctor(Singularity.SingularitySettings)
  fullName: Singularity.SingularityServiceProviderFactory.SingularityServiceProviderFactory(Singularity.SingularitySettings)
  nameWithType: SingularityServiceProviderFactory.SingularityServiceProviderFactory(SingularitySettings)
- uid: Singularity.SingularityServiceProviderFactory.#ctor*
  name: SingularityServiceProviderFactory
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory__ctor_
  commentId: Overload:Singularity.SingularityServiceProviderFactory.#ctor
  isSpec: "True"
  fullName: Singularity.SingularityServiceProviderFactory.SingularityServiceProviderFactory
  nameWithType: SingularityServiceProviderFactory.SingularityServiceProviderFactory
- uid: Singularity.SingularityServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: CreateBuilder(IServiceCollection)
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory_CreateBuilder_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:Singularity.SingularityServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: Singularity.SingularityServiceProviderFactory.CreateBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: SingularityServiceProviderFactory.CreateBuilder(IServiceCollection)
- uid: Singularity.SingularityServiceProviderFactory.CreateBuilder*
  name: CreateBuilder
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory_CreateBuilder_
  commentId: Overload:Singularity.SingularityServiceProviderFactory.CreateBuilder
  isSpec: "True"
  fullName: Singularity.SingularityServiceProviderFactory.CreateBuilder
  nameWithType: SingularityServiceProviderFactory.CreateBuilder
- uid: Singularity.SingularityServiceProviderFactory.CreateServiceProvider(Singularity.ContainerBuilder)
  name: CreateServiceProvider(ContainerBuilder)
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory_CreateServiceProvider_Singularity_ContainerBuilder_
  commentId: M:Singularity.SingularityServiceProviderFactory.CreateServiceProvider(Singularity.ContainerBuilder)
  fullName: Singularity.SingularityServiceProviderFactory.CreateServiceProvider(Singularity.ContainerBuilder)
  nameWithType: SingularityServiceProviderFactory.CreateServiceProvider(ContainerBuilder)
- uid: Singularity.SingularityServiceProviderFactory.CreateServiceProvider*
  name: CreateServiceProvider
  href: api/Singularity.SingularityServiceProviderFactory.html#Singularity_SingularityServiceProviderFactory_CreateServiceProvider_
  commentId: Overload:Singularity.SingularityServiceProviderFactory.CreateServiceProvider
  isSpec: "True"
  fullName: Singularity.SingularityServiceProviderFactory.CreateServiceProvider
  nameWithType: SingularityServiceProviderFactory.CreateServiceProvider
- uid: Singularity.SingularityServiceScope
  name: SingularityServiceScope
  href: api/Singularity.SingularityServiceScope.html
  commentId: T:Singularity.SingularityServiceScope
  fullName: Singularity.SingularityServiceScope
  nameWithType: SingularityServiceScope
- uid: Singularity.SingularityServiceScope.#ctor(Singularity.Scoped)
  name: SingularityServiceScope(Scoped)
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope__ctor_Singularity_Scoped_
  commentId: M:Singularity.SingularityServiceScope.#ctor(Singularity.Scoped)
  fullName: Singularity.SingularityServiceScope.SingularityServiceScope(Singularity.Scoped)
  nameWithType: SingularityServiceScope.SingularityServiceScope(Scoped)
- uid: Singularity.SingularityServiceScope.#ctor*
  name: SingularityServiceScope
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope__ctor_
  commentId: Overload:Singularity.SingularityServiceScope.#ctor
  isSpec: "True"
  fullName: Singularity.SingularityServiceScope.SingularityServiceScope
  nameWithType: SingularityServiceScope.SingularityServiceScope
- uid: Singularity.SingularityServiceScope.Dispose
  name: Dispose()
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_Dispose
  commentId: M:Singularity.SingularityServiceScope.Dispose
  fullName: Singularity.SingularityServiceScope.Dispose()
  nameWithType: SingularityServiceScope.Dispose()
- uid: Singularity.SingularityServiceScope.Dispose*
  name: Dispose
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_Dispose_
  commentId: Overload:Singularity.SingularityServiceScope.Dispose
  isSpec: "True"
  fullName: Singularity.SingularityServiceScope.Dispose
  nameWithType: SingularityServiceScope.Dispose
- uid: Singularity.SingularityServiceScope.GetService(System.Type)
  name: GetService(Type)
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_GetService_System_Type_
  commentId: M:Singularity.SingularityServiceScope.GetService(System.Type)
  fullName: Singularity.SingularityServiceScope.GetService(System.Type)
  nameWithType: SingularityServiceScope.GetService(Type)
- uid: Singularity.SingularityServiceScope.GetService*
  name: GetService
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_GetService_
  commentId: Overload:Singularity.SingularityServiceScope.GetService
  isSpec: "True"
  fullName: Singularity.SingularityServiceScope.GetService
  nameWithType: SingularityServiceScope.GetService
- uid: Singularity.SingularityServiceScope.ServiceProvider
  name: ServiceProvider
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_ServiceProvider
  commentId: P:Singularity.SingularityServiceScope.ServiceProvider
  fullName: Singularity.SingularityServiceScope.ServiceProvider
  nameWithType: SingularityServiceScope.ServiceProvider
- uid: Singularity.SingularityServiceScope.ServiceProvider*
  name: ServiceProvider
  href: api/Singularity.SingularityServiceScope.html#Singularity_SingularityServiceScope_ServiceProvider_
  commentId: Overload:Singularity.SingularityServiceScope.ServiceProvider
  isSpec: "True"
  fullName: Singularity.SingularityServiceScope.ServiceProvider
  nameWithType: SingularityServiceScope.ServiceProvider
- uid: Singularity.SingularityServiceScopeFactory
  name: SingularityServiceScopeFactory
  href: api/Singularity.SingularityServiceScopeFactory.html
  commentId: T:Singularity.SingularityServiceScopeFactory
  fullName: Singularity.SingularityServiceScopeFactory
  nameWithType: SingularityServiceScopeFactory
- uid: Singularity.SingularityServiceScopeFactory.#ctor(Singularity.Container)
  name: SingularityServiceScopeFactory(Container)
  href: api/Singularity.SingularityServiceScopeFactory.html#Singularity_SingularityServiceScopeFactory__ctor_Singularity_Container_
  commentId: M:Singularity.SingularityServiceScopeFactory.#ctor(Singularity.Container)
  fullName: Singularity.SingularityServiceScopeFactory.SingularityServiceScopeFactory(Singularity.Container)
  nameWithType: SingularityServiceScopeFactory.SingularityServiceScopeFactory(Container)
- uid: Singularity.SingularityServiceScopeFactory.#ctor*
  name: SingularityServiceScopeFactory
  href: api/Singularity.SingularityServiceScopeFactory.html#Singularity_SingularityServiceScopeFactory__ctor_
  commentId: Overload:Singularity.SingularityServiceScopeFactory.#ctor
  isSpec: "True"
  fullName: Singularity.SingularityServiceScopeFactory.SingularityServiceScopeFactory
  nameWithType: SingularityServiceScopeFactory.SingularityServiceScopeFactory
- uid: Singularity.SingularityServiceScopeFactory.CreateScope
  name: CreateScope()
  href: api/Singularity.SingularityServiceScopeFactory.html#Singularity_SingularityServiceScopeFactory_CreateScope
  commentId: M:Singularity.SingularityServiceScopeFactory.CreateScope
  fullName: Singularity.SingularityServiceScopeFactory.CreateScope()
  nameWithType: SingularityServiceScopeFactory.CreateScope()
- uid: Singularity.SingularityServiceScopeFactory.CreateScope*
  name: CreateScope
  href: api/Singularity.SingularityServiceScopeFactory.html#Singularity_SingularityServiceScopeFactory_CreateScope_
  commentId: Overload:Singularity.SingularityServiceScopeFactory.CreateScope
  isSpec: "True"
  fullName: Singularity.SingularityServiceScopeFactory.CreateScope
  nameWithType: SingularityServiceScopeFactory.CreateScope
- uid: Singularity.SingularitySettings
  name: SingularitySettings
  href: api/Singularity.SingularitySettings.html
  commentId: T:Singularity.SingularitySettings
  fullName: Singularity.SingularitySettings
  nameWithType: SingularitySettings
- uid: Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime)
  name: AutoDispose(ILifetime)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_AutoDispose_Singularity_ILifetime_
  commentId: M:Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime)
  fullName: Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime)
  nameWithType: SingularitySettings.AutoDispose(ILifetime)
- uid: Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime[])
  name: AutoDispose(ILifetime[])
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_AutoDispose_Singularity_ILifetime___
  commentId: M:Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime[])
  name.vb: AutoDispose(ILifetime())
  fullName: Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime[])
  fullName.vb: Singularity.SingularitySettings.AutoDispose(Singularity.ILifetime())
  nameWithType: SingularitySettings.AutoDispose(ILifetime[])
  nameWithType.vb: SingularitySettings.AutoDispose(ILifetime())
- uid: Singularity.SingularitySettings.AutoDispose*
  name: AutoDispose
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_AutoDispose_
  commentId: Overload:Singularity.SingularitySettings.AutoDispose
  isSpec: "True"
  fullName: Singularity.SingularitySettings.AutoDispose
  nameWithType: SingularitySettings.AutoDispose
- uid: Singularity.SingularitySettings.ConfigureServiceBindingGenerators(System.Action{Singularity.Collections.ConfigurationList{Singularity.Resolving.Generators.IServiceBindingGenerator}})
  name: ConfigureServiceBindingGenerators(Action<ConfigurationList<IServiceBindingGenerator>>)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_ConfigureServiceBindingGenerators_System_Action_Singularity_Collections_ConfigurationList_Singularity_Resolving_Generators_IServiceBindingGenerator___
  commentId: M:Singularity.SingularitySettings.ConfigureServiceBindingGenerators(System.Action{Singularity.Collections.ConfigurationList{Singularity.Resolving.Generators.IServiceBindingGenerator}})
  name.vb: ConfigureServiceBindingGenerators(Action(Of ConfigurationList(Of IServiceBindingGenerator)))
  fullName: Singularity.SingularitySettings.ConfigureServiceBindingGenerators(System.Action<Singularity.Collections.ConfigurationList<Singularity.Resolving.Generators.IServiceBindingGenerator>>)
  fullName.vb: Singularity.SingularitySettings.ConfigureServiceBindingGenerators(System.Action(Of Singularity.Collections.ConfigurationList(Of Singularity.Resolving.Generators.IServiceBindingGenerator)))
  nameWithType: SingularitySettings.ConfigureServiceBindingGenerators(Action<ConfigurationList<IServiceBindingGenerator>>)
  nameWithType.vb: SingularitySettings.ConfigureServiceBindingGenerators(Action(Of ConfigurationList(Of IServiceBindingGenerator)))
- uid: Singularity.SingularitySettings.ConfigureServiceBindingGenerators*
  name: ConfigureServiceBindingGenerators
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_ConfigureServiceBindingGenerators_
  commentId: Overload:Singularity.SingularitySettings.ConfigureServiceBindingGenerators
  isSpec: "True"
  fullName: Singularity.SingularitySettings.ConfigureServiceBindingGenerators
  nameWithType: SingularitySettings.ConfigureServiceBindingGenerators
- uid: Singularity.SingularitySettings.Default
  name: Default
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Default
  commentId: P:Singularity.SingularitySettings.Default
  fullName: Singularity.SingularitySettings.Default
  nameWithType: SingularitySettings.Default
- uid: Singularity.SingularitySettings.Default*
  name: Default
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Default_
  commentId: Overload:Singularity.SingularitySettings.Default
  isSpec: "True"
  fullName: Singularity.SingularitySettings.Default
  nameWithType: SingularitySettings.Default
- uid: Singularity.SingularitySettings.ExcludeAutoRegistration(System.Type,Singularity.ITypeMatcher)
  name: ExcludeAutoRegistration(Type, ITypeMatcher)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_ExcludeAutoRegistration_System_Type_Singularity_ITypeMatcher_
  commentId: M:Singularity.SingularitySettings.ExcludeAutoRegistration(System.Type,Singularity.ITypeMatcher)
  fullName: Singularity.SingularitySettings.ExcludeAutoRegistration(System.Type, Singularity.ITypeMatcher)
  nameWithType: SingularitySettings.ExcludeAutoRegistration(Type, ITypeMatcher)
- uid: Singularity.SingularitySettings.ExcludeAutoRegistration*
  name: ExcludeAutoRegistration
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_ExcludeAutoRegistration_
  commentId: Overload:Singularity.SingularitySettings.ExcludeAutoRegistration
  isSpec: "True"
  fullName: Singularity.SingularitySettings.ExcludeAutoRegistration
  nameWithType: SingularitySettings.ExcludeAutoRegistration
- uid: Singularity.SingularitySettings.ExcludeAutoRegistration``1(Singularity.ITypeMatcher)
  name: ExcludeAutoRegistration<TResolverType>(ITypeMatcher)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_ExcludeAutoRegistration__1_Singularity_ITypeMatcher_
  commentId: M:Singularity.SingularitySettings.ExcludeAutoRegistration``1(Singularity.ITypeMatcher)
  name.vb: ExcludeAutoRegistration(Of TResolverType)(ITypeMatcher)
  fullName: Singularity.SingularitySettings.ExcludeAutoRegistration<TResolverType>(Singularity.ITypeMatcher)
  fullName.vb: Singularity.SingularitySettings.ExcludeAutoRegistration(Of TResolverType)(Singularity.ITypeMatcher)
  nameWithType: SingularitySettings.ExcludeAutoRegistration<TResolverType>(ITypeMatcher)
  nameWithType.vb: SingularitySettings.ExcludeAutoRegistration(Of TResolverType)(ITypeMatcher)
- uid: Singularity.SingularitySettings.IgnoreResolveError(Singularity.ITypeMatcher)
  name: IgnoreResolveError(ITypeMatcher)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_IgnoreResolveError_Singularity_ITypeMatcher_
  commentId: M:Singularity.SingularitySettings.IgnoreResolveError(Singularity.ITypeMatcher)
  fullName: Singularity.SingularitySettings.IgnoreResolveError(Singularity.ITypeMatcher)
  nameWithType: SingularitySettings.IgnoreResolveError(ITypeMatcher)
- uid: Singularity.SingularitySettings.IgnoreResolveError*
  name: IgnoreResolveError
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_IgnoreResolveError_
  commentId: Overload:Singularity.SingularitySettings.IgnoreResolveError
  isSpec: "True"
  fullName: Singularity.SingularitySettings.IgnoreResolveError
  nameWithType: SingularitySettings.IgnoreResolveError
- uid: Singularity.SingularitySettings.Microsoft
  name: Microsoft
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Microsoft
  commentId: P:Singularity.SingularitySettings.Microsoft
  fullName: Singularity.SingularitySettings.Microsoft
  nameWithType: SingularitySettings.Microsoft
- uid: Singularity.SingularitySettings.Microsoft*
  name: Microsoft
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_Microsoft_
  commentId: Overload:Singularity.SingularitySettings.Microsoft
  isSpec: "True"
  fullName: Singularity.SingularitySettings.Microsoft
  nameWithType: SingularitySettings.Microsoft
- uid: Singularity.SingularitySettings.With(Singularity.Expressions.IConstructorResolver)
  name: With(IConstructorResolver)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_With_Singularity_Expressions_IConstructorResolver_
  commentId: M:Singularity.SingularitySettings.With(Singularity.Expressions.IConstructorResolver)
  fullName: Singularity.SingularitySettings.With(Singularity.Expressions.IConstructorResolver)
  nameWithType: SingularitySettings.With(IConstructorResolver)
- uid: Singularity.SingularitySettings.With(Singularity.Logging.ISingularityLogger)
  name: With(ISingularityLogger)
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_With_Singularity_Logging_ISingularityLogger_
  commentId: M:Singularity.SingularitySettings.With(Singularity.Logging.ISingularityLogger)
  fullName: Singularity.SingularitySettings.With(Singularity.Logging.ISingularityLogger)
  nameWithType: SingularitySettings.With(ISingularityLogger)
- uid: Singularity.SingularitySettings.With*
  name: With
  href: api/Singularity.SingularitySettings.html#Singularity_SingularitySettings_With_
  commentId: Overload:Singularity.SingularitySettings.With
  isSpec: "True"
  fullName: Singularity.SingularitySettings.With
  nameWithType: SingularitySettings.With
- uid: Singularity.StronglyTypedDecoratorConfigurator`2
  name: StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  href: api/Singularity.StronglyTypedDecoratorConfigurator-2.html
  commentId: T:Singularity.StronglyTypedDecoratorConfigurator`2
  name.vb: StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
  fullName: Singularity.StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  fullName.vb: Singularity.StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
  nameWithType: StronglyTypedDecoratorConfigurator<TDependency, TDecorator>
  nameWithType.vb: StronglyTypedDecoratorConfigurator(Of TDependency, TDecorator)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1
  name: StronglyTypedLateInjectorConfigurator<TInstance>
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html
  commentId: T:Singularity.StronglyTypedLateInjectorConfigurator`1
  name.vb: StronglyTypedLateInjectorConfigurator(Of TInstance)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.Reflection.FieldInfo)
  name: UseField(FieldInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_System_Reflection_FieldInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.Reflection.FieldInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField(System.Reflection.FieldInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(System.Reflection.FieldInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField(FieldInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(FieldInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.String)
  name: UseField(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseField*
  name: UseField
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseField_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseField
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseField
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseField
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseField
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseField
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  name: UseMember(Expression<Func<TInstance, Object>>)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMember_System_Linq_Expressions_Expression_System_Func__0_System_Object___
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  name.vb: UseMember(Expression(Of Func(Of TInstance, Object)))
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMember(System.Linq.Expressions.Expression<System.Func<TInstance, System.Object>>)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember(System.Linq.Expressions.Expression(Of System.Func(Of TInstance, System.Object)))
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMember(Expression<Func<TInstance, Object>>)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember(Expression(Of Func(Of TInstance, Object)))
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember*
  name: UseMember
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMember_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMember
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMember
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMember
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMember
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.Reflection.MethodInfo)
  name: UseMethod(MethodInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_System_Reflection_MethodInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.Reflection.MethodInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(System.Reflection.MethodInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(System.Reflection.MethodInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(MethodInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(MethodInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.String)
  name: UseMethod(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod*
  name: UseMethod
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseMethod_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseMethod
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseMethod
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseMethod
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.Reflection.PropertyInfo)
  name: UseProperty(PropertyInfo)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_System_Reflection_PropertyInfo_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.Reflection.PropertyInfo)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(System.Reflection.PropertyInfo)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(System.Reflection.PropertyInfo)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(PropertyInfo)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(PropertyInfo)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.String)
  name: UseProperty(String)
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_System_String_
  commentId: M:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty(System.String)
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(System.String)
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(System.String)
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty(String)
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty(String)
- uid: Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty*
  name: UseProperty
  href: api/Singularity.StronglyTypedLateInjectorConfigurator-1.html#Singularity_StronglyTypedLateInjectorConfigurator_1_UseProperty_
  commentId: Overload:Singularity.StronglyTypedLateInjectorConfigurator`1.UseProperty
  isSpec: "True"
  fullName: Singularity.StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty
  fullName.vb: Singularity.StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty
  nameWithType: StronglyTypedLateInjectorConfigurator<TInstance>.UseProperty
  nameWithType.vb: StronglyTypedLateInjectorConfigurator(Of TInstance).UseProperty
- uid: Singularity.StronglyTypedServiceConfigurator`2
  name: StronglyTypedServiceConfigurator<TDependency, TInstance>
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html
  commentId: T:Singularity.StronglyTypedServiceConfigurator`2
  name.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance)
- uid: Singularity.StronglyTypedServiceConfigurator`2.As*
  name: As
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_As_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.As
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.As
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).As
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.As
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).As
- uid: Singularity.StronglyTypedServiceConfigurator`2.As``1
  name: As<TService>()
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_As__1
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.As``1
  name.vb: As(Of TService)()
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.As<TService>()
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).As(Of TService)()
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.As<TService>()
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).As(Of TService)()
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject(System.Linq.Expressions.Expression{System.Func{`1}})
  name: Inject(Expression<Func<TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject_System_Linq_Expressions_Expression_System_Func__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject(System.Linq.Expressions.Expression{System.Func{`1}})
  name.vb: Inject(Expression(Of Func(Of TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject(System.Linq.Expressions.Expression<System.Func<TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(System.Linq.Expressions.Expression(Of System.Func(Of TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject(Expression<Func<TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Expression(Of Func(Of TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject*
  name: Inject
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.Inject
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``1(System.Linq.Expressions.Expression{System.Func{``0,`1}})
  name: Inject<TP1>(Expression<Func<TP1, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__1_System_Linq_Expressions_Expression_System_Func___0__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``1(System.Linq.Expressions.Expression{System.Func{``0,`1}})
  name.vb: Inject(Of TP1)(Expression(Of Func(Of TP1, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1>(System.Linq.Expressions.Expression<System.Func<TP1, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1>(Expression<Func<TP1, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1)(Expression(Of Func(Of TP1, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``2(System.Linq.Expressions.Expression{System.Func{``0,``1,`1}})
  name: Inject<TP1, TP2>(Expression<Func<TP1, TP2, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__2_System_Linq_Expressions_Expression_System_Func___0___1__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``2(System.Linq.Expressions.Expression{System.Func{``0,``1,`1}})
  name.vb: Inject(Of TP1, TP2)(Expression(Of Func(Of TP1, TP2, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2>(Expression<Func<TP1, TP2, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2)(Expression(Of Func(Of TP1, TP2, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,`1}})
  name: Inject<TP1, TP2, TP3>(Expression<Func<TP1, TP2, TP3, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__3_System_Linq_Expressions_Expression_System_Func___0___1___2__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,`1}})
  name.vb: Inject(Of TP1, TP2, TP3)(Expression(Of Func(Of TP1, TP2, TP3, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3>(Expression<Func<TP1, TP2, TP3, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3)(Expression(Of Func(Of TP1, TP2, TP3, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,`1}})
  name: Inject<TP1, TP2, TP3, TP4>(Expression<Func<TP1, TP2, TP3, TP4, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__4_System_Linq_Expressions_Expression_System_Func___0___1___2___3__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4>(Expression<Func<TP1, TP2, TP3, TP4, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__5_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__6_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__7_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.Inject``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,`1}})
  name: Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_Inject__8_System_Linq_Expressions_Expression_System_Func___0___1___2___3___4___5___6___7__1___
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.Inject``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,`1}})
  name.vb: Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(System.Linq.Expressions.Expression<System.Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(System.Linq.Expressions.Expression(Of System.Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.Inject<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8>(Expression<Func<TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance>>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).Inject(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8)(Expression(Of Func(Of TP1, TP2, TP3, TP4, TP5, TP6, TP7, TP8, TInstance)))
- uid: Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ILifetime)
  name: With(ILifetime)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_Singularity_ILifetime_
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ILifetime)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With(Singularity.ILifetime)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(Singularity.ILifetime)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With(ILifetime)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(ILifetime)
- uid: Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ServiceAutoDispose)
  name: With(ServiceAutoDispose)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_Singularity_ServiceAutoDispose_
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.With(Singularity.ServiceAutoDispose)
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With(Singularity.ServiceAutoDispose)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(Singularity.ServiceAutoDispose)
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With(ServiceAutoDispose)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With(ServiceAutoDispose)
- uid: Singularity.StronglyTypedServiceConfigurator`2.With*
  name: With
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_With_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.With
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.With
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).With
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.With
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).With
- uid: Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer(System.Action{`1})
  name: WithFinalizer(Action<TInstance>)
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_WithFinalizer_System_Action__1__
  commentId: M:Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer(System.Action{`1})
  name.vb: WithFinalizer(Action(Of TInstance))
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer(System.Action<TInstance>)
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer(System.Action(Of TInstance))
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer(Action<TInstance>)
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer(Action(Of TInstance))
- uid: Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer*
  name: WithFinalizer
  href: api/Singularity.StronglyTypedServiceConfigurator-2.html#Singularity_StronglyTypedServiceConfigurator_2_WithFinalizer_
  commentId: Overload:Singularity.StronglyTypedServiceConfigurator`2.WithFinalizer
  isSpec: "True"
  fullName: Singularity.StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer
  fullName.vb: Singularity.StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer
  nameWithType: StronglyTypedServiceConfigurator<TDependency, TInstance>.WithFinalizer
  nameWithType.vb: StronglyTypedServiceConfigurator(Of TDependency, TInstance).WithFinalizer
- uid: Singularity.Test.Settings
  name: Singularity.Test.Settings
  href: api/Singularity.Test.Settings.html
  commentId: N:Singularity.Test.Settings
  fullName: Singularity.Test.Settings
  nameWithType: Singularity.Test.Settings
- uid: Singularity.Test.Settings.TypeEqualityComparer`1
  name: TypeEqualityComparer<T>
  href: api/Singularity.Test.Settings.TypeEqualityComparer-1.html
  commentId: T:Singularity.Test.Settings.TypeEqualityComparer`1
  name.vb: TypeEqualityComparer(Of T)
  fullName: Singularity.Test.Settings.TypeEqualityComparer<T>
  fullName.vb: Singularity.Test.Settings.TypeEqualityComparer(Of T)
  nameWithType: TypeEqualityComparer<T>
  nameWithType.vb: TypeEqualityComparer(Of T)
- uid: Singularity.Test.Settings.TypeEqualityComparer`1.Equals(`0,`0)
  name: Equals(T, T)
  href: api/Singularity.Test.Settings.TypeEqualityComparer-1.html#Singularity_Test_Settings_TypeEqualityComparer_1_Equals__0__0_
  commentId: M:Singularity.Test.Settings.TypeEqualityComparer`1.Equals(`0,`0)
  fullName: Singularity.Test.Settings.TypeEqualityComparer<T>.Equals(T, T)
  fullName.vb: Singularity.Test.Settings.TypeEqualityComparer(Of T).Equals(T, T)
  nameWithType: TypeEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: TypeEqualityComparer(Of T).Equals(T, T)
- uid: Singularity.Test.Settings.TypeEqualityComparer`1.Equals*
  name: Equals
  href: api/Singularity.Test.Settings.TypeEqualityComparer-1.html#Singularity_Test_Settings_TypeEqualityComparer_1_Equals_
  commentId: Overload:Singularity.Test.Settings.TypeEqualityComparer`1.Equals
  isSpec: "True"
  fullName: Singularity.Test.Settings.TypeEqualityComparer<T>.Equals
  fullName.vb: Singularity.Test.Settings.TypeEqualityComparer(Of T).Equals
  nameWithType: TypeEqualityComparer<T>.Equals
  nameWithType.vb: TypeEqualityComparer(Of T).Equals
- uid: Singularity.Test.Settings.TypeEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(T)
  href: api/Singularity.Test.Settings.TypeEqualityComparer-1.html#Singularity_Test_Settings_TypeEqualityComparer_1_GetHashCode__0_
  commentId: M:Singularity.Test.Settings.TypeEqualityComparer`1.GetHashCode(`0)
  fullName: Singularity.Test.Settings.TypeEqualityComparer<T>.GetHashCode(T)
  fullName.vb: Singularity.Test.Settings.TypeEqualityComparer(Of T).GetHashCode(T)
  nameWithType: TypeEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: TypeEqualityComparer(Of T).GetHashCode(T)
- uid: Singularity.Test.Settings.TypeEqualityComparer`1.GetHashCode*
  name: GetHashCode
  href: api/Singularity.Test.Settings.TypeEqualityComparer-1.html#Singularity_Test_Settings_TypeEqualityComparer_1_GetHashCode_
  commentId: Overload:Singularity.Test.Settings.TypeEqualityComparer`1.GetHashCode
  isSpec: "True"
  fullName: Singularity.Test.Settings.TypeEqualityComparer<T>.GetHashCode
  fullName.vb: Singularity.Test.Settings.TypeEqualityComparer(Of T).GetHashCode
  nameWithType: TypeEqualityComparer<T>.GetHashCode
  nameWithType.vb: TypeEqualityComparer(Of T).GetHashCode
- uid: Singularity.Transient
  name: Transient
  href: api/Singularity.Transient.html
  commentId: T:Singularity.Transient
  fullName: Singularity.Transient
  nameWithType: Transient
- uid: Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  name: ApplyLifetimeOnExpression(Scoped, ExpressionContext)
  href: api/Singularity.Transient.html#Singularity_Transient_ApplyLifetimeOnExpression_Singularity_Scoped_Singularity_Expressions_ExpressionContext_
  commentId: M:Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped,Singularity.Expressions.ExpressionContext)
  fullName: Singularity.Transient.ApplyLifetimeOnExpression(Singularity.Scoped, Singularity.Expressions.ExpressionContext)
  nameWithType: Transient.ApplyLifetimeOnExpression(Scoped, ExpressionContext)
- uid: Singularity.Transient.ApplyLifetimeOnExpression*
  name: ApplyLifetimeOnExpression
  href: api/Singularity.Transient.html#Singularity_Transient_ApplyLifetimeOnExpression_
  commentId: Overload:Singularity.Transient.ApplyLifetimeOnExpression
  isSpec: "True"
  fullName: Singularity.Transient.ApplyLifetimeOnExpression
  nameWithType: Transient.ApplyLifetimeOnExpression
- uid: Singularity.WeaklyTypedDecoratorConfigurator
  name: WeaklyTypedDecoratorConfigurator
  href: api/Singularity.WeaklyTypedDecoratorConfigurator.html
  commentId: T:Singularity.WeaklyTypedDecoratorConfigurator
  fullName: Singularity.WeaklyTypedDecoratorConfigurator
  nameWithType: WeaklyTypedDecoratorConfigurator
- uid: Singularity.WeaklyTypedLateInjectorConfigurator
  name: WeaklyTypedLateInjectorConfigurator
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html
  commentId: T:Singularity.WeaklyTypedLateInjectorConfigurator
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator
  nameWithType: WeaklyTypedLateInjectorConfigurator
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  name: UseMethod(MethodInfo)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_System_Reflection_MethodInfo_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.Reflection.MethodInfo)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod(MethodInfo)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  name: UseMethod(String)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_System_String_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod(System.String)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod(String)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod*
  name: UseMethod
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseMethod_
  commentId: Overload:Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod
  isSpec: "True"
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseMethod
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseMethod
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  name: UseProperty(PropertyInfo)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_System_Reflection_PropertyInfo_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.Reflection.PropertyInfo)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty(PropertyInfo)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  name: UseProperty(String)
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_System_String_
  commentId: M:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty(System.String)
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty(String)
- uid: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty*
  name: UseProperty
  href: api/Singularity.WeaklyTypedLateInjectorConfigurator.html#Singularity_WeaklyTypedLateInjectorConfigurator_UseProperty_
  commentId: Overload:Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty
  isSpec: "True"
  fullName: Singularity.WeaklyTypedLateInjectorConfigurator.UseProperty
  nameWithType: WeaklyTypedLateInjectorConfigurator.UseProperty
- uid: Singularity.WeaklyTypedServiceConfigurator
  name: WeaklyTypedServiceConfigurator
  href: api/Singularity.WeaklyTypedServiceConfigurator.html
  commentId: T:Singularity.WeaklyTypedServiceConfigurator
  fullName: Singularity.WeaklyTypedServiceConfigurator
  nameWithType: WeaklyTypedServiceConfigurator
- uid: Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  name: As(Type)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_As_System_Type_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  fullName: Singularity.WeaklyTypedServiceConfigurator.As(System.Type)
  nameWithType: WeaklyTypedServiceConfigurator.As(Type)
- uid: Singularity.WeaklyTypedServiceConfigurator.As*
  name: As
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_As_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.As
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.As
  nameWithType: WeaklyTypedServiceConfigurator.As
- uid: Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  name: Inject(Expression)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_Inject_System_Linq_Expressions_Expression_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  fullName: Singularity.WeaklyTypedServiceConfigurator.Inject(System.Linq.Expressions.Expression)
  nameWithType: WeaklyTypedServiceConfigurator.Inject(Expression)
- uid: Singularity.WeaklyTypedServiceConfigurator.Inject*
  name: Inject
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_Inject_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.Inject
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.Inject
  nameWithType: WeaklyTypedServiceConfigurator.Inject
- uid: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  name: With(ILifetime)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_Singularity_ILifetime_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  fullName: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ILifetime)
  nameWithType: WeaklyTypedServiceConfigurator.With(ILifetime)
- uid: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  name: With(ServiceAutoDispose)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_Singularity_ServiceAutoDispose_
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  fullName: Singularity.WeaklyTypedServiceConfigurator.With(Singularity.ServiceAutoDispose)
  nameWithType: WeaklyTypedServiceConfigurator.With(ServiceAutoDispose)
- uid: Singularity.WeaklyTypedServiceConfigurator.With*
  name: With
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_With_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.With
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.With
  nameWithType: WeaklyTypedServiceConfigurator.With
- uid: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action{System.Object})
  name: WithFinalizer(Action<Object>)
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_WithFinalizer_System_Action_System_Object__
  commentId: M:Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action{System.Object})
  name.vb: WithFinalizer(Action(Of Object))
  fullName: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action<System.Object>)
  fullName.vb: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer(System.Action(Of System.Object))
  nameWithType: WeaklyTypedServiceConfigurator.WithFinalizer(Action<Object>)
  nameWithType.vb: WeaklyTypedServiceConfigurator.WithFinalizer(Action(Of Object))
- uid: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer*
  name: WithFinalizer
  href: api/Singularity.WeaklyTypedServiceConfigurator.html#Singularity_WeaklyTypedServiceConfigurator_WithFinalizer_
  commentId: Overload:Singularity.WeaklyTypedServiceConfigurator.WithFinalizer
  isSpec: "True"
  fullName: Singularity.WeaklyTypedServiceConfigurator.WithFinalizer
  nameWithType: WeaklyTypedServiceConfigurator.WithFinalizer
